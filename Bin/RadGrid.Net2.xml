<?xml version="1.0"?>
<doc>
    <assembly>
        <name>RadGrid.Net2</name>
    </assembly>
    <members>
        <member name="T:Telerik.WebControls.GridBoolColumnEditor">
            <summary>This is a base class for all column editors for GridCheckBoxColumn.</summary>
            <remarks>It defines the base properties for controls that can edit boolean values.</remarks>
        </member>
        <member name="T:Telerik.WebControls.IGridColumnEditor">
            <summary>
            Interface that describes the baseic column editor functionality, needed for a
            class that should be responsible for editing of a content of a cell in a
            <see cref="T:Telerik.WebControls.GridEditableItem"/> 
            </summary>
            <remarks>
            Implement column editor to provide extended editing functionality in RadGrid. The column-editor inheritors should provide the methods for
            creating the column editor control inside the container (generally a grid TableCell). For example the default column editor for GridBoundColumn
            creates a TextBox control and adds it to the corresponding GridtableCell when the InstantiateInControl method is called.
            To inherit the base implementation of a column editor control in RadGrid you may consider deriving from <see cref="T:Telerik.WebControls.GridColumnEditorBase"/> instead implementing the IColumnEditor interface.
            </remarks>
        </member>
        <member name="M:Telerik.WebControls.IGridColumnEditor.InitializeInControl(System.Web.UI.Control)">
            <summary>
            Implement this member to add control int the given container. 
            After the call to this method the ContainerControl property should return the instance of containerControl parameter passed to this function.
            </summary>
            <param name="containerControl"></param>
        </member>
        <member name="M:Telerik.WebControls.IGridColumnEditor.InitializeFromControl(System.Web.UI.Control)">
            <summary>
            The editor should recreate its state and imput controls from the Container.
            </summary>
            <param name="containerControl">control (generally a TableCell) that contains the input controls, previously instantiated within the InitializeInControl method call</param>
        </member>
        <member name="P:Telerik.WebControls.IGridColumnEditor.ContainerControl">
            <summary>
            Gets the instance of the Container control (generally a TableCell), after the last call of InstantiateInControl method
            </summary>
        </member>
        <member name="P:Telerik.WebControls.IGridColumnEditor.IsInitialized">
            <summary>
            Get value if the editor has been initialized after an InitializeInControl or InitializeFromControl method call
            </summary>
        </member>
        <member name="P:Telerik.WebControls.IGridColumnEditor.IsInEditMode">
            <summary>
            Get a value indicating if the column/row the editor currently is instantiated is in edit mode.
            </summary>
        </member>
        <member name="M:Telerik.WebControls.GridColumnEditorBase.CreateControls">
            <summary>
            Create the input/edit controls belonging to the editor and prepare for AddControlsToContainer call.
            </summary>
        </member>
        <member name="M:Telerik.WebControls.GridColumnEditorBase.AddControlsToContainer">
            <summary>
            Implement this member to create the edit controls in the grid cell.
            This method is called from each column's InitializeCell method, when a <see cref="T:Telerik.WebControls.GridItem"/> initializes its cells.
            </summary>
        </member>
        <member name="M:Telerik.WebControls.GridColumnEditorBase.LoadControlsFromContainer">
            <summary>
            This method should recrteate the state of the column editor (edit controls, etc) from the container.
            This method is called when <see cref="M:Telerik.WebControls.GridTableView.ExtractValuesFromItem(System.Collections.IDictionary,Telerik.WebControls.GridEditableItem)"/> method is called, or when <see cref="!:GridEditableItem.EditManager.GetColumnEditor"/> is called.
            </summary>
            <remarks>
            This method is should prepare the column editor to extract values from the edit controls residign in a TableCell of the grid.
            </remarks>
        </member>
        <member name="P:Telerik.WebControls.GridBoolColumnEditor.Value">
            <summary>
            Gets or sets the value for each cell in a
            <strong>GridCheckBoxColumn</strong>.
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridCheckBoxColumnEditor.CheckBoxControl">
            <summary>
            Provides a reference to the control in the corresponding grid cell of the current
            <strong>GridCheckBoxColumn</strong>.
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridCheckBoxColumnEditor.CheckBoxStyle">
            <summary>
            Gets or sets the style defining the appearance of the corresponding
            check-box.
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridCheckBoxColumnEditor.IsInitialized">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.WebControls.GridCheckBoxColumnEditor.Value">
            <summary>
            Gets or sets the value for each cell in a
            <strong>GridCheckBoxColumn</strong>.
            </summary>
        </member>
        <member name="T:Telerik.WebControls.GridCreateColumnEditorEventHandler">
            <summary>
            Summary description for GridCreateColumnEditorEvent.
            </summary>
        </member>
        <member name="T:Telerik.WebControls.GridDropDownColumnEditor">
            <summary>
            Summary description for GridDropDownColumnEditor.
            </summary>
        </member>
        <member name="T:Telerik.WebControls.GridTextColumnEditor">
            <summary>
            Base class that intruduces the editor of GridBoundColumn. THis can be an editor that creates a simple TextBox control, ot RichTexst editors, that has a single string property Text.
            </summary>
        </member>
        <member name="T:Telerik.WebControls.GridTextBoxColumnEditor">
            <summary>
            Class tha implements data editing of a GridBoundColumn with a single TextBox control.
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridTextBoxColumnEditor.TextBoxControl">
            <summary>
            Gets The text box instance created of extracted from a cell after calls to AddControlsToContainer or LoadControlsFromContainer methods.
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridTextBoxColumnEditor.TextBoxStyle">
            <summary>
            Gets the instace of the Style that would be applied to the TextBox control, when initializing in a TableCell.
            </summary>
        </member>
        <member name="T:Telerik.WebControls.GridBoundColumn">
            <summary>
            A column type for the RadGrid control that is bound to a field in a data
            source.
            </summary>
            <seealso cref="!:http://www.telerik.com/demos/aspnet/Grid/Examples/GeneralFeatures/ColumnTypes/DefaultCS.aspx" cat="Online demos">Grid column types</seealso>
            <remarks>
            	<para>The default data binding (when <strong>AutoGenerateColumns</strong> property
                is set to true) generates <strong>GridBoundColumn</strong> type of columns. It
                displays each item from the DataSource field as text. This column is
                <a href="grdEditForms.html">editable</a> (implements the
                <a href="RadGrid%7ETelerik.WebControls.IGridEditableColumn.html">IGridEditableColumn</a>
                interface) and provides by default <strong>GridTextColumnEditor</strong>, used for
                editing the text in each item.</para>
            	<para><strong>GridBoundColumn</strong> has three similar and yet different
                properties controlling its visibility and rendering in a browser in regular and in
                edit mode:</para>
            	<list type="bullet">
            		<item><strong>Display</strong> - concerns only the appearance of the column in
                    browser mode, client-side. The column will be rendered in the browser but all
                    the cells will be styled with <em>display: none</em>. The column editor will be
                    visible in edit mode.</item>
            		<item><strong>Visible</strong> - will stop the column cells from rendering in
                    browser mode. The column will be visible in edit mode.</item>
            		<item>
            			<strong>ReadOnly</strong> - the column will be displayed according to the
                        settings of previous properties in browser mode but will not appear in the
                        edit-form.<br/>
            			<div>
            				<list type="table">
            					<item>
            						<term>
            							<img src="http://www.telerik.com/help/aspnet/grid/images/hs-note.gif"/>
            						</term>
            						<description>None of these properties can prevent you from
                                    accessing the column cells' content server-side using the
                                    <strong>UniqueName</strong> of the column.</description>
            					</item>
            				</list>
            			</div>
            		</item>
            	</list>
            </remarks>
            <example>
            	<pre>
            &lt;rad:GridBoundColumn FooterText="BoundColumn footer" UniqueName="CustomerID" SortExpression="CustomerID"<br/>HeaderText="Bound&lt;br/&gt;Column" DataField="CustomerID"&gt;<br/>&lt;/rad:GridBoundColumn&gt;
                </pre>
            </example>
            <seealso cref="!:grdColumnTypes.html" cat="RadGrid Manual">Grid Column types</seealso>
            <seealso cref="!:grdDesignColumns.html" cat="RadGrid Manual">Adding columns design-time</seealso>
            <seealso cref="!:grdUsingColumns.html" cat="RadGrid Manual">Using columns</seealso>
        </member>
        <member name="T:Telerik.WebControls.GridEditableColumn">
            <summary>
            All columns in RadGrid that have editing capabilities derive from GridEditableColumn.
            This class implements the base functionality for editing, using column editors etc.
            </summary>
            <remarks>
            Provides IGridEditableColumn interface, which RadGrid uses to operate with the
            state of all the editable columns.
            </remarks>
        </member>
        <member name="T:Telerik.WebControls.GridColumn">
            <summary>
            	<para>A Column is the main logic unit that relates the content of the grid to
            properties of the objects in the DataSource.</para>
            	<para>The <b>GridColumn</b> defines the properties and methods that are common to all
            column types in RadGrid. As it is an abstract class (MustInherit in VB.NET)
            <b>GridColumn</b> class can not be created directly. You should inherit it and use its
            children.</para>
            </summary>
            <remarks>
            	<strong>GridColumn</strong> is the base abstract class that implements the
            functionality of a grid column. All inherited classes modify the base behavior
            corresponding to the specific data that should be displayed/edited in RadGrid. The
            columns that have editing capabilities derrive from
            <see cref="T:Telerik.WebControls.GridEditableColumn"/> class. Other instances display data, buttons, and
            so on in the cells of the grid regarding the type of the Item/row in which the cell
            resides. In you code you can create only instances of the derrived classes. In order to
            display a column in the grid you should add it in the corresponding
            <see cref="P:Telerik.WebControls.GridTableView.Columns"/> collection. Since the column collection is
            fully persisted in the ViewSteate you should follow the rules that apply to creating
            asp.net server controls dynamically, when adding columns to grid tables
            programmatically.
            </remarks>
        </member>
        <member name="F:Telerik.WebControls.GridColumn.footerStyle">
            <summary>
            	<para>Using the <strong>FooterStyle</strong> property lets you enhance the appearance
            of the footer section of the column. You can set forecolor, backcolor, font and content
            alignment.</para>
            </summary>
        </member>
        <member name="F:Telerik.WebControls.GridColumn.headerStyle">
            <summary>
            	<para>Using the <strong>HeaderStyle</strong> property lets you enhance the appearance
            of the header section of the column. You can set forecolor, backcolor, font and content
            alignment.</para>
            </summary>
        </member>
        <member name="F:Telerik.WebControls.GridColumn.itemStyle">
            <summary>
            	<para>Use this property to enhance the appearance of the item cells of the column. You
            can provide a custom style for Common style attributes that can be adjusted such as:
            forecolor, backcolor, font, and content alignment within the cell.</para>
            </summary>
        </member>
        <member name="M:Telerik.WebControls.GridColumn.#ctor">
            <summary>Creates and initializes a new column with its base properties.</summary>
        </member>
        <member name="M:Telerik.WebControls.GridColumn.Initialize">
            <summary>
            	<para>The <b>Initialize</b> method is inherited by a derived
            <strong>GridColumn</strong> class. Is is used to reset a column of the derived
            type.</para>
            </summary>
            <remarks>
            	<para>This method is mainly used to reset properties common for all column types
            derived from GridColumn class.</para>
            	<para>The <b>Initialize</b> method is usually called during data-binding, prior to the
            first row being bound.</para>
            </remarks>
        </member>
        <member name="M:Telerik.WebControls.GridColumn.InitializeCell(System.Web.UI.WebControls.TableCell,System.Int32,Telerik.WebControls.GridItem)">
            <summary>
            	<para>After a call to this method the column should add the corresponding controls
            (text, labels, input controls) into the cell given, regarding the inItem type and
            column index.</para>
            	<para><strong>Note:</strong> This method is called within RadGrid and is not intended
            to be used directly from your code.</para>
            </summary>
        </member>
        <member name="M:Telerik.WebControls.GridColumn.SupportsFiltering">
            <summary>
            This method should be used in case you develop your own column. It returns true
            if the column supports filtering.
            </summary>
        </member>
        <member name="M:Telerik.WebControls.GridColumn.RefreshCurrentFilterValue(Telerik.WebControls.GridFilteringItem,System.String)">
            <summary>
            Modifies the <strong>CurrentFilterFunction</strong> and
            <strong>CurrentFilterValue</strong> properties according to the function given and the
            corresponding filter text-box control in the filtering item.
            </summary>
        </member>
        <member name="M:Telerik.WebControls.GridColumn.RefreshCurrentFilterValue(Telerik.WebControls.GridFilteringItem)">
            <summary>
            Modifies the <strong>CurrentFilterValue</strong> property according to the
            corresponding selected item in the filter text-box control in the filtering
            item.
            </summary>
        </member>
        <member name="M:Telerik.WebControls.GridColumn.SetCurrentFilterValueToControl(System.Web.UI.WebControls.TableCell)">
            <summary>
            Sets the value of the property CurrentFilterValue as a text on the TextBox control found in the cell
            </summary>
            <param name="cell"></param>
        </member>
        <member name="M:Telerik.WebControls.GridColumn.GetCurrentFilterValueFromControl(System.Web.UI.WebControls.TableCell)">
            <summary>
            Gets the value of the Text property of a textbox control found in the cell, used to set the value of the CurrentFilterValue property.
            </summary>
            <param name="cell"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WebControls.GridColumn.EvaluateFilterExpression(Telerik.WebControls.GridFilteringItem)">
            <summary>
            Gets a string representing a filter expression, based on the settings of all
            columns that support filtering, with a syntax ready to be used by a
            <strong>DataView</strong> object
            </summary>
        </member>
        <member name="M:Telerik.WebControls.GridColumn.SetupFilterControls(System.Web.UI.WebControls.TableCell)">
            <summary>
            Instantiates the filter controls (text-box, image.) in the cell given
            </summary>
            <param name="cell"></param>
        </member>
        <member name="M:Telerik.WebControls.GridColumn.GetFilterFunctionsList(Telerik.WebControls.GridFilterListOptions,System.Collections.ArrayList)">
            <summary>
            Gets a list of filter functions based on the settings of the <see cref="P:Telerik.WebControls.GridColumn.FilterListOptions"/> property.
            </summary>
            <param name="options"></param>
            <param name="sourceList"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WebControls.GridColumn.PrepareCell(System.Web.UI.WebControls.TableCell,Telerik.WebControls.GridItem)">
            <summary>
            Prepares the cell of the item given, when grid is rendered. 
            </summary>
            <param name="cell"></param>
            <param name="item"></param>
        </member>
        <member name="M:Telerik.WebControls.GridColumn.ToString">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.WebControls.GridColumn.ResetCurrentFilterValue(Telerik.WebControls.GridFilteringItem)">
            <summary>
            Resets the values of the <see cref="P:Telerik.WebControls.GridColumn.CurrentFilterFunction"/> and
            <see cref="P:Telerik.WebControls.GridColumn.CurrentFilterValue"/> properties to their defaults.
            </summary>
        </member>
        <member name="M:Telerik.WebControls.GridColumn.GetSortExpression">
            <summary>
            By default returns the SortExpression of the column. If the SortExpression is not set explicitly, it would be calculated, based on the
            DataField of the column.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.WebControls.GridColumn.GetDefaultGroupByExpression">
            <summary>
            Calculate the default Group-by expression based on the settings of the
            <strong>DataField</strong> (if available)
            </summary>
            <remarks>
            For example, if a column's DataField is ProductType the default group-by expression will be:
            'ProductType Group By ProductType'
            </remarks>
        </member>
        <member name="M:Telerik.WebControls.GridColumn.Clone">
            <remarks>
            	<strong>Note:</strong> When implementing/overriding this method be sure to call
            the base member or call <strong>CopyBaseProperties</strong> to be sure that all base
            properties will be copied accordingly
            </remarks>
            <summary>Creates a copy of the current column.</summary>
        </member>
        <member name="M:Telerik.WebControls.GridColumn.IsBoundToFieldName(System.String)">
            <summary>
            This method returns true if the column is bound to the specified field
            name.
            </summary>
            <param name="name">The name of the DataField, which will be checked.</param>
        </member>
        <member name="M:Telerik.WebControls.GridColumn.CompareTo(System.Object)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.WebControls.GridColumn.GetCustomPropertyDataFields(System.Object)">
            <summary>
            	<para>This method should be used in case you develop your own column. It returns the
            full list of <strong>DataFields</strong> used by the column.
            <strong>GridTableView</strong> uses this to decide which <strong>DataFields</strong>
            from the specified <strong>DataSource</strong> will be inlcuded in case of
            <strong>GridTableView.RetrieveAllDataFields</strong> is set to
            <strong>false</strong>.</para>
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridColumn.CurrentFilterValue">
            <summary>Gets or sets a value of the currently applied filter.</summary>
            <value>
            This property returns a <strong><em>string</em></strong>, representing the
            current value, for which the columns is filtered (the value, which the user has entered
            in the filtering text box).
            </value>
        </member>
        <member name="P:Telerik.WebControls.GridColumn.CurrentFilterFunction">
            <summary>Gets or sets the current function used for filtering.</summary>
            <value>
            	<para>This property returns a value of type
                <strong><em>Telerik.WebControls.GridKnownFunction</em></strong>. The possible
                values are:</para>
            	<para>GridKnownFunction.<strong><em>Between</em></strong><br/>
                GridKnownFunction.<strong><em>Contains</em></strong><br/>
                GridKnownFunction.<strong><em>Custom</em></strong><br/>
                GridKnownFunction.<strong><em>DoesNotContain</em></strong><br/>
                GridKnownFunction.<strong><em>EndsWith</em></strong><br/>
                GridKnownFunction.<strong><em>EqualTo</em></strong><br/>
                GridKnownFunction.<strong><em>GreaterThan</em></strong><br/>
                GridKnownFunction.<strong><em>GridKnownFunction</em></strong><br/>
                GridKnownFunction.<strong><em>GreaterThanOrEqualTo</em></strong><br/>
                GridKnownFunction.<strong><em>IsEmpty</em></strong><br/>
                GridKnownFunction.<strong><em>IsNull</em></strong><br/>
                GridKnownFunction.<strong><em>LessThan</em></strong><br/>
                GridKnownFunction.<strong><em>LessThanOrEqualTo</em></strong><br/>
                GridKnownFunction.<strong><em>NoFilter</em></strong><br/>
                GridKnownFunction.<strong><em>NotBetween</em></strong><br/>
                GridKnownFunction.<strong><em>NotEqualTo</em></strong><br/>
                GridKnownFunction.<strong><em>NotIsEmpty</em></strong><br/>
                GridKnownFunction.<strong><em>NotIsNull</em></strong><br/>
                GridKnownFunction.<strong><em>StartsWith</em></strong></para>
            </value>
        </member>
        <member name="P:Telerik.WebControls.GridColumn.FilterListOptions">
            <summary>
            Gets or sets the value indincating which of the filter functions should be
            available for that column. For more information see
            <see cref="T:Telerik.WebControls.GridFilterListOptions"/> enumaration.
            </summary>
            <value>
            	<para>This property returns a value of type
                <strong><em>Telerik.WebControls.GridFilterListOptions</em></strong>. The possible
                values are:</para>
            	<para>
                Telerik.WebControls.GridFilterListOptions.<strong><em>AllowAllFilters</em></strong><br/>
                Telerik.WebControls.GridFilterListOptions.<strong><em>VaryByDataType</em></strong><br/>
                Telerik.WebControls.GridFilterListOptions.<strong><em>VaryByDataTypeAllowCustom</em></strong></para>
            </value>
        </member>
        <member name="P:Telerik.WebControls.GridColumn.AutoPostBackOnFilter">
            <summary>
            Gets or sets a value indicating whether the grid should automatically postback,
            when the value in the filter text-box changes, and the the focus moves to another
            element.
            </summary>
            <value>
            This property returns a <strong><em>Boolean</em></strong> value, indicating
            whether the grid will postback, once the focus moves to another element, and the text
            of the filtering textbox has changed.
            </value>
        </member>
        <member name="P:Telerik.WebControls.GridColumn.FilterImageUrl">
            <summary>
            Gets or sets a string representing the URL to the image used in the filtering
            box.
            </summary>
            <value>
            A <strong><em>string</em></strong>, representing the URL to the image used in the
            filtering box.
            </value>
        </member>
        <member name="P:Telerik.WebControls.GridColumn.SortAscImageUrl">
            <summary>
            Gets or sets a string representing the URL to the image used for sorting in
            ascending mode.
            </summary>
            <value>
            A <strong><em>string,</em></strong> representing the URL to the image used for
            sorting in ascending mode
            </value>
        </member>
        <member name="P:Telerik.WebControls.GridColumn.SortDescImageUrl">
            <summary>
            Gets or sets a string representing the URL to the image used for sorting in
            descending mode.
            </summary>
            <value>
            A <strong><em>string</em></strong>, representing the URL to the image used for
            sorting in descending mode
            </value>
        </member>
        <member name="P:Telerik.WebControls.GridColumn.DataTypeName">
            <summary>
            Gets the string representation of the <strong>DataType</strong> property of the
            column, needed for the client-side grid instance.
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridColumn.FooterStyle">
            <summary>
            Style of the cell in the footer item of the grid, corresponding to the column.
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridColumn.FooterText">
            <summary>
            	<para>Use the <b>FooterText</b> property to specify your own or determine the current
            text for the footer section of the column.</para>
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridColumn.HeaderImageUrl">
            <summary>
            Gets or sets the URL of an image in the cell in the header item of the grid
            current column. You can use a relative or an absolute URL.
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridColumn.HeaderStyle">
            <summary>
            Style of the cell in the header item of the grid, corresponding to the column.
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridColumn.HeaderText">
            <summary>
            Use the <b>HeaderText</b> property to specify your own or determine the current
            text for the header section of the column.
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridColumn.ItemStyle">
            <summary>
            Style of the cells, corresponding to the column.
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridColumn.Owner">
            <summary>
            Gets the instance of the GridTableVeiw wich owns this column instance.
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridColumn.SortExpression">
            <summary>
            The string representing a filed-name from the DataSource that should be used when grid sorts by this column. For example:
            'EmployeeName'
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridColumn.GroupByExpression">
            <summary>
            	<para>The group-expression that should be used when grid is grouping-by this column. If
            not set explicitly, RadGrid will generate a group expression based on the DataField of
            the column (if available), using the <see cref="M:Telerik.WebControls.GridColumn.GetDefaultGroupByExpression"/>
            method.</para>
            	<para>The grouping can be turned on/off for columns like GridBoundColumn using
            <see cref="P:Telerik.WebControls.GridColumn.Groupable"/> property.</para>
            	<para>For more information about the Group-By expressions and their syntax, see
            <see cref="T:Telerik.WebControls.GridGroupByExpression"/> class.</para>
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridColumn.ShowSortIcon">
            <summary>
            Get or Sets a value indicating whether a sort icon should appear next to the
            header button, when a column is sorted.
            </summary>
            <value>
            This property returns a <strong><em>Boolean</em></strong> value, indicating
            whether a sort icon should appear next to the header button, when a column is
            sorted.
            </value>
        </member>
        <member name="P:Telerik.WebControls.GridColumn.Visible">
            <summary>
            Gets or sets a value indicating if the column and all corresponding cells would be rendered.
            </summary>
            <value>
            This property returns a <strong><em>Boolean</em></strong> value, indicating
            whether the cells corresponding to the column, would be visible on the client, and
            whether they would be rendered on the client.
            </value>
        </member>
        <member name="P:Telerik.WebControls.GridColumn.Display">
            <summary>
            Gets or sets a value indicating whether the cells corresponding to a column would be rendered with a 'display:none' style attribute (end-user-not-visible).
            To completely prevent cells from rendering, set the <see cref="P:Telerik.WebControls.GridColumn.Visible"/> property to false, instead of the Display property.
            </summary>
            <value>
            This property returns a <strong><em>Boolean</em></strong> value, indicating
            whether the cells corresponding to the column would be rendered with a 'display:none'
            style attribute (end-user-not-visible).
            </value>
        </member>
        <member name="P:Telerik.WebControls.GridColumn.OwnerID">
            <summary>
            Gets the value of the ClientID property of the GridTableView that owns this column. This property value is used by grid's client object
            </summary>
            <value>
            The return value of this property is a <strong><em>string</em></strong>,
            representing the clientID of the GridTableView, which contains the column. This is the
            ClientID of the grid instance, followed by "_" and another string, representing the
            place of the container in the control hierarchy. For the MasterTableView, the default
            OwnerID for a column will look like: "RadGrid1_ctl01".
            </value>
        </member>
        <member name="P:Telerik.WebControls.GridColumn.OwnerGridID">
            <summary>
            Gets the value of the ClientID property of the RadGrid instance that owns this column. This property value is used by grid's client object
            </summary>
            <value>
            This property returns a <strong><em>string</em></strong>, which represents a the
            ClientID for the control.
            </value>
        </member>
        <member name="P:Telerik.WebControls.GridColumn.Resizable">
            <summary>
            Gets or sets a value indicating whether the column can be resized client-side.
            You can use this property, by setting it to false, to disable resizing for a particular
            column, while preserving this functionality for all the other columns.
            </summary>
            <value>
            The property returns a <strong><em>boolean</em></strong> value, indicating
            whether the column can be resized on the client.
            </value>
        </member>
        <member name="P:Telerik.WebControls.GridColumn.Reorderable">
            <summary>
            Gets or sets a value indicating whether the column can be reordered client-side.
            </summary>
            <value>
            This property returns a boolean value, indicating whether the column is
            reorderable. The default value is true, meaning that the column can be reordered, using
            the SwapColumns client side method.
            </value>
        </member>
        <member name="P:Telerik.WebControls.GridColumn.Groupable">
            <summary>
            Gets or sets a value indicating whether you will be able to group
            Telerik RadGrid by that column. By default this property is
            <strong>true</strong>.
            </summary>
            <value>
            A boolean value of either <strong>true</strong>, when you are able to group by
            that column, or <strong>false.</strong>
            </value>
            <remarks>
            See Telerik RadGrid manual for details about using grouping. If
            <strong>Groupable</strong> is <em>false</em> the column header cannot be dragged to the
            <a href="RadGrid~Telerik.WebControls.RadGrid~GroupPanel.html">GroupPanel</a>.
            <!--DXMETADATA end -->
            </remarks>
            <example>
            	<para>Using this property, you can easily turn off grouping for one or more
                columns, while still allowing this functionality for all other columns in the
                control. This is demonstrated in the code sample below:</para>
            	<pre>
            &lt;rad:GridBoundColumn<br/>   DataField="ContactName"<br/>   HeaderText="ContactName"<br/>   SortExpression="ContactName"<br/>   UniqueName="ContactName"<br/>   Groupable="false"&gt;<br/>&lt;/rad:GridBoundColumn&gt;
                </pre>
            </example>
        </member>
        <member name="P:Telerik.WebControls.GridColumn.ColumnType">
            <summary>
            Gets the string representation of the type-name of this instance. The value is
            used by RadGrid to determine the type of the columns persisted into the ViewState, when
            recreating the grid after postback. The value is also used by the grid client-side
            object. This property is read only.
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridColumn.HeaderButtonType">
            <summary>
            	<para>Gets or sets the button type of the button rendered in the header item, used
                for sorting. The possible values that this property accepts are:</para>
            	<para>Telerik.WebControls.GridHeaderButtonType.<strong>LinkButton</strong><br/>
                Telerik.WebControls.GridHeaderButtonType.<strong>PushButton</strong><br/>
                Telerik.WebControls.GridHeaderButtonType.<strong>TextButton</strong></para>
            </summary>
            <value>
            The return value for this property is of type
            <strong>Telerik.WebControls.GridHeaderButtonType</strong>
            </value>
        </member>
        <member name="P:Telerik.WebControls.GridColumn.OrderIndex">
            <summary>
                Gets or sets the order index of column in the collection of
                <see cref="P:Telerik.WebControls.GridTableView.RenderColumns"/>. Use
                <see cref="M:Telerik.WebControls.GridTableView.SwapColumns(System.String,System.String)"/> method for reordering the columns.
            </summary>
            <remarks>
            	<para>
                    We recommend using this property only for getting the order index for a
                    specific column instead of setting it. Use
                    <see cref="M:Telerik.WebControls.GridTableView.SwapColumns(System.String,System.String)"/> method for reordering columns.
                </para>
            	<para>Note that changing the column order index will change the order of the cells
                in the grid items, after the grid is rebound.</para>
            	<para>
                    The value of the property would not affect the order of the column in the
                    <see cref="P:Telerik.WebControls.GridTableView.Columns"/> collection.
                </para>
            </remarks>
            <value>
            	<strong>integer</strong> representing the current column index. You should have
            in mind that <strong>GridExpandColumn</strong> and <strong>RowIndicatorColumn</strong>
            are always in front of data columns so that's why you columns will start from index
            2.
            </value>
            <example>
            	<code lang="CS" title="OrderIndex c# example" description="Get the current indeces of columns in Telerik RadGrid and change their indeces via SwapColumns method (C# version). This code will print all the indeces prior and after swapping the columns.">
            protected void RadGrid1_PreRender(object sender, EventArgs e)
                {
                    foreach (GridBoundColumn column in RadGrid1.MasterTableView.Columns)
                    {
                        Response.Write(column.UniqueName + column.OrderIndex + "&lt;br&gt;");
                    }
             
                    RadGrid1.MasterTableView.SwapColumns(2, 4);
             
                    foreach (GridBoundColumn column in RadGrid1.MasterTableView.Columns)
                    {
                        Response.Write(column.UniqueName + column.OrderIndex + "&lt;br&gt;");
                    }
                }
                </code>
            	<code lang="VB" title="OrderIndex vb example" description="Get the current indeces of columns in Telerik RadGrid and change their indeces via SwapColumns method (VB version). This code will print all the indeces prior and after swapping the columns.">
            Protected Sub RadGrid1_PreRender(sender As Object, e As EventArgs)
               Dim column As GridBoundColumn
               For Each column In  RadGrid1.MasterTableView.Columns
                  Response.Write((column.UniqueName + column.OrderIndex + "&lt;br&gt;"))
               Next column
               
               RadGrid1.MasterTableView.SwapColumns(2, 4)
               
               Dim column As GridBoundColumn
               For Each column In  RadGrid1.MasterTableView.Columns
                  Response.Write((column.UniqueName + column.OrderIndex + "&lt;br&gt;"))
               Next column
            End Sub 'RadGrid1_PreRender
                </code>
            </example>
        </member>
        <member name="P:Telerik.WebControls.GridColumn.IsEditable">
            <summary>
            	<para>This property is supposed for developers of new grid columns. It gets whether
                a column is currently ReadOnly. The ReadOnly property determines whether a column
                will be editable in edit mode. A column for which the ReadOnly property is true
                will not be present in the automatically generated edit form.</para>
            </summary>
            <value>A boolean value, indicating whether a specific column is editable.</value>
        </member>
        <member name="P:Telerik.WebControls.GridColumn.EditFormColumnIndex">
            <summary>
            	<para>Specifies the vertical collumn number where this column will appear when
                using EditForms editing mode and the form is autogenerated. See the remarks for
                details.</para>
            </summary>
            <remarks>
            	<para>A practicle example of using this property is to deterimine the number of
                columns rendered in the edit form. If there will be only one column in the rendered
                edit form, when we retrieve the value of this property for a column, as shown in
                the code below:</para>
            	<div class="LanguageSpecific" name="Code_VB">
            		<table class="CodeContainerTable" cellspacing="0" cellpadding="0" border="0">
            			<tbody>
            				<tr>
            					<td nowrap="nowrap">
            						<code class="Vb">
            							<font size="2">protected void RadGrid1_PreRender(<font class="keyword">object</font> sender, EventArgs e)<br/>    {<br/>
            								<font class="keyword">int</font> columnIndex = RadGrid1.MasterTableView.Columns[3].EditFormColumnIndex;<br/>    }</font>
            						</code>
            					</td>
            				</tr>
            			</tbody>
            		</table>
            	</div>
            	<para>it will be equal to 0, meaning the the column belongs to the first group of
                columns in the edit form.</para>
            </remarks>
        </member>
        <member name="P:Telerik.WebControls.GridColumn.UniqueName">
            <summary>
            Each column in Telerik RadGrid has an <strong>UniqueName</strong>
            property (string). This property is assigned automatically by the designer (or the
            first time you want to access the columns if they are built dynamically).
            </summary>
            <remarks>
            	<para>You can also set it explicitly, if you prefer. However, the automatic
                generation handles most of the cases. For example a
                <strong>GridBoundColumn</strong> with <strong>DataField</strong> 'ContactName'
                would generate an <strong>UniqueName</strong> of 'ContactName'.</para>
            	<para>Additionally, there may be occasions when you will want to set the UniqueName
                explicitly. You can do so simply by specifying the custom name that you want to
                choose:</para>
            	<div class="LanguageSpecific" name="Code_VB">
            		<table class="CodeContainerTable" cellspacing="0" cellpadding="0" border="0">
            			<tbody>
            				<tr>
            					<td nowrap="nowrap">
            						<code class="Vb">
            							<font size="2">&lt;rad:GridTemplateColumn<br/> UniqueName=<font class="string">"ColumnUniqueName"</font>&gt;<br/>&lt;/rad:GridTemplateColumn&gt;</font>
            						</code>
            					</td>
            				</tr>
            			</tbody>
            		</table>
            	</div>
            </remarks>
            <example>
            	<para>When you want to access a cell within a <strong>grid</strong> item, you
                should use the following code to obtain the right cell:</para>
            	<para class="sourcecode">TableCell cell = gridDataItem["ColumnUniqueName"];</para>
            	<para>or</para>
            	<para class="sourcecode">gridDataItem["ColumnUniqueName"].Text =</para>
            	<para>to access the <strong>Text</strong> property</para>
            	<para>Using this property you can index objects of type
                <strong>%</strong>GridDataItem:GridDataItem% or
                <strong>%</strong>GridEditFormItem:GridEditFormItem% (or all descendants of
                <strong>%</strong>GridEditableItem:GridEditableItem% class)</para>
            	<para>In events related to creating, binding or for commands in items, the event
                argument has a property <strong>Item</strong> to access the item that event is
                fired for. To get an instance of type <strong>GridDataItem</strong>, you should use
                the following:</para>
            	<para class="sourcecode">//presume e is the event argument object<br/>
                if (e.Item is GridDataItem)<br/>
                {<br/>
                GridDataItem gridDataItem = e.Item as GridDataItem;</para>
            </example>
        </member>
        <member name="P:Telerik.WebControls.GridColumn.EditFormHeaderTextFormat">
            <summary>
            String that formats the HeaderText when the column is displayed in an edit form
            </summary>
            <example>
            	<para>The following code demonstrates one possible use of this property:</para>
            	<div class="LanguageSpecific" name="Code_VB">
            		<table class="CodeContainerTable" cellspacing="0" cellpadding="0" border="0">
            			<tbody>
            				<tr>
            					<td nowrap="nowrap"></td>
            				</tr>
            			</tbody>
            		</table>
            	</div>
            	<para>In this way, once a record enters edit mode, the name of the column will be
                followed by the custom text entered in the example above.</para>
            	<para>[ASPX/ASCX]</para>
            	<para>&lt;rad:GridBoundColumn DataField="CustomerID"<br/>
                 HeaderText="CustomerID"<br/>
                 SortExpression="CustomerID"<br/>
                 UniqueName="CustomerID"<br/>
            		<strong>EditFormHeaderTextFormat="{0} is currently in edit mode"</strong>
                &gt;<br/>
                &lt;/rad:GridBoundColumn&gt;</para>
            </example>
        </member>
        <member name="P:Telerik.WebControls.GridColumn.DataType">
            <summary>
            	<para>Gets or sets (see the Remarks) the type of the data from the DataField as it
                was set in the DataSource.</para>
            </summary>
            <remarks>
            	<para>The DataType property supports the following base .NET Framework data
                types:</para>
            	<list type="bullet">
            		<item>Boolean</item>
            		<item>Byte</item>
            		<item>Char</item>
            		<item>DateTime</item>
            		<item>Decimal</item>
            		<item>Double</item>
            		<item>Int16</item>
            		<item>Int32</item>
            		<item>Int64</item>
            		<item>SByte</item>
            		<item>Single</item>
            		<item>String</item>
            		<item>TimeSpan</item>
            		<item>UInt16</item>
            		<item>UInt32</item>
            		<item>UInt64</item>
            	</list>
            </remarks>
        </member>
        <member name="T:Telerik.WebControls.IGridEditableColumn">
            <summary>
            Interface that RadGrid uses to determine the editable columns, their current state etc.
            </summary>
            <example>
            	<code lang="CS" title="Update data with editable columns">
            protected void RadGrid1_UpdateCommand(object source, Telerik.WebControls.GridCommandEventArgs e)
                    {        
                            GridEditableItem editedItem = e.Item as GridEditableItem;
                            GridEditManager editMan = editedItem.EditManager;
             
                            foreach( GridColumn column in e.Item.OwnerTableView.RenderColumns )
                            {
                                if ( column is IGridEditableColumn )
                                {
                                    IGridEditableColumn editableCol = (column as IGridEditableColumn);
                                    if ( editableCol.IsEditable )
                                    {
                                        IGridColumnEditor editor = editMan.GetColumnEditor( editableCol );
             
                                        string editorType = editor.ToString();
                                        string editorText = "unknown";
                                        object editorValue = null;
             
                                        if ( editor is GridTextColumnEditor )
                                        {
                                            editorText = (editor as GridTextColumnEditor).Text;
                                            editorValue = (editor as GridTextColumnEditor).Text;
                                        }
             
                                        if ( editor is GridBoolColumnEditor )
                                        {
                                            editorText = (editor as GridBoolColumnEditor).Value.ToString();
                                            editorValue = (editor as GridBoolColumnEditor).Value;
                                        }
             
                                        if ( editor is GridDropDownColumnEditor )
                                        {
                                            editorText = (editor as GridDropDownColumnEditor).SelectedText + "; " +
                                                (editor as GridDropDownColumnEditor).SelectedValue;
                                            editorValue = (editor as GridDropDownColumnEditor).SelectedValue;
                                        }
             
                                        try
                                        {
                                            DataRow[] changedRows = this.EmployeesData.Tables["Employees"].Select( "EmployeeID = " + editedItem.OwnerTableView.DataKeyValues[editedItem.ItemIndex]["EmployeeID"] );
                                            changedRows[0][column.UniqueName] = editorValue;
                                            this.EmployeesData.Tables["Employees"].AcceptChanges();
                                        }
                                        catch(Exception ex)
                                        {
                                            RadGrid1.Controls.Add(new LiteralControl ("&lt;strong&gt;Unable to set value of column '" + column.UniqueName + "'&lt;/strong&gt; - " + ex.Message));
                                            e.Canceled = true;
                                            break;
                                        }
                                    }
                                }
                            }
                    }
                </code>
            	<code lang="VB" title="Update data with editable columns">
            Private Sub RadGrid1_UpdateCommand(ByVal source As System.Object, ByVal e As Telerik.WebControls.GridCommandEventArgs) Handles RadGrid1.UpdateCommand
             
                        Dim editedItem As GridEditableItem = CType(e.Item, GridEditableItem)
                        Dim editMan As GridEditManager = editedItem.EditManager
             
                        Dim column As GridColumn
             
                        For Each column In e.Item.OwnerTableView.Columns
                            If Typeof column Is IGridEditableColumn Then
                                Dim editableCol As IGridEditableColumn = CType(column, IGridEditableColumn)
                                If (editableCol.IsEditable) Then
                                    Dim editor As IGridColumnEditor = editMan.GetColumnEditor(editableCol)
             
                                    Dim editorType As String = CType(editor, Object).ToString()
                                    Dim editorText As String = "unknown"
                                    Dim editorValue As Object = Nothing
             
                                    If (Typeof editor Is GridTextColumnEditor) Then
                                        editorText = CType(editor, GridTextColumnEditor).Text
                                        editorValue = CType(editor, GridTextColumnEditor).Text
                                    End If
             
                                    If (Typeof editor Is GridBoolColumnEditor) Then
                                        editorText = CType(editor, GridBoolColumnEditor).Value.ToString()
                                        editorValue = CType(editor, GridBoolColumnEditor).Value
                                    End If
             
                                    If (Typeof editor Is GridDropDownColumnEditor) Then
                                        editorText = CType(editor, GridDropDownColumnEditor).SelectedText &amp; "; " &amp; CType(editor, GridDropDownColumnEditor).SelectedValue
                                        editorValue = CType(editor, GridDropDownColumnEditor).SelectedValue
                                    End If
             
                                    Try
                                        Dim changedRows As DataRow() = Me.EmployeesData.Tables("Employees").Select("EmployeeID = " &amp; editedItem.OwnerTableView.DataKeyValues(editedItem.ItemIndex)("EmployeeID"))
                                        changedRows(0)(column.UniqueName) = editorValue
                                        Me.EmployeesData.Tables("Employees").AcceptChanges()
                                    Catch ex As Exception
                                        RadGrid1.Controls.Add(New LiteralControl("&lt;strong&gt;Unable to set value of column '" &amp; column.UniqueName &amp; "'&lt;/strong&gt; - " + ex.Message))
                                        e.Canceled = True
                                    End Try
             
                                End If
                            End If
                        Next
                    End Sub
                </code>
            </example>
            <seealso cref="!:http://www.telerik.com/demos/aspnet/Grid/Examples/DataEditing/EditModes/DefaultCS.aspx" cat="RadGrid ">Using column editors</seealso>
        </member>
        <member name="M:Telerik.WebControls.IGridEditableColumn.ShouldExtractValues(Telerik.WebControls.GridEditableItem)">
            <summary>
            Get value based on the current IsEditable state, item edited state and ForceExtractValue setting.
            </summary>
            <param name="item">item to check to extract values from</param>
        </member>
        <member name="M:Telerik.WebControls.IGridEditableColumn.FillValues(System.Collections.IDictionary,Telerik.WebControls.GridEditableItem)">
            <summary>
            Extracts the values from the editedItem and fills the names/values pairs for each data-field edited by the column in the newValues dictionary.
            </summary>
            <param name="newValues">dictionary to fill. This param should not be null (Nothing in VB.NET)</param>
            <param name="editableItem">the GridEditableItem to extract values from</param>
        </member>
        <member name="P:Telerik.WebControls.IGridEditableColumn.IsEditable">
            <summary>
            Get whether a column is currently read-only
            </summary>
        </member>
        <member name="P:Telerik.WebControls.IGridEditableColumn.ColumnEditor">
            <summary>
            Gets the column editor instance for this column
            </summary>
        </member>
        <member name="P:Telerik.WebControls.IGridEditableColumn.Column">
            <summary>
            Gets the GridColumn instance implementing this interface
            </summary>
        </member>
        <member name="P:Telerik.WebControls.IGridEditableColumn.ForceExtractValue">
            <summary>
            Force RadGrid to extract values from EditableColumns that are ReadOnly (or IsEditable is false).
            </summary>
        </member>
        <member name="M:Telerik.WebControls.GridEditableColumn.FillValues(System.Collections.IDictionary,Telerik.WebControls.GridEditableItem)">
            <summary>
            Extracts the values from the editedItem and fills the names/values pairs for each data-field edited by the column in the newValues dictionary.
            </summary>
            <param name="newValues">dictionary to fill. This param should not be null (Nothing in VB.NET)</param>
            <param name="editableItem">the GridEditableItem to extract values from</param>
        </member>
        <member name="M:Telerik.WebControls.GridEditableColumn.ShouldExtractValues(Telerik.WebControls.GridEditableItem)">
            <summary>
            Get value based on the current IsEditable state, item edited state and ForceExtractValue setting.
            </summary>
            <param name="item">item to check to extract values from</param>
        </member>
        <member name="P:Telerik.WebControls.GridEditableColumn.CurrentColumnEditor">
            <summary>
            Get the current colum editor. If the column editor is not assigned at the moment the column will search for the ColumnEditorID on the page or should
            create its default column editor
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridEditableColumn.ConvertEmptyStringToNull">
            <summary>
            Convert the emty string to null when extracting values for inserting, updating, deleting
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridEditableColumn.ForceExtractValue">
            <summary>
            Force RadGrid to extract values from EditableColumns that are ReadOnly (or IsEditable is false).
            </summary>
        </member>
        <member name="M:Telerik.WebControls.GridBoundColumn.Initialize">
            <summary>Resets the <strong>GridBoundColumn</strong> to its initial state.</summary>
        </member>
        <member name="M:Telerik.WebControls.GridBoundColumn.InitializeCell(System.Web.UI.WebControls.TableCell,System.Int32,Telerik.WebControls.GridItem)">
            <summary>
            Resets the specified cell in the <strong>GridBoundColumn</strong> to its initial
            state.
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridBoundColumn.DataField">
            <summary>
            	<para>Gets or sets the field name from the specified data source to bind to the
            <strong>GridBoundColumn</strong>.</para>
            </summary>
            <value>
            A <strong><em>string</em></strong>, specifying the data field from the data
            source, from which to bind the column.
            </value>
        </member>
        <member name="P:Telerik.WebControls.GridBoundColumn.MaxLength">
            <summary>
            Gets or Sets an integer, specifying the maximum number of characters, which will
            be accepted in the edit textbox for the field, when in edit mode.
            </summary>
            <value>
            An <strong><em>integer</em></strong>, specifying the maximum number of
            characters, which the item will accept when in edit mode.
            </value>
        </member>
        <member name="P:Telerik.WebControls.GridBoundColumn.DataFormatString">
            <remarks>
            	<div id="ctl00_LibFrame_MainContent_ctl22">
            		<para>Use the <b>DataFormatString</b> property to provide a custom format for the items
            in the column.</para>
            		<para>The data format string consists of two parts, separated by a colon, in the form {
            <span class="parameter">A</span> : <span class="parameter">Bxx</span> }.<br/>
            For example, the formatting string {0:C2} displays a currency formatted number with two
            decimal places.</para>
            		<para><strong>Note:</strong> The entire string must be enclosed in braces to indicate
            that it is a format string and not a literal string. Any text outside the braces is
            displayed as literal text.</para>
            		<para>The value before the colon (<span class="parameter">A</span> in the general
            example) specifies the parameter index in a zero-based list of parameters.</para>
            		<div class="alert">
            			<para><strong>Note:</strong> This value can only be set to 0 because there is only one
            value in each cell.</para></div>
            		<para>The value before the colon (<span class="parameter">A</span> in the general
            example) specifies the parameter index in a zero-based list of parameters.</para>
            		<para>The character after the colon (<span class="parameter">B</span> in the general
            example) specifies the format to display the value in. The following table lists the
            common formats.</para>
            		<div class="labelheading">
            			<div class="tableSection">
            				<list type="table">
            					<listheader>
            						<term>
            							<para>Format character</para></term>
            						<description>
            							<para>Description</para></description></listheader>
            					<item>
            						<term>
            							<para><b>C</b></para></term>
            						<description>
            							<para>Displays numeric values in currency format.</para></description></item>
            					<item>
            						<term>
            							<para><b>D</b></para></term>
            						<description>
            							<para>Displays numeric values in decimal format.</para></description></item>
            					<item>
            						<term>
            							<para><b>E</b></para></term>
            						<description>
            							<para>Displays numeric values in scientific (exponential)
            format.</para></description></item>
            					<item>
            						<term>
            							<para><b>F</b></para></term>
            						<description>
            							<para>Displays numeric values in fixed format.</para></description></item>
            					<item>
            						<term>
            							<para><b>G</b></para></term>
            						<description>
            							<para>Displays numeric values in general format.</para></description></item>
            					<item>
            						<term>
            							<para><b>N</b></para></term>
            						<description>
            							<para>Displays numeric values in number format.</para></description></item>
            					<item>
            						<term>
            							<para><b>X</b></para></term>
            						<description>
            							<para>Displays numeric values in hexadecimal
            format.</para></description></item></list></div>
            			<div class="tableSection">
            				<para><strong>Note:</strong> The format character is not case-sensitive, except for
            <b>X</b>, which displays the hexadecimal characters in the case specified.</para></div>
            			<div class="alert">The value after the format character
            (<span class="parameter">xx</span> in the general example) specifies the number of
            significant digits or decimal places to display.</div>
            			<para>For more information on formatting strings, see
            <a href="http://msdn2.microsoft.com/en-us/library/26etazsy(VS.80).aspx">Formatting
            Overview</a> (external link to MSDN library).</para></div></div>
            </remarks>
            <summary>
            Gets or sets the string that specifies the display format for items in the
            column.
            </summary>
            <value>
            A <strong><em>string</em></strong> that specifies the display format for items in
            the column
            </value>
        </member>
        <member name="P:Telerik.WebControls.GridBoundColumn.ReadOnly">
            <summary>
            Gets or sets the readonly status of the column. The column will be displayed in
            browser mode (unless its <strong>Visible</strong> property is <strong>false</strong>)
            but will not appear in the edit-form.
            </summary>
            <value>
            A <strong><em>boolean</em></strong> value, indicating whether a column is
            ReadOnly.
            </value>
        </member>
        <member name="P:Telerik.WebControls.GridBoundColumn.AllowFiltering">
            <summary>Gets or sets whether the column data can be filtered.</summary>
            <value>A boolean value, indicating whether the column data can be filtered.</value>
        </member>
        <member name="P:Telerik.WebControls.GridBoundColumn.AllowSorting">
            <summary>Gets or sets a whether the column data can be sorted.</summary>
            <value>
            A <strong><em>boolean</em></strong> value, indicating whether the column data can
            be sorted.
            </value>
        </member>
        <member name="P:Telerik.WebControls.GridBoundColumn.IsEditable">
            <summary>
            Gets a boolean value, indicating whether the column is editable. A ReadOnly
            column will return a false value for this property. The property is readOnly.
            </summary>
            <value>
            A <strong><em>boolean</em></strong> value, indicating whether the column is
            editable
            </value>
        </member>
        <member name="T:Telerik.WebControls.GridButtonColumnType">
            <summary>Defines what button will be rendered in a GridButtonColumn</summary>
        </member>
        <member name="F:Telerik.WebControls.GridButtonColumnType.LinkButton">
            <summary>Renders a standard hyperlink button.</summary>
        </member>
        <member name="F:Telerik.WebControls.GridButtonColumnType.PushButton">
            <summary>Renders a standard button.</summary>
        </member>
        <member name="F:Telerik.WebControls.GridButtonColumnType.ImageButton">
            <summary>Renders an image that acts like a button.</summary>
        </member>
        <member name="T:Telerik.WebControls.GridButtonColumn">
            <summary><para>It displays a button for each item in the column.</para></summary>
            <seealso cref="!:http://www.telerik.com/demos/aspnet/Grid/Examples/GeneralFeatures/ColumnTypes/DefaultCS.aspx" cat="Online demos">Grid column types</seealso>
            <remarks>
            	<para>
                    This column renderes a button of the specified ButtonType in each corresponding
                    cell of the items of type <see cref="T:Telerik.WebControls.GridDataItem"/> and
                    <see cref="T:Telerik.WebControls.GridEditFormItem"/>. You can use this buttons to fire command
                    events that can be handeled in <see cref="E:Telerik.WebControls.RadGrid.ItemCommand"/> event
                    handler. This, in combination with the
                    <a href="grdCommandReference.html">event
                    bubbling mechanism</a> in Telerik RadGrid, allows you to create a
                    column of custom button controls, such as <strong>Add</strong>,
                    <strong>Remove</strong>, <strong>Select</strong> or <strong>Edit</strong>
                    buttons.
                </para>
            	<para>The available buttons types are:
                <b>PushButton,</b><strong>LinkButton</strong> and <strong>ImageButton</strong>.
                Telerik RadGrid comes with two types of button columns:</para>
            	<list type="bullet">
            		<item><strong>Select</strong> - when a button in this column is pressed, it
                    will select the whole row. The <strong>Select</strong> column below uses a
                    <strong>PushButton</strong>.</item>
            		<item><strong>Remove selection</strong> - when a button in this column is
                    pressed, it will delete the row. The <strong>Remove selection</strong> column
                    below uses a <strong>LinkButton</strong>.</item>
            	</list>
            </remarks>
            <example>
            	<pre>
                &lt;rad:GridButtonColumn FooterText="PushButtonColumn&lt;br/&gt;footer" DataTextFormatString="Select {0}"<br/>        ButtonType="PushButton" UniqueName="column" HeaderText="PushButton&lt;br/&gt;Column"   <br/>        CommandName="Select" DataTextField="CustomerID"&gt;<br/>    &lt;/rad:GridButtonColumn&gt;
                </pre>
            </example>
            <seealso cref="!:grdColumnTypes.html" cat="RadGrid Manual">Grid Column types</seealso>
            <seealso cref="!:grdDesignColumns.html" cat="RadGrid Manual">Adding columns design-time</seealso>
            <seealso cref="!:grdUsingColumns.html" cat="RadGrid Manual">Using columns</seealso>
        </member>
        <member name="M:Telerik.WebControls.GridButtonColumn.#ctor">
            <summary>Constructs a new <strong>GridButtonColumn</strong> object.</summary>
        </member>
        <member name="M:Telerik.WebControls.GridButtonColumn.Initialize">
            <summary>
            	<para>The <b>Initialize</b> method is inherited by a derived
            <strong>GridButtonColumn</strong> class. Is is used to reset a column of the derived
            type.</para>
            </summary>
        </member>
        <member name="M:Telerik.WebControls.GridButtonColumn.InitializeCell(System.Web.UI.WebControls.TableCell,System.Int32,Telerik.WebControls.GridItem)">
            <summary>
            	<para>After a call to this method the column should add the corresponding button into
            the cell given, regarding the <strong>inItem</strong> type and column index.</para>
            	<para><strong>Note:</strong> This method is called within RadGrid and is not intended
            to be used directly from your code.</para>
            </summary>
        </member>
        <member name="M:Telerik.WebControls.GridButtonColumn.Clone">
            <summary>Returns a copy of the GridButtonColumn.</summary>
        </member>
        <member name="P:Telerik.WebControls.GridButtonColumn.ButtonType">
            <summary>
            Gets or sets a value indicating the type of the button that will be rendered. The
            type should be one of the specified by the <see cref="T:Telerik.WebControls.GridButtonColumnType"/>
            enumeration.
            </summary>
            <remarks>
            	<list type="table">
            		<item>
            			<term><strong>LinkButton</strong></term>
            			<description>Renders a standard hyperlink button.</description></item>
            		<item>
            			<term><strong>PushButton</strong></term>
            			<description>Renders a standard button.</description></item>
            		<item>
            			<term><strong>ImageButton</strong></term>
            			<description>Renders an image that acts like a
            button.</description></item></list>
            </remarks>
        </member>
        <member name="P:Telerik.WebControls.GridButtonColumn.CommandName">
            <summary>
            Gets or sets a value defining the name of the command that will be fired when a
            button in this column is clicked.
            </summary>
            <remarks>
            	<table style="BORDER-COLLAPSE: collapse" cols="1" width="80%" border="1">
            		<tbody>
            			<tr>
            				<td align="left" width="35%" bgcolor="#CCFF00" colspan="2">
            					<para align="left">Fired By controls within <strong>DataItems</strong> - showing and
            editing data</para></td></tr>
            			<tr>
            				<td align="left" width="35%"><strong>CancelCommandName</strong></td>
            				<td>Represents the Cancel command name. Fires <strong>RadGrid.CancelCommand</strong>
            event and sets <strong>Item.Edit</strong> to <strong>false</strong> for the parent
            Item.</td></tr>
            			<tr>
            				<td align="left" width="35%"><strong>DeleteCommandName</strong></td>
            				<td>Represents the Delete command name. Fires <strong>RadGrid.DeleteCommand</strong>
            event. Under .Net 2.0 performs automatic delete operation and then sets
            <strong>Item.Edit</strong> to <strong>false</strong>.</td></tr>
            			<tr>
            				<td align="left" width="35%"><strong>UpdateCommandName</strong></td>
            				<td>Represents the Update command name. Fires <strong>RadGrid.UpdateCommand</strong>
            event. Under .Net 2.0 performs automatic update operation and then sets
            <strong>Item.Edit</strong> to <strong>false</strong>.</td></tr>
            			<tr>
            				<td align="left">
            					<para align="left"><strong>EditCommandName</strong></para></td>
            				<td>Represents the Edit command name. Sets <strong>Item.Edit</strong> to
            <strong>true</strong>.</td></tr>
            			<tr>
            				<td align="left">
            					<para align="left"><strong>SelectCommandName</strong></para></td>
            				<td>Represents the Select command name. Sets <strong>Item.Selected</strong> to
            <strong>true</strong>.</td></tr>
            			<tr>
            				<td align="left">
            					<para align="left"><strong>DeselectCommandName</strong></para></td>
            				<td>Represents the Deselect command name. <strong>Sets Item.Selected</strong> to
            false.</td></tr>
            			<tr>
            				<td align="left" bgcolor="#CCFF00" colspan="2">
            					<para align="left">Can be fired by controls within any Item</para></td></tr>
            			<tr>
            				<td align="left">
            					<para align="left"><strong>InitInsertCommandName</strong></para></td>
            				<td>By default grid renders an image button in the <strong>CommandItem</strong>. Opens
            the insert item.<br/></td></tr>
            			<tr>
            				<td align="left">
            					<para align="left"><strong>PerformInsertCommandName</strong></para></td>
            				<td>Fires <strong>RadGrid.InsertCommand</strong> event. Under .Net 2.0 Perfoms
            automatic insert operation and closes the insert item.<br/></td></tr>
            			<tr>
            				<td align="left">
            					<para align="left"><strong>RebindGridCommandName</strong></para></td>
            				<td>By default grid renders an image button in the <strong>CommandItem</strong>. Forces
            <strong>RadGrid.Rebind</strong></td></tr>
            			<tr>
            				<td align="left">
            					<para align="left"><strong>SortCommandName</strong></para></td>
            				<td>Represents the Sort command name. By default it is fired by image buttons in the
            header item when Sorting is enabled. The argument for the <strong>SortCommand</strong>
            must be the <strong>DataField</strong> name for the <strong>DataField</strong> to be
            sorted.</td></tr></tbody></table>
            </remarks>
        </member>
        <member name="P:Telerik.WebControls.GridButtonColumn.CommandArgument">
            <summary>
            Gets or sets an optional parameter passed to the Command event along with the
            associated
            <a href="RadGridNet2~Telerik.WebControls.GridButtonColumn~CommandName.html">CommandName</a>.
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridButtonColumn.DataTextField">
            <remarks>
            	<para>Use the <strong>DataTextField</strong> property to specify the field name
                from the data source to bind to the
                <span class="179215212-08062006"><strong>Text</strong></span> property of the
                buttons in the
                <strong><span class="179215212-08062006">Grid</span>ButtonColumn</strong> object.
                Binding the column to a field instead of directly setting the <strong>Text</strong>
                property allows you to display different captions for the buttons in the
                <strong><span class="179215212-08062006">Grid</span>ButtonColumn</strong> by using
                the values in the specified field.</para>
            	<para><span class="179215212-08062006"><strong>Tip:</strong> This property is most
                often used in combination with
                <a href="RadGridNet2~Telerik.WebControls.GridButtonColumn~DataTextFormatString.html">
                DataTextFormatString Property</a>.</span></para>
            </remarks>
            <summary>
            Gets or sets a value from the specified datasource field. This value will then be
            displayed in the <strong>GridBoundColumn</strong>.
            </summary>
            <example>
            	<div class="LanguageSpecific">
            		<table class="CodeContainerTable" cellspacing="0" cellpadding="0" border="0">
            			<tbody>
            				<tr>
            					<td nowrap="nowrap"></td>
            				</tr>
            			</tbody>
            		</table>
            	</div>
            	<code lang="CS">
            [ASPX/ASCX]&lt;br/&gt;&lt;br/&gt;&lt;rad:RadGrid id=&lt;font class="string"&gt;"RadGrid1"&lt;/font&gt; runat=&lt;font class="string"&gt;"server"&lt;/font&gt;&gt;&lt;br/&gt;  &lt;MasterTableView AutoGenerateColumns=&lt;font class="string"&gt;"False"&lt;/font&gt;&gt;&lt;br/&gt;    &lt;Columns&gt;&lt;br/&gt;      &lt;rad:GridButtonColumn HeaderText=&lt;font class="string"&gt;"Customer ID"&lt;/font&gt;&lt;font color="red"&gt;DataTextField=&lt;font class="string"&gt;"CustomerID"&lt;/font&gt;&lt;/font&gt;&lt;br/&gt;&lt;font color="red"&gt;DataTextFormatString=&lt;font class="string"&gt;"Edit Customer {0}"&lt;/font&gt;&lt;/font&gt; ButtonType=&lt;font class="string"&gt;"LinkButton"&lt;/font&gt; UniqueName=&lt;font class="string"&gt;"ButtonColumn"&lt;/font&gt;&gt;&lt;br/&gt;     &lt;/rad:GridButtonColumn&gt;
                </code>
            	<code lang="CS">
            	</code>
            	<code lang="CS">
            	</code>
            </example>
        </member>
        <member name="P:Telerik.WebControls.GridButtonColumn.DataTextFormatString">
            <remarks>
            	<para>Use the <strong>DataTextFormatString</strong> property to provide a custom
                display format for the caption of the buttons in the
                <strong>GridButtonColumn</strong>.</para>
            	<para><span class="179215212-08062006"><strong>Note</strong>:</span> The entire
                string must be enclosed in braces to indicate that it is a format string and not a
                literal string. Any text outside the braces is displayed as literal text.</para>
            </remarks>
            <example>
            	<table class="CodeContainerTable" cellspacing="0" cellpadding="0" border="0">
            		<tbody>
            			<tr>
            				<td nowrap="nowrap"></td>
            			</tr>
            		</tbody>
            	</table>
            	<code lang="CS">
            [ASPX/ASCX]&lt;br/&gt;&lt;br/&gt;&lt;rad:RadGrid id=&lt;font color="black"&gt;&lt;font class="string"&gt;"RadGrid1"&lt;/font&gt; runat=&lt;font class="string"&gt;"server"&lt;/font&gt;&gt;&lt;br/&gt;  &lt;MasterTableView AutoGenerateColumns=&lt;font class="string"&gt;"False"&lt;/font&gt;&gt;&lt;br/&gt;    &lt;Columns&gt;&lt;br/&gt;      &lt;rad:GridButtonColumn HeaderText=&lt;font class="string"&gt;"Customer ID"&lt;/font&gt;&lt;/font&gt;&lt;font color="red"&gt;DataTextField=&lt;font class="string"&gt;"CustomerID"&lt;/font&gt;&lt;br/&gt;DataTextFormatString=&lt;font class="string"&gt;"Edit Customer {0}"&lt;/font&gt;&lt;/font&gt; ButtonType=&lt;font class="string" color="black"&gt;"LinkButton"&lt;/font&gt; UniqueName=&lt;font color="black"&gt;&lt;font class="string"&gt;"ButtonColumn"&lt;/font&gt;&gt;&lt;br/&gt;     &lt;/rad:GridButtonColumn&gt;&lt;/font&gt;
                </code>
            </example>
            <summary>
            Gets or sets the string that specifies the display format for the caption in each
            button.
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridButtonColumn.Text">
            <summary>Gets or sets a value indicating the text that will be shown for a button.</summary>
        </member>
        <member name="P:Telerik.WebControls.GridButtonColumn.ImageUrl">
            <summary>
            Gets or sets a value indicating the URL for the image that will be used in a
            Image button. <see cref="P:Telerik.WebControls.GridButtonColumn.ButtonType"/> should be set to
            <strong>ImageButton</strong>.
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridButtonColumn.ConfirmText">
            <summary>
            Gets or sets the text that will be shown on the confirmation dialog when a button
            in this column is clicked. The prompt is automatically enabled when this property is
            set.
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridButtonColumn.Groupable">
            <summary>
            Gets or sets a value indicating whether this column can be used for grouping. If
            set to false the column header cannot be dragged to the
            <see cref="!:GroupPanel"/>.
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridButtonColumn.IsEditable">
            <summary>Gets the status of <see cref="P:Telerik.WebControls.GridButtonColumn.ShowInEditForm"/> property.</summary>
        </member>
        <member name="P:Telerik.WebControls.GridButtonColumn.ShowInEditForm">
            <summary>
            	<para>
                    If the corresponding <see cref="T:Telerik.WebControls.GridTableView"/> is in edit mode
                    <see cref="F:Telerik.WebControls.GridEditMode.InPlace"/> specifies whether this column will
                    render an Enabled=true button control, when the corresponding item is edit
                    mode.
                </para>
            </summary>
        </member>
        <member name="T:Telerik.WebControls.GridCheckBoxColumn">
            <summary>
            Displays a <b>CheckBox</b> control for each item in the column. This allows you
            to edit for example <strong>Boolean</strong> field(s) from data table(s).
            </summary>
            <seealso cref="!:http://www.telerik.com/demos/aspnet/Grid/Examples/GeneralFeatures/ColumnTypes/DefaultCS.aspx" cat="Online demos">Grid column types</seealso>
            <remarks>
            This column is editable (implements the <strong>IGridEditableColumn</strong>
            interface) and provides by default <strong>GridBoolColumnEditor</strong>, used for
            editing the text in each item. You can persist the checked state of a checkbox, if you
            use it within <strong>GridTemplateColumn</strong>
            (<a href="gridPersistCheckBoxStateInGridTemplateColumnOnRebind.html">
            see here</a>).
            </remarks>
            <example>
            	<pre>
                &lt;rad:GridCheckBoxColumn FooterText="CheckBoxColumn footer" UniqueName="Bool" HeaderText="CheckBox&lt;br/&gt;Column"<br/>        DataField="Bool"&gt;<br/>    &lt;/rad:GridCheckBoxColumn&gt;
                </pre>
            </example>
            <seealso cref="!:grdColumnTypes.html" cat="RadGrid Manual">Grid Column types</seealso>
            <seealso cref="!:grdDesignColumns.html" cat="RadGrid Manual">Adding columns design-time</seealso>
            <seealso cref="!:grdUsingColumns.html" cat="RadGrid Manual">Using columns</seealso>
            <seealso cref="!:grdColumnTypes.html#Similarities_Differences_Checkbox" cat="RadGrid Manual">Similarities/Differences between GridCheckBoxColumn and GridTemplateColumn with
            checkbox</seealso>
        </member>
        <member name="P:Telerik.WebControls.GridCheckBoxColumn.DataField">
            <summary>
            	<para>Gets or sets the field name from the specified data source to bind to the
                <strong>column</strong>.</para>
            </summary>
            <value>
            A <strong><em>string</em></strong>, specifying the data field from the data
            source, from which to bind the column.
            </value>
        </member>
        <member name="P:Telerik.WebControls.GridCheckBoxColumn.ReadOnly">
            <summary>
            Gets or sets the readonly status of the column. If set to true, the column will
            be displayed in browser mode (unless its <strong>Visible</strong> property is
            <strong>false</strong>) but will not appear in the edit-form.
            </summary>
            <value>
            A <strong><em>boolean</em></strong> value, indicating whether a column is
            ReadOnly.
            </value>
        </member>
        <member name="P:Telerik.WebControls.GridCheckBoxColumn.AllowSorting">
            <summary>Gets or sets a whether the column data can be sorted.</summary>
            <value>
            A <strong><em>boolean</em></strong> value, indicating whether the column data can
            be sorted.
            </value>
        </member>
        <member name="P:Telerik.WebControls.GridCheckBoxColumn.AllowFiltering">
            <summary>Gets or sets whether the column data can be filtered.</summary>
            <value>A boolean value, indicating whether the column data can be filtered.</value>
        </member>
        <member name="P:Telerik.WebControls.GridCheckBoxColumn.IsEditable">
            <summary>
            Gets a boolean value, indicating whether the column is editable. A ReadOnly
            column will return a false value for this property. The property is readOnly.
            </summary>
            <value>
            A <strong><em>boolean</em></strong> value, indicating whether the column is
            editable.
            </value>
        </member>
        <member name="T:Telerik.WebControls.GridClientDeleteColumn">
            <summary>
            A special type of GridButtonColumn, including a delete buttons in each row. It
            provides the functionality of erasing records client-side, without making a round trip
            to the server.
            </summary>
            <remarks>
            	<para>This optimizes the performance and the source data is automatically refreshed
                on the subsequent post to the server. The user experience is improved because the
                delete action is done client-side and the table presentation is updated
                immediately.</para>
            	<para>Its <b>ConfirmText</b> property can be assigned like with the default
                GridButtonColumn showing a dialog which allows the user to cancel the
                action.</para>
            </remarks>
            <example>
            	<pre>
            &lt;rad:GridClientDeleteColumn ConfirmText="Are you sure you want to delete the selected row?" HeaderStyle-Width="35px" ButtonType="ImageButton" ImageUrl="~/RadControls/Grid/Skins/WebBlue/Delete.gif" /&gt;
                </pre>
            </example>
            <seealso cref="!:grdClientSideDelete.html" cat="RadGrid Manual">Client-side delete feature</seealso>
            <seealso cref="!:grdColumnTypes.html" cat="RadGrid Manual">Grid column types</seealso>
            <seealso cref="!:http://www.telerik.com/demos/aspnet/Grid/Examples/Client/ClientDelete/DefaultCS.aspx" cat="Online demos">Client-side delete</seealso>
            <seealso cref="!:http://www.telerik.com/demos/aspnet/Grid/Examples/Programming/WebGrid/DefaultCS.aspx" cat="Online demos">Web Grid</seealso>
        </member>
        <member name="T:Telerik.WebControls.GridClientSelectColumn">
            <summary>
            Displays a <strong>Checkbox</strong> control for each item in the column. This
            allows you to select grid rows client-side automatically when you change the status of
            the checkbox to checked.
            </summary>
            <seealso cref="!:http://www.telerik.com/demos/aspnet/Grid/Examples/GeneralFeatures/ColumnTypes/DefaultCS.aspx" cat="Online demos">Column types</seealso>
            <seealso cref="!:http://www.telerik.com/demos/aspnet/Grid/Examples/Client/Selecting/DefaultCS.aspx" cat="Online demos">Client selection</seealso>
            <remarks>
            If you choose <strong>AllowMultiRowSelection = true</strong> for the grid, a
            checkbox will be displayed in the column header to toggle the checked/selected stated
            of the rows simultaneously (according to the state of that checkbox in the
            header).<br/>
            	<br/>
            To enable this feature you need to turn on the client selection of the grid
            (<strong>ClientSettings -&gt; Selecting -&gt; AllowRowSelect = true</strong>).
            </remarks>
            <example>
            	<pre>
            &lt;rad:GridClientSelectColumn UniqueName="CheckboxSelectColumn" HeaderText="CheckboxSelect column &lt;br /&gt;" /&gt;
                </pre>
            </example>
            <seealso cref="!:grdColumnTypes.html" cat="RadGrid manual">Grid Column types</seealso>
            <seealso cref="!:grdDesignColumns.html" cat="RadGrid manual">Adding columns design-time</seealso>
            <seealso cref="!:grdUsingColumns.html" cat="RadGrid manual">Using columns</seealso>
        </member>
        <member name="T:Telerik.WebControls.GridColumnCollection">
            <summary>
            The collection of columns of RadGrid or its tables. Accessible through
            <strong>Columns</strong> property of RadGrid and GridTableView (MasterTableView)
            classes.
            </summary>
            <remarks>
            Its items are of the available Grid
            <a href="grdColumnTypes.html">column
            types</a>.
            </remarks>
            <example>
            	<code lang="CS" title="Adding columns into Columns collection of MasterTableView">
            GridBoundColumn boundColumn;
                        boundColumn = new GridBoundColumn();
                        boundColumn.DataField = "CustomerID";
                        boundColumn.HeaderText = "CustomerID";
                        RadGrid1.MasterTableView.Columns.Add(boundColumn);
             
                        boundColumn = new GridBoundColumn();
                        boundColumn.DataField = "ContactName";
                        boundColumn.HeaderText = "Contact Name";
                        RadGrid1.MasterTableView.Columns.Add(boundColumn);
             
                        RadGrid1.MasterTableView.Columns.Add( new GridExpandColumn() );
                </code>
            	<code lang="VB" title="Adding columns into Columns collection of MasterTableView">
            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn()
            boundColumn.DataField = "CustomerID"
            boundColumn.HeaderText = "CustomerID"
            RadGrid1.MasterTableView.Columns.Add(boundColumn)
             
            boundColumn = New GridBoundColumn()
            boundColumn.DataField = "ContactName"
            boundColumn.HeaderText = "Contact Name"
            RadGrid1.MasterTableView.Columns.Add(boundColumn)
             
            RadGrid1.MasterTableView.Columns.Add(New GridExpandColumn())
                </code>
            </example>
        </member>
        <member name="M:Telerik.WebControls.GridColumnCollection.Add(Telerik.WebControls.GridColumn)">
            <summary>Adds a column object to the GridColumnCollection.</summary>
            <param name="column">The GridColumn object to add to the collection.</param>
        </member>
        <member name="M:Telerik.WebControls.GridColumnCollection.Contains(System.Object)">
            <summary>
            Determines whether the <b>CridColumnCollection</b> contains the value specified
            by the given <strong>GridColumn</strong> object.
            </summary>
            <returns>
            	<strong>true</strong> if the <b>GridColumn</b> is found in the
            <b>GridColumnCollection</b>; otherwise, <b>false</b>.
            </returns>
            <param name="Val">GridColumn object to locate in the <strong>GridColumnCollection</strong>.</param>
        </member>
        <member name="M:Telerik.WebControls.GridColumnCollection.IndexOf(System.Object)">
            <summary>
            Determines the index of a specific column in the
            <b>GridColumnCollection</b>.
            </summary>
            <returns>
            The index of <span class="parameter">value</span> if found in the collection;
            otherwise, -1.
            </returns>
            <param name="Val">The object to locate in the <strong>GridColumnCollection</strong>.</param>
        </member>
        <member name="M:Telerik.WebControls.GridColumnCollection.Insert(System.Int32,System.Object)">
            <summary>
            Inserts a column to the <strong>GridColumnCollectino</strong> at the specified
            index.
            </summary>
            <param name="Index">
            The zero-based index at which <span class="parameter">column</span> should be
            inserted.
            </param>
            <param name="Val">
            	<para>
                    The <see cref="T:Telerik.WebControls.GridColumn"/> to insert into the collection.
                </para>
            </param>
        </member>
        <member name="M:Telerik.WebControls.GridColumnCollection.Remove(System.Object)">
            <summary>
            Removes the first occurrence of an object from the
            <b>GridColumnCollection</b>.
            </summary>
            <param name="Val">The object to remove from the collection.</param>
        </member>
        <member name="M:Telerik.WebControls.GridColumnCollection.IndexOf(Telerik.WebControls.GridColumn)">
            <summary>
            Determines the index of a specific column in the
            <b>GridColumnCollection</b>.
            </summary>
            <returns>
            The index of <span class="parameter">value</span> if found in the collection;
            otherwise, -1.
            </returns>
            <param name="column">
                The <see cref="T:Telerik.WebControls.GridColumn"/> to locate in the
                <strong>GridColumnCollection</strong>.
            </param>
        </member>
        <member name="M:Telerik.WebControls.GridColumnCollection.Remove(Telerik.WebControls.GridColumn)">
            <summary>
            Removes the first occurrence of a column from the
            <b>GridColumnCollection</b>.
            </summary>
            <param name="column">The column to remove from the collection.</param>
        </member>
        <member name="M:Telerik.WebControls.GridColumnCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the <strong>GridColumnCollection</strong> item at the specified
            index.
            </summary>
            <param name="index"><para>The zero-based index of the item(column) to remove.</para></param>
        </member>
        <member name="M:Telerik.WebControls.GridColumnCollection.FindByUniqueName(System.String)">
            <summary>
            Gets the first column with UniqueName found. Throws GridException if no column is found.
            </summary>
            <param name="UniqueName"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WebControls.GridColumnCollection.FindByUniqueNameSafe(System.String)">
            <summary>
            Gets the first column with UniqueName found. Returns null if no column is found.
            </summary>
            <param name="UniqueName"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WebControls.GridColumnCollection.FindByDataField(System.String)">
            <summary>
            Gets the first column found bound to the DataField. Throws GridException if no column is bound to this DataField
            </summary>
            <param name="DataField"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WebControls.GridColumnCollection.FindByDataFieldSafe(System.String)">
            <summary>
            Gets the first column found bound to the DataField. Returns null is no column is bound to this DataField
            </summary>
            <param name="DataField"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WebControls.GridColumnCollection.FindAllByDataField(System.String)">
            <summary>
            Gets all columns found bound to the DataField specified. Returns null is no column is bound to this DataField
            </summary>
            <param name="DataField"></param>
            <returns></returns>
        </member>
        <member name="P:Telerik.WebControls.GridColumnCollection.Count">
            <summary>Gets the number of columns added programmatically or declaratively.</summary>
            <remarks>
                Note that this is not the actual number of column in a
                <see cref="T:Telerik.WebControls.GridTableView"/>. See also
                <see cref="P:Telerik.WebControls.GridTableView.RenderColumns"/>
            </remarks>
            <seealso cref="P:Telerik.WebControls.GridTableView.RenderColumns">RenderColumns Property (Telerik.WebControls.GridTableView)</seealso>
        </member>
        <member name="P:Telerik.WebControls.GridColumnCollection.Item(System.Int32)">
            <remarks>
            If the column/detail table structure is created after the control has been
            initialized (indicated by <strong>RadGrid.Init</strong> event ) the state of the
            columns/detail tables may have been lost. This happens when properties have been set to
            <strong>GridColumn</strong>/<strong>GridTableView</strong> instance before it has been
            added to the corresponding collection of
            <strong>Columns</strong>/<strong>DetailTables</strong>. Then a
            <strong>GridException</strong> is thrown with message: <em>"Failed accessing
            GridCollumn by index. Please very that you have specified the structure of RadGrid
            correctly."</em>
            </remarks>
        </member>
        <member name="T:Telerik.WebControls.GridDropDownColumn">
            <remarks>
            	<para>Here is the mechanism which Telerik RadGrid uses to present
                values for <strong>GridDropDownColumn</strong>. Consider the snippet below:</para>
            	<para class="example">&lt;rad:GridDropDownColumn<br/>
                 UniqueName="LevelID"<br/>
            		<strong>ListDataMember="Level"</strong><br/>
            		<strong>ListTextField="Description"</strong><br/>
            		<strong>ListValueField="LevelID"</strong><br/>
                 HeaderText="LevelID"<br/>
            		<strong>DataField="LevelID"</strong><br/>
                /&gt;</para>
            	<para>
            		<br/>
                    As you can see, a requirement for the proper functioning of
                    <strong>GridDropDownColumn</strong> is that <strong><u>all column
                    values</u></strong> referenced by the <see cref="P:Telerik.WebControls.GridDropDownColumn.DataField">DataField</see>
                    attribute match the column values referenced by the
                    <see cref="P:Telerik.WebControls.GridDropDownColumn.ListValueField">ListValueField</see> attribute.<br/>
                    If there are values in the LevelID column of the LevelID table which do not
                    have corresponding equal values in the LevelID column of the Level table, then
                    the grid will display the default first value from the Description column as it
                    will not "know" what is the correct field.
                </para>
            </remarks>
            <summary>
            Displays a <b>DropDown</b> control for each item in the column. This allows you
            to edit for example lookup field(s) from data table(s).
            </summary>
            <seealso cref="!:http://www.telerik.com/demos/aspnet/Grid/Examples/GeneralFeatures/ColumnTypes/DefaultCS.aspx" cat="Online demos">Grid column types</seealso>
            <seealso cref="!:grdColumnTypes.html" cat="RadGrid manual">Grid Column types</seealso>
            <seealso cref="!:grdDesignColumns.html" cat="RadGrid manual">Adding columns design-time</seealso>
            <seealso cref="!:grdUsingColumns.html" cat="RadGrid manual">Using columns</seealso>
        </member>
        <member name="P:Telerik.WebControls.GridDropDownColumn.ListDataMember">
            <summary>
            	<para>The <strong>ListDataMember</strong> property points to the data table (part
                of the dataset used for grid data-source) which is the source for the
                <strong>GridDropDownColumn</strong> generation.</para>
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridDropDownColumn.DataSourceID">
            <summary>
            A string, specifying the ID of the datasource control, which will be used to
            populate the dropdown with data.
            </summary>
            <value>
            A <strong><em>string</em></strong>, specifying the ID of the datasource control,
            which will be used to populate the dropdown with data.
            </value>
        </member>
        <member name="P:Telerik.WebControls.GridDropDownColumn.ListTextField">
            <summary>
            	<para>The <strong>ListTextField</strong> points to the column in the data table
                from which the grid will extract the values for the dropdown.</para>
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridDropDownColumn.DataValueField">
            <summary></summary>
        </member>
        <member name="P:Telerik.WebControls.GridDropDownColumn.ListValueField">
            <summary>
            	<para>The <strong>ListValueField</strong> points to the column in the data table
                which will be used as a pointer to retrieve the items for the dropdown in the
                <strong>GridDropDownColumn</strong>.</para>
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridDropDownColumn.DataField">
            <summary>
            	<para>The <strong>DataField</strong> property points to the column in the grid
                data-source containing values which will be compared at a later stage with the
                values available in the column, referenced by the
                <strong>%</strong>ListValueField:ListValueField% property.</para>
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridDropDownColumn.ReadOnly">
            <summary>
            Gets or sets a value indicating if this column's items will be visible/available
            for edit in edit forms.
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridDropDownColumn.EnableEmptyListItem">
            <summary>
            A Boolean value, indicating whether the dropdown column will be bound to a
            default value/text when there is no data source specified, from which to fetch the
            data.
            </summary>
            <value>
            A <strong><em>Boolean</em></strong> value, specifying whether the dropdown column
            accepts EmptyListItemText and EmptyListItemValue strings.
            </value>
        </member>
        <member name="P:Telerik.WebControls.GridDropDownColumn.EmptyListItemText">
            <summary>
            A string, specifying the text to be displayed in normal mode, when there is no
            Data Source specified for the column. In edit mode, this value is rendered as a
            dropdown list item. When in edit mode, and there is a valid DataSource specified for
            the control, this value is appended as the first item of the dropdown box.
            </summary>
            <value>
            A <strong><em>string</em></strong>, specifying the text to be displayed in
            normal/edit mode, when there is no Data Source specified for the column.
            </value>
        </member>
        <member name="P:Telerik.WebControls.GridDropDownColumn.EmptyListItemValue">
            <summary>
                A string value, representing the value, associated with the
                <see cref="P:Telerik.WebControls.GridDropDownColumn.EmptyListItemText"/>.
            </summary>
            <value>
                A <strong><em>string</em></strong> value, representing the value, associated with
                the <see cref="P:Telerik.WebControls.GridDropDownColumn.EmptyListItemText"/>.
            </value>
        </member>
        <member name="P:Telerik.WebControls.GridDropDownColumn.IsEditable">
            <summary>
            A Boolean value, indicating whether a dropdown column is editable. If it is
            editable, it will be represented as an active dropdown box in edit mode.
            </summary>
            <value>
            A <strong><em>Boolean</em></strong> value, indicating whether a dropdown column
            is editable.
            </value>
        </member>
        <member name="P:Telerik.WebControls.GridDropDownColumn.AllowSorting">
            <summary>Gets or sets a whether the column data can be sorted.</summary>
            <value>
            A <strong><em>boolean</em></strong> value, indicating whether the column data can
            be sorted.
            </value>
        </member>
        <member name="P:Telerik.WebControls.GridDropDownColumn.AllowFiltering">
            <summary>
            A Boolean property, which specifies whether filtering will be enabled for the
            column.
            </summary>
            <value>
            A <strong><em>Bollean</em></strong> value, indicating whether a particular
            dropdown column can be filtered.
            </value>
        </member>
        <member name="T:Telerik.WebControls.GridForceExtractValues">
            <summary>
            Force RadGrid to extract values from EditableColumns that are ReadOnly.
            See also the <see cref="M:Telerik.WebControls.GridTableView.ExtractValuesFromItem(System.Collections.IDictionary,Telerik.WebControls.GridEditableItem)"/> method.
            </summary>
        </member>
        <member name="F:Telerik.WebControls.GridForceExtractValues.None">
            <summary>
            No values would be extracted from ReadOnly column
            </summary>
        </member>
        <member name="F:Telerik.WebControls.GridForceExtractValues.InBrowseMode">
            <summary>
            Values will be extracted only when an item is NOT in edit mode
            </summary>        
        </member>
        <member name="F:Telerik.WebControls.GridForceExtractValues.InEditMode">
            <summary>
            Values will be extracted only when an item is in edit mode
            </summary>
        </member>
        <member name="F:Telerik.WebControls.GridForceExtractValues.Always">
            <summary>
            Values will be extracted in all cases.
            </summary>
        </member>
        <member name="T:Telerik.WebControls.GridEditCommandColumn">
            <summary>
            Initially only the [Edit] button is shown. When it is pressed, the [Update] and
            [Cancel] appear at its place and the cells on this row become editable.
            </summary>
            <seealso cref="!:http://www.telerik.com/demos/aspnet/Grid/Examples/GeneralFeatures/ColumnTypes/DefaultCS.aspx" cat="Online demos">Grid column types</seealso>
            <seealso cref="!:http://www.telerik.com/demos/aspnet/Grid/Examples/Programming/WebGrid/DefaultCS.aspx" cat="Online demos">Web Grid</seealso>
            <example>
            	<pre>
            &lt;rad:GridEditCommandColumn ButtonType="ImageButton" UpdateImageUrl="..\Img\Update.gif"<br/>    EditImageUrl="..\Img\Edit.gif" InsertImageUrl="..\Img\Insert.gif"<br/>    CancelImageUrl="..\Img\Cancel.gif" UniqueName="EditCommandColumn"&gt;<br/>&lt;/rad:GridEditCommandColumn&gt;
                </pre>
            </example>
            <seealso cref="!:grdColumnTypes.html" cat="RadGrid manual">Grid Column types</seealso>
            <seealso cref="!:grdDesignColumns.html" cat="RadGrid manual">Adding columns design-time</seealso>
            <seealso cref="!:grdUsingColumns.html" cat="RadGrid manual">Using columns</seealso>
        </member>
        <member name="P:Telerik.WebControls.GridEditCommandColumn.ButtonType">
            <summary>
            Gets or sets a value indicating what type of buttons will be used in the
            <strong>GridEditCommandColumn</strong> items.
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridEditCommandColumn.CancelText">
            <summary>
            Gets or sets a string representing the text that will be used for the Cancel
            button, in the Edit/Insert form.
            </summary>
            <value>string, representing the text that will be used for the Cancel button.</value>
        </member>
        <member name="P:Telerik.WebControls.GridEditCommandColumn.EditText">
            <value>string, representing the text that will be used for the Edit button.</value>
            <summary>
            Gets or sets a string, representing the text of the edit linkbutton, which is
            located in the GridEditCommandColumn, and which will replace the default "Edit"
            text.
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridEditCommandColumn.UpdateText">
            <value>
            A <strong><em>string</em></strong>, representing the text that will be used for
            the Update button.
            </value>
            <summary>
            Gets or sets a string, representing the text that will be used for the Update
            button.
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridEditCommandColumn.InsertText">
            <value>
            A <strong><em>string</em></strong>, representing the text that will be used for
            the Insert button.
            </value>
            <summary>
            Gets or sets a string, representing a text, which will be displayed instead of
            the default "Insert" text for the GridEditFormInsertItem item.
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridEditCommandColumn.InsertImageUrl">
            <summary>
            Gets or sets the URL for the image that will be used to fire the Insert command.
            This property should be used in conjunction with <strong>ButtonType</strong> set to
            <strong>ImageButton</strong>.
            </summary>
            <value>string, representing the URL of the image that is used.</value>
        </member>
        <member name="P:Telerik.WebControls.GridEditCommandColumn.UpdateImageUrl">
            <summary>
                Gets or sets the URL for the image that will be used to fire the Update command.
                This property should be used in conjunction with <see cref="P:Telerik.WebControls.GridEditCommandColumn.ButtonType"/> set
                to <strong>ImageButton</strong>.
            </summary>
            <value>string, representing the URL of the image that is used.</value>
        </member>
        <member name="P:Telerik.WebControls.GridEditCommandColumn.EditImageUrl">
            <value>
            A <strong><em>string</em></strong>, representing the URL of the image that is
            used.
            </value>
            <summary>
            Gets or sets the URL for the image that will be used to fire the Edit command.
            This property should be used in conjunction with <strong>ButtonType</strong> set to
            <strong>ImageButton</strong>.
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridEditCommandColumn.CancelImageUrl">
            <commentsfrom cref="P:Telerik.WebControls.GridEditCommandColumn.EditImageUrl" filter="##VALUE"/>
            <summary>
            A string, representing the url path to the image that will be used instead of the
            default cancel linkbutton, in the EditForm.
            </summary>
            <value>
            A <strong><em>string</em></strong>, representing the url path to the image that
            will be used instead of the default cancel linkbutton, in the EditForm.
            </value>
        </member>
        <member name="P:Telerik.WebControls.GridEditCommandColumn.Groupable">
            <commentsfrom cref="P:Telerik.WebControls.GridColumn.Groupable" filter=""/>
        </member>
        <member name="P:Telerik.WebControls.GridEditCommandColumn.UniqueName">
            <summary>
            Gets or sets a unique name for this column. The unique name can be used to
            reference particular columns, or cells within grid rows.
            </summary>
            <value>
            	<para>A <strong><em>string</em></strong>, representing the Unique name of the
                column.</para>
            </value>
        </member>
        <member name="T:Telerik.WebControls.GridExpandColumn">
            <summary>
            This column appears when the grid has a hierarchical structure, to facilitate the
            expand/collapse functionality. The expand column is always placed in front of all other
            grid content columns and can not be moved.
            </summary>
            <seealso cref="!:grdColumnTypes.html" cat="RadGrid Manual">Column Types</seealso>
            <seealso cref="!:grdHideExpandCollapseImagesWhenNoRecords.html" cat="RadGrid Manual">How to hide images of ExpandCollapse column when no records</seealso>
        </member>
        <member name="P:Telerik.WebControls.GridExpandColumn.ExpandImageUrl">
            <summary>
            Gets or sets a string, specifying the URL to the image, which will be used
            instead of the default Expand image for the GridGroupSplitterColumn (the plus
            sign).
            </summary>
            <value>
            A <strong><em>string</em></strong>, specifying the URL to the image, which will
            be used instead of the default Expand image for the GridGroupSplitterColumn
            </value>
        </member>
        <member name="P:Telerik.WebControls.GridExpandColumn.CollapseImageUrl">
            <summary>
            Gets or sets a string, specifying the URL to the image, which will be used
            instead of the default Collapse image for the GridGroupSplitterColumn (the minus
            sign).
            </summary>
            <value>
            A <strong><em>string</em></strong>, specifying the URL to the image, which will
            be used instead of the default Collapse image for the GridGroupSplitterColumn
            </value>
        </member>
        <member name="P:Telerik.WebControls.GridExpandColumn.ButtonType">
            <summary>
            Gets a Telerik.WebControls.GridExpandColumnType value, indicating the type of the
            button. The button of the GridExpandColumn is always of type ImageButton.
            </summary>
            <value>
            A Telerik.WebControls.GridExpandColumnType value, indicating the type of the
            button.
            </value>
        </member>
        <member name="P:Telerik.WebControls.GridExpandColumn.UniqueName">
            <summary>
                Gets or sets a string, specifying the Unique name of the column. The default value
                is "ExpandColumn". <script type="text/javascript">
            	</script>
            	<span id="dxCrLf"></span>
            	<span id="dxCrLf"></span> function
                GridCreated()<span id="dxCrLf"></span> { <span id="dxCrLf"></span>
            	<span id="dxCrLf"></span> } <span id="dxCrLf"></span>
            	<span id="dxCrLf"></span>
            </summary>
            <value>
            A <strong><em>string</em></strong>, specifying the Unique name of the
            column.
            </value>
        </member>
        <member name="P:Telerik.WebControls.GridExpandColumn.Groupable">
            <summary>
            Gets a <strong><em>Boolean</em></strong> value indicating whether the
            GridGroupSplitterColumn is groupable. This value is always false.
            </summary>
            <value>
            Gets a <strong><em>Boolean</em></strong> value indicating whether the
            GridGroupSplitterColumn is groupable.
            </value>
        </member>
        <member name="P:Telerik.WebControls.GridExpandColumn.Reorderable">
            <summary>
            Gets a Boolean value, indicating whether the GridExpandColumn is reorderable.
            This value is always false, due to the specificity of the column, which should always
            be positioned first.
            </summary>
            <value>
            A <strong><em>Boolean</em></strong> value, indicating whether the
            GridExpandColumn is reorderable.
            </value>
        </member>
        <member name="P:Telerik.WebControls.GridExpandColumn.CommandName">
            <summary>
                Gets or sets a string, representing the CommandName of the GridExpandColumn. The
                command name's default value is "ExpandCollapse". It can be used to determine the
                type of command in the ItemCommand event handler. <script type="text/javascript">
            	</script>
            	<span id="dxCrLf"></span>
            	<span id="dxCrLf"></span> function
                GridCreated()<span id="dxCrLf"></span> { <span id="dxCrLf"></span>
            	<span id="dxCrLf"></span> } <span id="dxCrLf"></span>
            	<span id="dxCrLf"></span>
            </summary>
            <value>
            A <strong><em>string</em></strong>, representing the CommandName of the
            GridExpandColumn.
            </value>
        </member>
        <member name="T:Telerik.WebControls.GridGroupSplitterColumn">
            <summary>
            This column appears when grouping is enabled, to facilitate the expand/collapse
            functionality. The group splitter column is always placed first and can not be
            moved.
            </summary>
            <seealso cref="!:grdColumnTypes.html" cat="RadGrid manual">Grid Column types</seealso>
            <seealso cref="!:http://www.telerik.com/demos/aspnet/Grid/Examples/GroupBy/OutlookStyle/DefaultCS.aspx" cat="Online demos">Grouping demo with GridGroupSplitterColumn</seealso>
        </member>
        <member name="P:Telerik.WebControls.GridGroupSplitterColumn.ExpandImageUrl">
            <summary>
            Gets or sets a string, specifying the URL to the image, which will be used
            instead of the default Expand image for the GridGroupSplitterColumn (the plus
            sign).
            </summary>
            <value>
            A <strong><em>string</em></strong>, specifying the URL to the image, which will
            be used instead of the default Expand image for the GridGroupSplitterColumn
            </value>
        </member>
        <member name="P:Telerik.WebControls.GridGroupSplitterColumn.CollapseImageUrl">
            <summary>
            Gets or sets a string, specifying the URL to the image, which will be used
            instead of the default Collapse image for the GridGroupSplitterColumn (the minus
            sign).
            </summary>
            <value>
            A <strong><em>string</em></strong>, specifying the URL to the image, which will
            be used instead of the default Collapse image for the GridGroupSplitterColumn
            </value>
        </member>
        <member name="P:Telerik.WebControls.GridGroupSplitterColumn.Groupable">
            <summary>
            Gets a <strong><em>Boolean</em></strong> value indicating whether the
            GridGroupSplitterColumn is groupable. This value is always false.
            </summary>
            <value>
            Gets a <strong><em>Boolean</em></strong> value indicating whether the
            GridGroupSplitterColumn is groupable.
            </value>
        </member>
        <member name="P:Telerik.WebControls.GridGroupSplitterColumn.CorrespondingExpression">
            <exclude/>
            <excludetoc/>
            <summary>This property is for internal usage.</summary>
        </member>
        <member name="T:Telerik.WebControls.GridHeaderButtonType">
            <summary>
            	<para>An enumeration, used to get/set the button type of the headers of the
                columns. The default value is LinkButton. The possible values are:</para>
            	<list type="bullet">
            		<item>LinkButton</item>
            		<item>PushButton</item>
            		<item>TextButton</item>
            	</list>
            	<para>If set to a value other than LinkButton, the property is only honored when
                sorting is enabled.</para>
            </summary>
        </member>
        <member name="T:Telerik.WebControls.GridHyperLinkColumn">
            <summary>
            Each row in a <strong>Hyperlink</strong> column will contain a predefined
            hyperlink. This link is not the same for the whole column and can be defined for each
            row individually.
            </summary>
            <seealso cref="!:http://www.telerik.com/demos/aspnet/Grid/Examples/GeneralFeatures/ColumnTypes/DefaultCS.aspx" cat="Online demos">Grid column types</seealso>
            <remarks>
            	<para>The content of the column can be bound to a field in a data source or to a
                static text. You can customize the look of the links by
                <a href="grdSkins.html#CSSClasses">using
                CSS classes</a>.</para>
            	<para>You can set multiple fields to a <strong>GridHyperlinkColumn</strong> through
                its <strong>DataNavigateUrlFields</strong> property. These fields can later be used
                when setting the <strong>DataNavigateUrlFormatString</strong> property and be part
                of a query string:</para>
            	<div class="LanguageSpecific" id="Code_VB" style="DISPLAY: block">
            		<table class="CodeContainerTable" cellspacing="0" cellpadding="0" border="0">
            			<tbody>
            				<tr>
            					<td nowrap="nowrap">
            						<pre>
            							<code inline="true">
            &lt;rad:GridHyperLinkColumn<br/>     DataNavigateUrlFields= <font color="black"><font class="string">"ProductID,OrderID"</font><br/>     DataNavigateUrlFormatString= <font class="string">"~/Details.aspx?ProductID={0}&amp;OrderID={1}"</font>&gt;<br/>&lt;/rad:GridHyperLinkColumn&gt;</font>
            							</code>
            						</pre>
            					</td>
            				</tr>
            			</tbody>
            		</table>
            	</div>
            </remarks>
            <seealso cref="!:grdColumnTypes.html" cat="RadGrid manual">Grid Column types</seealso>
            <seealso cref="!:grdDesignColumns.html" cat="RadGrid manual">Adding columns design-time</seealso>
            <seealso cref="!:grdUsingColumns.html" cat="RadGrid manual">Using columns</seealso>
        </member>
        <member name="P:Telerik.WebControls.GridHyperLinkColumn.DataNavigateUrlField">
            <summary>
            Gets or sets a string, specifying the DataField from the data source, which will
            supply the text for the url, which will be the target of the current
            window/frame.
            </summary>
            <value>
            A <strong><em>string</em></strong>, specifying the DataField from the data
            source, which will supply the text for the url, which will be the target of the current
            window/frame.
            </value>
        </member>
        <member name="P:Telerik.WebControls.GridHyperLinkColumn.DataNavigateUrlFields">
            <summary>
            Gets or sets a string, representing a comma-separated enumeration of DataFields
            from the data source, which will form the url of the windwow/frame that the hyperlink
            will target.
            </summary>
            <value>
            A <strong><em>string</em></strong>, representing a comma-separated enumeration of
            DataFields from the data source, which will form the url of the windwow/frame that the
            hyperlink will target.
            </value>
        </member>
        <member name="P:Telerik.WebControls.GridHyperLinkColumn.DataNavigateUrlFormatString">
            <summary>
            Gets or sets a string, specifying the FormatString of the DataNavigateURL.
            Essentially, the DataNavigateUrlFormatString property sets the formatting for the url
            string of the target window or frame.
            </summary>
            <value>
            A <strong><em>string</em></strong>, specifying the FormatString of the
            DataNavigateURL.
            </value>
        </member>
        <member name="P:Telerik.WebControls.GridHyperLinkColumn.DataTextField">
            <summary>
            Gets or sets a string, representing the DataField name from the data source,
            which will be used to supply the text for the hyperlink in the column. This text can
            further be customized, by using the DataTextFormatString property.
            </summary>
            <value>
            A <strong><em>string</em></strong>, representing the DataField name from the data
            source, which will be used to supply the text for the hyperlink in the column.
            </value>
        </member>
        <member name="P:Telerik.WebControls.GridHyperLinkColumn.DataTextFormatString">
            <summary>
            Gets or sets a string, specifying the format string, which will be used to format
            the text of the hyperlink, rendered in the cells of the column.
            </summary>
            <value>
            A <strong><em>string</em></strong>, specifying the format string, which will be
            used to format the text of the hyperlink, rendered in the cells of the column.
            </value>
        </member>
        <member name="P:Telerik.WebControls.GridHyperLinkColumn.NavigateUrl">
            <summary>
            Gets or sets a string, specifying the url, to which to navigate, when a hyperlink
            within a column is pressed. This property will be honored only if the
            DataNavigateUrlField and DataNavigateUrlFields are not set. If either
            DataNavigateUrlField or DataNavigateUrlFields are set, they will override the
            NavigateUrl property.
            </summary>
            <value>
            A a <strong><em>string</em></strong>, specifying the url, to which to navigate,
            when a hyperlink within a column is pressed.
            </value>
        </member>
        <member name="P:Telerik.WebControls.GridHyperLinkColumn.Target">
            <summary>
            	<para>Sets or gets a string, specifying the window or frame at which to target
                content. The possible values are:</para>
            	<para>_blank - the target URL will open in a new window<br/>
                _self - the target URL will open in the same frame as it was clicked<br/>
                _parent - the target URL will open in the parent frameset<br/>
                _top - the target URL will open in the full body of the window</para>
            </summary>
            <value>
            A <strong><em>string</em></strong>, specifying the window or frame at which to
            target content.
            </value>
        </member>
        <member name="P:Telerik.WebControls.GridHyperLinkColumn.Text">
            <summary>
            Gets or sets a string, specifying the text to be displayed by the hyperlinks in
            the column, when there is no DataTextField specified.
            </summary>
            <value>
            A <strong><em>string</em></strong>, specifying the text to be displayed by the
            hyperlinks in the column, when there is no DataTextField specified.
            </value>
        </member>
        <member name="P:Telerik.WebControls.GridHyperLinkColumn.AllowFiltering">
            <summary>
            Gets or sets whether the column data can be filtered. The default value is
            true.
            </summary>
            <value>
            A <strong><em>Boolean</em></strong> value, indicating whether the column can be
            filtered.
            </value>
        </member>
        <member name="T:Telerik.WebControls.GridTemplateColumn">
            <summary>
            Displays each item in the column in accordance with a specified templates (item,
            edit item, header and footer templates). This allows you to provide custom controls in
            the column.
            </summary>
            <seealso cref="!:http://www.telerik.com/demos/aspnet/Grid/Examples/GeneralFeatures/ColumnTypes/DefaultCS.aspx" cat="Online demos">Grid column types</seealso>
            <example>
            	<pre>
            &lt;rad:GridTemplateColumn UniqueName="TemplateColumn" SortExpression="CompanyName"&gt;<br/>    &lt;FooterTemplate&gt;<br/>&lt;img src="Img/image.gif" alt="" style="vertical-align: middle" /&gt;<br/>        Template footer<br/>   
            &lt;/FooterTemplate&gt;<br/>    &lt;HeaderTemplate&gt;<br/>        
            &lt;table id="Table1" cellspacing="0" cellpadding="0" width="300" border="1"&gt;<br/>            &lt;tr&gt;<br/>&lt;td colspan="2" align="center"&gt;<br/>                    &lt;b&gt;Contact details&lt;/b&gt;&lt;/td&gt;<br/>&lt;/tr&gt;<br/>            &lt;tr&gt;<br/>                &lt;td style="width: 50%" align="center"&gt;<br/> 
            &lt;asp:LinkButton CssClass="Button" Width="140" ID="btnContName" Text="Contact name"<br/> 
            ToolTip="Sort by ContactName" CommandName='Sort' CommandArgument='ContactName'<br/>                       
            runat="server" /&gt;&lt;/td&gt;<br/>                &lt;td style="width: 50%" align="center"&gt;<br/> 
            &lt;asp:LinkButton CssClass="Button" Width="140" ID="btnContTitle" Text="Contact title"<br/>      
            ToolTip="Sort by ContactTitle" CommandName='Sort' CommandArgument='ContactTitle'<br/>      
            runat="server" /&gt;&lt;/td&gt;<br/>            &lt;/tr&gt;<br/>        &lt;/table&gt;<br/>   
            &lt;/HeaderTemplate&gt;<br/>    &lt;ItemTemplate&gt;<br/>      
            &lt;table cellpadding="1" cellspacing="1" class="customTable"&gt;<br/>         
            &lt;tr&gt;<br/>                &lt;td style="width: 50%"&gt;<br/>     
            &lt;/%# Eval("ContactName") /%&gt;<br/>                &lt;/td&gt;<br/> 
            &lt;td style="width: 50%"&gt;<br/>          
            &lt;/%# Eval("ContactTitle") /%&gt;<br/>            
            &lt;/td&gt;<br/>            &lt;/tr&gt;<br/>            &lt;tr&gt;<br/>     
            &lt;td colspan="2" align="center"&gt;<br/>                   
            &lt;a href='&lt;/%# "<a href="http://www.google.com/search?hl=en&amp;q">http://www.google.com/search?hl=en&amp;q</a>=" + DataBinder.Eval(Container.DataItem, "ContactName") + "&amp;btnG=Google+Search"/%&gt;'&gt;<br/>   
            &lt;em&gt;Search Google for<br/>                            &lt;/%# Eval("ContactName") /%&gt;<br/> 
            &lt;/em&gt;&lt;/a&gt;<br/>                &lt;/td&gt;<br/>            &lt;/tr&gt;<br/>            &lt;tr&gt;<br/>&lt;td colspan="2" align="center"&gt;<br/>                    &lt;img src="Img/image.gif" alt="" /&gt;<br/> 
            &lt;/td&gt;<br/>            &lt;/tr&gt;<br/>        &lt;/table&gt;<br/>    
            &lt;/ItemTemplate&gt;<br/>&lt;/rad:GridTemplateColumn&gt;
                </pre>
            </example>
            <seealso cref="!:grdColumnTypes.html" cat="RadGrid manual">Grid Column types</seealso>
            <seealso cref="!:grdDesignColumns.html" cat="RadGrid manual">Adding columns design-time</seealso>
            <seealso cref="!:grdUsingColumns.html" cat="RadGrid manual">Using columns</seealso>
            <seealso cref="!:grdCustomizeWithGridTemplateColumn.html" cat="RadGrid manual">Customizing with GridTemplateColumn</seealso>
            <seealso cref="!:gridPersistCheckBoxStateInGridTemplateColumnOnRebind.html" cat="RadGrid Manual - How-To">Persisting CheckBox control state in GridTemplateColumn on Rebind</seealso>
            <remarks>
            	<para>You can view and set templates using the Edit Templates command in grid's
                Smart Tag.</para>
            	<para>You can also create the template columns programmatically and bind the
                controls in the code-behind (see
                <a href="grdProgrammaticCreation.html">Programmatic creation of
                Telerik RadGrid</a>).</para>
            	<para><strong>Note:</strong> Unlike other grid columns, GridTemplateColumn cannot
                be set as read-only.</para>
            </remarks>
            <seealso cref="!:grdProgrammaticCreation.html" cat="RadGrid manual">Programmatic creation</seealso>
        </member>
        <member name="P:Telerik.WebControls.GridTemplateColumn.DataField">
            <summary>
            Gets or sets a string, specifying which DataField from the data source the
            control will use to handle the automatic filtering.
            </summary>
            <value>
            A <strong><em>string</em></strong>, specifying which DataField from the data
            source the control will use to handle the automatic filtering.
            </value>
        </member>
        <member name="P:Telerik.WebControls.GridTemplateColumn.AllowFiltering">
            <summary>
            Gets or sets whether the column data can be filtered. The default value is
            true.
            </summary>
            <value>
            A <strong><em>Boolean</em></strong> value, indicating whether the column can be
            filtered.
            </value>
        </member>
        <member name="P:Telerik.WebControls.GridTemplateColumn.EditItemTemplate">
            <summary>
            Template that will generate controls in the corresponding cell if the item is in edit mode.
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridTemplateColumn.FooterTemplate">
            <summary>
            Gets or sets the Controls, which will be rendered in the footer of the template
            column.
            </summary>
            <value>A value of type System.Web.UI.CompiledTemplateBuilder.</value>
        </member>
        <member name="P:Telerik.WebControls.GridTemplateColumn.HeaderTemplate">
            <summary>
            Gets or sets the Controls, which will be rendered in the header of the template
            column.
            </summary>
            <value>A value of type System.Web.UI.CompiledBindableTemplateBuilder.</value>
        </member>
        <member name="P:Telerik.WebControls.GridTemplateColumn.ItemTemplate">
            <summary>
            Gets or sets the ItemTemplate, which is rendered in the control in normal
            (non-Edit) mode.
            </summary>
            <value>A value of type System.Web.UI.CompiledBindableTemplateBuilder</value>
        </member>
        <member name="P:Telerik.WebControls.GridTemplateColumn.IsEditable">
            <summary>
            Gets a Boolean value, indicating whether the column is editable. If a template
            column is editable, it will render the contents of the EditItemTemplate in the edit
            form. If there are no contents in the EditItemTemplate, the column will not be
            editable.
            </summary>
            <value>
            A <strong><em>Boolean</em></strong> value, indicating whether the column is
            editable.
            </value>
        </member>
        <member name="P:Telerik.WebControls.GridTemplateColumn.InitializeTemplatesFirst">
            <summary>
            Set to false if templates should overwrite other controls in header cell (sort image, etc)
            </summary>
        </member>
        <member name="T:Telerik.WebControls.Design.Grid.ControlBuilderForm">
            <summary>
            Summary description for ControlBuilderForm.
            </summary>
        </member>
        <member name="M:Telerik.WebControls.Design.Grid.ControlBuilderForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Telerik.WebControls.Design.Grid.ControlBuilderForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Telerik.RadGridDesign.GridBordersPageControl">
            <summary>
            Summary description for GridBordersPageControl.
            </summary>
        </member>
        <member name="T:Telerik.WebControls.GridPropertyPageControlBase">
            <summary>
            Summary description for GridPropertyPageControl.
            </summary>
        </member>
        <member name="M:Telerik.WebControls.GridPropertyPageControlBase.IsFirstActivate">
            <summary>
            Checks if it is the first time a property page control has been
            activated
            </summary>
            <returns></returns>
        </member>
        <member name="F:Telerik.RadGridDesign.GridBordersPageControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Telerik.RadGridDesign.GridBordersPageControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Telerik.RadGridDesign.GridBordersPageControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Telerik.RadGridDesign.GridColumnsPageControl">
            <summary>
            Summary description for GridColumnsPageControl.
            </summary>
        </member>
        <member name="M:Telerik.RadGridDesign.GridColumnsPageControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Telerik.RadGridDesign.GridColumnsPageControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Telerik.RadGridDesign.GridFormatPageControl">
            <summary>
            Summary description for GridFormatPageControl.
            </summary>
        </member>
        <member name="F:Telerik.RadGridDesign.GridFormatPageControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Telerik.RadGridDesign.GridFormatPageControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Telerik.RadGridDesign.GridFormatPageControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Telerik.RadGridDesign.GridGeneralPageControl">
            <summary>
            Summary description for GridGeneralPageControl.
            </summary>
        </member>
        <member name="F:Telerik.RadGridDesign.GridGeneralPageControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Telerik.RadGridDesign.GridGeneralPageControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Telerik.RadGridDesign.GridGeneralPageControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Telerik.RadGridDesign.GridPagingPageControl">
            <summary>
            Summary description for GridPagingPageControl.
            </summary>
        </member>
        <member name="F:Telerik.RadGridDesign.GridPagingPageControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Telerik.RadGridDesign.GridPagingPageControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Telerik.RadGridDesign.GridPagingPageControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Telerik.RadGridDesign.GridTableSettingsPageControl">
            <summary>
            Summary description for GridGeneralPageControl.
            </summary>
        </member>
        <member name="F:Telerik.RadGridDesign.GridTableSettingsPageControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Telerik.RadGridDesign.GridTableSettingsPageControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Telerik.RadGridDesign.GridTableSettingsPageControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Telerik.WebControls.GridEditFormType">
            <summary>
            Type of the edit forms in RadGrid
            </summary>
        </member>
        <member name="F:Telerik.WebControls.GridEditFormType.AutoGenerated">
            <summary>
            Form is autogenerated, based on the column that each GridTableView exposes.
            </summary>
        </member>
        <member name="F:Telerik.WebControls.GridEditFormType.WebUserControl">
            <summary>
            The edit form is a WebUserControl specified by <see cref="P:Telerik.WebControls.GridEditFormSettings.UserControlName"/>
            </summary>
        </member>
        <member name="F:Telerik.WebControls.GridEditFormType.Template">
            <summary>
            The template specified by <see cref="P:Telerik.WebControls.GridEditFormSettings.FormTemplate"/> is used as an edit form.
            </summary>
        </member>
        <member name="T:Telerik.WebControls.GridEditFormSettings">
            <summary>
            Settings for the edit forms generated by a <see cref="T:Telerik.WebControls.GridTableView"/> for each item that is in edit mode and the 
            <see cref="P:Telerik.WebControls.GridTableView.EditMode"/> is set to <see cref="F:Telerik.WebControls.GridEditMode.EditForms"/>.
            </summary>
            <remarks>
            Set the type of the EditForm using <see cref="P:Telerik.WebControls.GridEditFormSettings.EditFormType"/>.
            If the type is <see cref="F:Telerik.WebControls.GridEditFormType.AutoGenerated"/> then the form will be autogenerated based on the
            columns of the corresponding table view. Note that only the columns that are editable wil be included. Those are
            the standatrd columns that have editing capabilities - such <see cref="T:Telerik.WebControls.GridBoundColumn"/> that has 
            <see cref="P:Telerik.WebControls.GridBoundColumn.ReadOnly"/> set to false. All the style properties apply only to the autogenerated edit form.
            See <see cref="T:Telerik.WebControls.GridEditFormType"/> for more details on the types of the edit forms.
            </remarks>
        </member>
        <member name="P:Telerik.WebControls.GridEditFormSettings.EditColumn">
            <summary>
            Set properties of the update-cancel buttons column that appears in an edit form
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridEditFormSettings.ColumnNumber">
            <summary>
            Number of vertical columns to split all edit fields on the form when it is autogenerated.
            Each GridColumn has a <see cref="P:Telerik.WebControls.GridColumn.EditFormColumnIndex"/> to choose the column where
            the editor would appear.
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridEditFormSettings.CaptionDataField">
            <summary>
            Data field to incude in form's caption
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridEditFormSettings.CaptionFormatString">
            <summary>
            Caption format string - {0} parameter must be included and would be repaced with DataField value
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridEditFormSettings.FormStyle">
            <summary>
            Style of the forms's area (rendered as a DIV elemet)
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridEditFormSettings.FormTableStyle">
            <summary>
            Style of the forms' table element
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridEditFormSettings.FormMainTableStyle">
            <summary>
            Style of the forms' main table element
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridEditFormSettings.FormCaptionStyle">
            <summary>
            Style of the table row that shows the caption of the form
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridEditFormSettings.FormTableItemStyle">
            <summary>
            Style of the normal rows in the edit-form's table
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridEditFormSettings.FormTableAlternatingItemStyle">
            <summary>
            Style of the alternating rows in the edit-form's table
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridEditFormSettings.FormTableButtonRowStyle">
            <summary>
            Style of the footer row of the table, where the update-cancel buttons appear
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridEditFormSettings.EditFormType">
            <summary>
            Specifies the type of the edit form. See <see cref="T:Telerik.WebControls.GridEditFormType"/> about details for 
            the possible values and their meanings.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Telerik.WebControls.GridEditFormSettings.UserControlName" -->
        <member name="P:Telerik.WebControls.GridEditFormSettings.FormTemplate">
            <summary>
            EditForm template - if EditFormType if <see cref="P:Telerik.WebControls.GridEditFormSettings.EditFormType"/> is of type <see cref="F:Telerik.WebControls.GridEditFormType.Template"/>.
            </summary>
        </member>
        <member name="T:Telerik.WebControls.GridEditManager">
            <summary>
            Summary description for GridEditManager.
            </summary>
        </member>
        <member name="T:Telerik.RadGridDesign.GridColumnsEditorForm">
            <summary>
            Summary description for GridColumnsEditorForm.
            </summary>
        </member>
        <member name="T:Telerik.RadGridDesign.GridEditorForm">
            <summary>
            Summary description for GridEditorForm.
            </summary>
        </member>
        <member name="M:Telerik.RadGridDesign.GridEditorForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Telerik.RadGridDesign.GridEditorForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Telerik.WebControls.designerdisabler">
            <summary>
            Disable visual designer
            </summary>
        </member>
        <member name="T:Telerik.RadGridDesign.GridTableViewCollectionEditor">
            <summary>
            Summary description for GridColumnsEditorForm.
            </summary>
        </member>
        <member name="T:Telerik.RadGridDesign.GridFakeEditorForm">
            <summary>
            This implementation allows grid property-page-control to work properly on
            both grid editor forms - GridEditorForm and GridComponentEditor
            </summary>
        </member>
        <member name="T:Telerik.RadGridDesign.GridEmptyEditorControl">
            <summary>
            PropertyPage control that is empty - used as default property page of GridEditorForm
            </summary>
        </member>
        <member name="M:Telerik.RadGridDesign.GridEmptyEditorControl.IsFirstActivate">
            <summary>
            Checks if it is the first time a property page control has been
            activated
            </summary>
            <returns></returns>
        </member>
        <member name="T:Telerik.WebControls.GridCommandItem">
            <summary>
            Item that is displayed on top or at the bottom of the each GridTableView base on the settings of 
            <see cref="P:Telerik.WebControls.GridTableView.CommandItemDisplay"/> property. Generally this item displays by default "Add new record" and "Refresh" button,
            but it can be customized using the <see cref="P:Telerik.WebControls.GridTableView.CommandItemTemplate"/>. The commands bubbled through this item will be fired by 
            RadGrid.ItemCommand event. 
            </summary>
        </member>
        <member name="T:Telerik.WebControls.GridItem">
            <summary>
            Class that represents the rows of each GridTableView with RadGrid. All Items in RadGrid inherit from this class.
            RadGrid creates the items runtime, when it binds to data.
            </summary>
        </member>
        <member name="M:Telerik.WebControls.GridItem.#ctor(Telerik.WebControls.GridTableView,System.Int32,System.Int32,Telerik.WebControls.GridItemType)">
            <summary>
            Initializes the base properties of an item.
            </summary>
            <param name="ownerTableView"></param>
            <param name="itemIndex"></param>
            <param name="dataSetIndex"></param>
            <param name="itemType"></param>
        </member>
        <member name="M:Telerik.WebControls.GridItem.FireCommandEvent(System.String,System.Object)">
            <summary>
            Use this method to simulate item command event that bubbles to RadGrid and can be handeled automatically or in a custom manner,
            handling RadGrid.ItemCommand event.
            </summary>
            <param name="commandName">command to bubble, for example 'Page'</param>
            <param name="commandArgument">command argument, for example 'Next'</param>
        </member>
        <member name="M:Telerik.WebControls.GridItem.RestoreDecorator">
            <summary>
            This method is not intended to be used directly from your code.
            </summary>
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.WebControls.GridItem.Initialize(Telerik.WebControls.GridColumn[])">
            <summary>
            This method is not intended to be used directly from your code
            </summary>
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.WebControls.GridItem.SetupItem(System.Boolean,System.Object,Telerik.WebControls.GridColumn[],System.Web.UI.ControlCollection)">
            <summary>
            This method is not intended to be used directly from your code
            </summary>
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.WebControls.GridItem.PrepareItemStyle">
            <summary>Override this method to change the default logic for rendering the item</summary>
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.WebControls.GridItem.SetTempIndexHierarchical(System.String)">
            <summary>
            Used after postback before ViewState becomes available - 
            for example in ItemCreated and ItemDataBound events
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Telerik.WebControls.GridItem.RemoveChildSelectedItems">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.WebControls.GridItem.RemoveChildEditItems">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.WebControls.GridItem.SetChildrenVisible(System.Boolean)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.WebControls.GridItem.SetVisibleChildren(System.Boolean)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.WebControls.GridItem.ExpandHierarchyToTop">
            <example>
            	<code lang="CS" title="C#">
            //get MasterTableView's second (index 1) nested view item
            GridNestedViewItem firstLevelNestedViewItem = (GridNestedViewItem)RadGrid1.MasterTableView.GetItems(GridItemType.NestedView)[1];
            //get second nested view item at level 2 of the hierarchy
            GridNestedViewItem secondLevelNestedViewItem = (GridNestedViewItem)firstLevelNestedViewItem.NestedTableViews[0].GetItems(GridItemType.NestedView)[1];
            //get the first item to be expanded
            GridItem itemToExpand = secondLevelNestedViewItem.NestedTableViews[0].GetItems(GridItemType.Item)[0];
            itemToExpand.ExpandHierarchyToTop();
                </code>
            	<code lang="VB" title="VB">
            'get MasterTableView's second (index 1) nested view item
            Dim firstLevelNestedViewItem As GridNestedViewItem = CType(RadGrid1.MasterTableView.GetItems(GridItemType.NestedView)(1), GridNestedViewItem)
            'get second nested view item at level 2 of the hierarchy
            Dim secondLevelNestedViewItem As GridNestedViewItem = CType(firstLevelNestedViewItem.NestedTableViews(0).GetItems(GridItemType.NestedView)(1), GridNestedViewItem)
            'get the first item to be expanded
            Dim itemToExpand As GridItem = secondLevelNestedViewItem.NestedTableViews(0).GetItems(GridItemType.Item)(0)
            itemToExpand.ExpandHierarchyToTop()
                </code>
            </example>
            <overloads>Expands the hierarchy starting from the last level to the top</overloads>
        </member>
        <member name="M:Telerik.WebControls.GridItem.CalcColSpan(Telerik.WebControls.GridColumn[],System.Int32,System.Int32)">
            <summary>
            Calculate column-span value for a cell using column list, when the cell indicated
            with FromCellIndex should be spanned to ToCellIndex
            </summary>
            <param name="columns">columns - visible property is taken in count</param>
            <param name="FromCellIndex">cell index of spanned cell</param>
            <param name="ToCellIndex">cell index of next not-spanned cell or -1 for the last cell index</param>
            <returns>ColSpan number</returns>
        </member>
        <member name="P:Telerik.WebControls.GridItem.OwnerTableView">
            <summary>
            Gets a reference to the <strong>GridTableView</strong> that owns this
            <strong>GridItem.</strong>
            </summary>
            <example>
                You can use the OwnerTableView property to get an instance of the GridTableView
                that holds the item modified. For example in the
                <strong>SelectedIndexChanged</strong> event handler you can get the
                <strong>GridTableView</strong> object like this:
                <code lang="CS" title="C#">
            protected void RadGrid1_SelectedIndexChanged(object sender, EventArgs e)
                {
                    GridTableView tableview = RadGrid1.SelectedItems[0].OwnerTableView;
                }
                </code>
            	<code lang="VB" title="VB.NET">
            Protected Sub RadGrid1_SelectedIndexChanged(sender As Object, e As EventArgs)
               Dim tableview As GridTableView = RadGrid1.SelectedItems(0).OwnerTableView
            End Sub
                </code>
            </example>
        </member>
        <member name="P:Telerik.WebControls.GridItem.OwnerID">
            <summary>
            Gets the <strong>ClientID</strong> of the <strong>GridTableView</strong> that
            owns this instance.
            </summary>
            <example>
                The OwnerID property will get the <strong>ClientID</strong> of the
                <strong>GridTableView</strong> that owns the referenced instance. For example the
                code below will return RadGrid1_ctl01 which is the ClientID of the MasterTableView
                for basic RadGrid:
                <code lang="CS" title="C#">
            protected void RadGrid1_SelectedIndexChanged(object sender, EventArgs e)
                {
                    Label1.Text = RadGrid1.SelectedItems[0].OwnerID;
                }
                </code>
            	<code lang="VB" title="VB.NET">
            Protected Sub RadGrid1_SelectedIndexChanged(sender As Object, e As EventArgs)
               Label1.Text = RadGrid1.SelectedItems(0).OwnerID
            End Sub
                </code>
            </example>
        </member>
        <member name="P:Telerik.WebControls.GridItem.OwnerGridID">
            <summary>
            Gets the <strong>ClientID</strong> of the <strong>RadGrid</strong> instance that
            owns the item.
            </summary>
            <example>
                The OwnerGridID property will get the <strong>ClientID</strong> of the
                <strong>Grid</strong> instance that owns the referenced item. For example the code
                below will return RadGrid1 which is the ClientID of the owner Grid instance.
                <code lang="CS" title="C#">
            protected void RadGrid1_ItemCreated(object sender, GridItemEventArgs e)
                {
                    if (e.Item is GridEditableItem &amp;&amp; e.Item.IsInEditMode)
                            {
                         Response.Write(e.Item.OwnerGridID);
                        
                         }
                }
                </code>
            	<code lang="VB" title="VB.NET">
            Protected Sub RadGrid1_ItemCreated(sender As Object, e As GridItemEventArgs)
               If Typeof e.Item Is GridEditableItem And e.Item.IsInEditMode Then
                  Response.Write(e.Item.OwnerGridID)
               End If 
            End Sub
                </code>
            </example>
            <remarks>
            This would be useful if several controls use the same eventhandler and you need
            to diferentiate the Grid instances in the handler.
            </remarks>
        </member>
        <member name="E:Telerik.WebControls.GridItem.CellDataBound">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.WebControls.GridItem.HasChildItems">
            <summary>
            Gets a value indicating whether this item has child items - or items somehow
            related to this.
            </summary>
            <example>
                For example the <strong>GridDataItem</strong> has child
                <strong>NestedViewItem</strong> that holds the hierarchy tables when grid is
                rendering hierarchy.<br/>
            	<strong>GroupHeaderItems</strong> has the items with a group for children, and so
                on.
                <code lang="CS" title="C#">
            protected void RadGrid1_ItemCreated(object sender, GridItemEventArgs e)
                {
                    if (e.Item is GridItem &amp;&amp; (e.Item as GridItem).HasChildItems == true)
                        {
                          Label1.Text = "has items";
                        }
                }
                </code>
            </example>
        </member>
        <member name="P:Telerik.WebControls.GridItem.CanExpand">
            <summary>
            Gets a value indicating whether the item can be "expanded" to show its child items 
            </summary>
            <example>
                Shows whether an item can be "expanded" to show its child items
                <code lang="CS" title="C#">
            protected void RadGrid1_ItemCreated(object sender, GridItemEventArgs e)
                {
                    if (e.Item is GridItem &amp;&amp; (e.Item as GridItem).CanExpand == true)
                        {
                          Label1.Text = "Item was expanded";
                        }
                }
                </code>
            </example>
        </member>
        <member name="P:Telerik.WebControls.GridItem.DataItem">
            <summary>
            The original <strong>DataItem</strong> from the <strong>DataSource</strong>. See
            examples section below.
            </summary>
            <example>
            For example if you bind the grid to a <strong>DataView</strong> object the
            <strong>DataItem</strong> will represent the <strong>DataRowView</strong> object
            extracted from the <strong>DataView</strong> for this <strong>GridItem</strong>. Note
            that the <strong>DataItem</strong> object is available only when grid binds to
            data.
            </example>
        </member>
        <member name="P:Telerik.WebControls.GridItem.DataSetIndex">
            <summary>
            Gets the index of the <strong>GridDataItem</strong> in the underlying
            DataTable/specified table from a DataSet<strong>.</strong>
            </summary>
            <value>Integer</value>
            <requirements>
            This property has a meaning only when the Telerik RadGrid source is
            DataTable.
            </requirements>
        </member>
        <member name="P:Telerik.WebControls.GridItem.ItemIndex">
            <summary>
                Gets the index of the grid item among the <see cref="P:Telerik.WebControls.GridTableView.Items"/>
                collection. This index also can be used to get the <strong>DataKeyValues</strong>
                corresponding to this item from a <strong>GridTableView.</strong>
            </summary>
            <example>
                Gets a value representing the index of this item among the
                <see cref="P:Telerik.WebControls.GridTableView.Items"/> collection. This index also can be used to
                get the <strong>DataKeyValues</strong> corresponding to this item from a
                <strong>GridTableView.</strong>
            </example>
        </member>
        <member name="P:Telerik.WebControls.GridItem.ClientRowIndex">
            <summary>
            Gets the index of the row as in the html table object rendered on the client
            </summary>
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.WebControls.GridItem.RowIndex">
            <summary>
            Gets the index of the item in the rows collection of the underlying Table server control
            </summary>
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.WebControls.GridItem.ItemIndexHierarchical">
            <summary>
            Get the unique item index among all the item in the hierarchy. This index is used when setting item to selected, edited, etc
            </summary>
            <example>
                If we have three level hierarchy with two items each and select the first item in
                the third level then the ItemIndexHierarchical will be 1:0_1:0_0
                <code lang="CS" title="C#">
            protected void RadGrid1_SelectedIndexChanged(object sender, EventArgs e)
                {
                    Response.Write(RadGrid1.SelectedItems[0].ItemIndexHierarchical);
                }
                </code>
            	<code lang="VB" title="VB">
            Protected Sub RadGrid1_SelectedIndexChanged(sender As Object, e As EventArgs)
               Response.Write(RadGrid1.SelectedItems(0).ItemIndexHierarchical)
            End Sub 'RadGrid1_SelectedIndexChanged
                </code>
            </example>
        </member>
        <member name="P:Telerik.WebControls.GridItem.ItemType">
            <summary>
            Gets the respective <see cref="T:Telerik.WebControls.GridItemType">GridItemType</see> of the grid item.
            </summary>
            <example>
                Gets the respective <see cref="T:Telerik.WebControls.GridItemType">GridItemType</see> of the grid item.
                <code lang="CS" title="C#">
            foreach (GridItem dataItem in rgdStateRules.MasterTableView.Items)
            {
              if (dataItem.ItemType == GridItemType.Item ||
                  dataItem.ItemType ==   GridItemType.AlternatingItem)
              {
                 string reqName = dataItem["SomeColumnUniqueName"]. Text;
                 ....
              }
            }
                </code>
            	<code lang="VB" title="VB">
            Dim dataItem As GridItem
            For Each dataItem In  rgdStateRules.MasterTableView.Items
               If dataItem.ItemType = GridItemType.Item Or dataItem.ItemType = GridItemType.AlternatingItem Then
                  Dim reqName As String = dataItem("SomeColumnUniqueName").Text
               End If
            Next dataItem
                </code>
            </example>
        </member>
        <member name="P:Telerik.WebControls.GridItem.Expanded">
            <summary>
            Gets or sets a value indicating whether the grid item is expanded or
            collapsed.
            </summary>
            <example>
                The example below sets all expanded items to collapsed
                <code lang="CS" title="C#">
            for(int i = 0; i &lt; RadGrid.Items.Count - 1;i++)
                if(RadGrid.Items[i].Expanded)
                {
                     RadGrid.Items[i].Expanded = false;
                }
                </code>
            	<code lang="VB" title="VB">
            Dim i As Integer
            For i = 0 To (RadGrid.Items.Count - 1) Step -1
               If RadGrid.Items(i).Expanded Then
                  RadGrid.Items(i).Expanded = False
               End If
            Next i
                </code>
            </example>
        </member>
        <member name="P:Telerik.WebControls.GridItem.Display">
            <example>
                The example below will hide the GridCommandItem.
                <code lang="CS" title="C#">
            if (e.Item is GridCommandItem)
                    {
                        e.Item.Display = false;
                    }
                </code>
            	<code lang="VB" title="VB">
            If Typeof e.Item Is GridCommandItem Then
               e.Item.Display = False
            End If
                </code>
            </example>
            <summary>Sets whether the GridItem will be visible or with style="display:none;"</summary>
        </member>
        <member name="P:Telerik.WebControls.GridItem.Selected">
            <summary>Gets or set a value indicating whether the grid item is selected</summary>
            <example>
            	<para>You can check whether a certain item is selected using the Selected
                property:</para>
            	<code lang="CS" title="C#">
            protected void RadGrid1_PreRender(object sender, EventArgs e)
                {
                    foreach (GridDataItem dataitem in RadGrid1.MasterTableView.Items)
                    {
                        if (dataitem.Selected == true)
                        {
                            //do your thing
                        }
                    }
                }
                </code>
            	<code lang="VB" title="VB.NET">
            Protected Sub RadGrid1_PreRender(sender As Object, e As EventArgs)
               Dim dataitem As GridDataItem
               For Each dataitem In  RadGrid1.MasterTableView.Items
                  If dataitem.Selected = True Then
                    'do your thing
                  End If
               Next dataitem 
            End Sub 'RadGrid1_PreRender
                </code>
            </example>
        </member>
        <member name="P:Telerik.WebControls.GridItem.Edit">
            <summary>Sets the Item in edit mode. Requires Telerik RadGrid to rebind.</summary>
            <remarks>
            	<para>
                    If <see cref="P:Telerik.WebControls.GridTableView.EditMode"/> is set to InPlace, the grid column
                    editors will be displayed inline of this item.
                </para>
            	<para>
                    If <see cref="P:Telerik.WebControls.GridTableView.EditMode"/> is set to InForms, a new GridItem
                    will be created, which will be child of this item. The new item will hold the
                    edit form.
                </para>
            </remarks>
            <example>
            	<para>We suggest using IsInEditMode instead of Edit to check whether an Item is in
                edit more or not.</para>
            </example>
        </member>
        <member name="P:Telerik.WebControls.GridItem.GroupIndex">
            <summary>Gets the index of the Item in the group. This works only when grouping.</summary>
            <example>
                This example expands all items that meet the condition:
                <code lang="CS" title="C#">
            if (e.Item.GroupIndex == EditItemGroupIndex | EditItemGroupIndex.StartsWith(e.Item.GroupIndex + "_")) 
            {
             e.Item.Expanded = true;
            }
                </code>
            	<code lang="VB" title="VB">
            If e.Item.GroupIndex = EditItemGroupIndex Or EditItemGroupIndex.StartsWith(e.Item.GroupIndex &amp; "_") Then
            e.Item.Expanded = True
            End If
                </code>
            </example>
            <value>
            	<para>Returns a string formed: X_Y_Z, where:<br/>
                 - X is a zero-based value representing the group index (the first group of results
                will have index = 0)</para>
            	<para>- Y is a zero-based value representing the group level. If you group the grid
                using 2 criteria, the inner groups will have index = 1.</para>
            	<para>- Z is a zero-based value representing the GridItem index in the group (the
                first item will have index = 0)</para>
            	<para><strong>Note</strong> that if you use more criteria, you will have more
                indexes returned: X_Y_Z_W, where the last one is always the item index in the
                group.</para>
            </value>
        </member>
        <member name="P:Telerik.WebControls.GridItem.IsDataBound">
            <summary>
            Gets a value indicating whether the grid item is bound to a data source.
            </summary>
            <example>
            Default value is true when the grid is databound.
            </example>
        </member>
        <member name="P:Telerik.WebControls.GridItem.IsInEditMode">
            <summary>
            Gets a value indicating whether the grid item is in edit mode at the
            moment.
            </summary>
            <example>
                Will locate the TextBox for Item in Edit mode:
                <code lang="CS" title="C#">
            if (e.Item is GridEditableItem &amp;&amp; e.Item.IsInEditMode)
                {
                  TextBox txt = (e.Item as GridEditableItem)["SomeColumnName"].Controls[0] as TextBox;
                }
                </code>
            	<code lang="VB" title="VB">
            If Typeof e.Item Is GridEditableItem And e.Item.IsInEditMode Then
                ...
            End If
                </code>
            </example>
        </member>
        <member name="M:Telerik.WebControls.GridCommandItem.#ctor(Telerik.WebControls.GridTableView)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.WebControls.GridCommandItem.SetupItem(System.Boolean,System.Object,Telerik.WebControls.GridColumn[],System.Web.UI.ControlCollection)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.WebControls.GridCommandItem.PrepareItemStyle">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="T:Telerik.WebControls.GridEditableItem">
            <summary>
            	<para>Represents the base class for any items that display and edit data in a
            <see cref="T:Telerik.WebControls.GridTableView">GridTableView</see> of RadGrid. Inheritors has the
            capabilities to:</para>
            	<list type="bullet">
            		<item>Locate a table cell based on the column unique names</item>
            		<item>Extract values from the cells of column editors</item>
            		<item>Has a dictionary of saved-old-values that are necessary for optimistic concurency
            editing oprations</item>
            		<item>Edit/browse mode</item>
            		<item>EditManager instance, which is capable of locating the column
            editors</item></list>
            </summary>
        </member>
        <member name="M:Telerik.WebControls.GridEditableItem.InitializeEditorInCell(Telerik.WebControls.IGridEditableColumn)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.WebControls.GridEditableItem.ExtractValues(System.Collections.IDictionary)">
            <summary>
            Extracts values for each column, using <see cref="M:Telerik.WebControls.GridEditableColumn.FillValues(System.Collections.IDictionary,Telerik.WebControls.GridEditableItem)"/>
            </summary>
            <param name="newValues">This dictionary to fill, this parameter should not be null</param>
        </member>
        <member name="M:Telerik.WebControls.GridEditableItem.GetDataKeyValue(System.String)">
            <summary>
            Get the DataKeyValues from the owner GridTableView with the corresponding item ItemIndex and keyName.
            The keyName should be one of the specified in the  <see cref="P:Telerik.WebControls.GridTableView.DataKeyNames"/> array
            </summary>
            <param name="keyName">data key name</param>
            <returns>data key value</returns>
        </member>
        <member name="P:Telerik.WebControls.GridEditableItem.EditManager">
            <summary>Allows you to access the column editors</summary>
            <example>
            	<code lang="CS" title="C#">
            GridEditManager editMan = editedItem.EditManager;
            IGridEditableColumn editableCol = (column as IGridEditableColumn);
            IGridColumnEditor editor = editMan.GetColumnEditor( editableCol );
                </code>
            	<code lang="VB" title="VB">
            Dim editMan As GridEditManager = editedItem.EditManager
            Dim editableCol As IGridEditableColumn = CType(column, IGridEditableColumn)
            Dim editor As IGridColumnEditor = editMan.GetColumnEditor(editableCol)
                </code>
            </example>
        </member>
        <member name="P:Telerik.WebControls.GridEditableItem.Item(System.String)">
            <excludetoc/>
            <exclude/>
        </member>
        <member name="P:Telerik.WebControls.GridEditableItem.Item(Telerik.WebControls.GridColumn)">
            <excludetoc/>
            <exclude/>
        </member>
        <member name="P:Telerik.WebControls.GridEditableItem.SavedOldValues">
            <summary>Gets the old value of the edited item</summary>
            <example>
            	<code lang="CS" title="C#">
            foreach (DictionaryEntry entry in newValues)
                 {
                    Label1.Text += "\n&lt;br /&gt;Key: " + entry.Key + "&lt;br /&gt;New value: " + entry.Value + "&lt;br /&gt; Old value: " + editedItem.SavedOldValues[entry.Key] + "&lt;br /&gt;";
                 }
                </code>
            	<code lang="VB" title="VB">
            	</code>
            	<code lang="VB" title="VB">
            For Each entry As DictionaryEntry In newValues
             Label1.Text += "" &amp; Microsoft.VisualBasic.Chr(10) &amp; "&lt;br /&gt;Key: " + entry.Key + "&lt;br /&gt;New value: " + entry.Value + "&lt;br /&gt; Old value: " + editedItem.SavedOldValues(entry.Key) + "&lt;br /&gt;"
            Next
                </code>
            </example>
        </member>
        <member name="P:Telerik.WebControls.GridEditableItem.CanExtractValues">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.WebControls.GridEditableItem.KeyValues">
            <example>
            	<code lang="CS" title="C#">
            string keyValues = ((GridEditableItem)e.Item).KeyValues;  
            if (keyValues.Contains("CustomerID"))  
                  Session["CustomerID"] = keyValues.Substring(13, keyValues.Length - 1);  
                  else 
                  Session["OrderID"] = keyValues.Substring(10, keyValues.Length - 1);
                </code>
            	<code lang="VB" title="VB">
            Dim keyValues As String = CType(e.Item, GridEditableItem).KeyValues
            If keyValues.Contains("CustomerID") Then
             Session("CustomerID") = keyValues.Substring(13, keyValues.Length - 1)
            Else
             Session("OrderID") = keyValues.Substring(10, keyValues.Length - 1)
            End If
                </code>
            </example>
        </member>
        <member name="T:Telerik.WebControls.GridDataItem">
            <summary>
            Summary description for GridDataItem.
            </summary>
        </member>
        <member name="M:Telerik.WebControls.GridDataItem.SetVisibleChildren(System.Boolean)">
            <summary>Sets the visibility of the children items.</summary>
            <remarks>This method is for Telerik RadGrid internal usage.</remarks>
        </member>
        <member name="M:Telerik.WebControls.GridDataItem.InitializeEditorInCell(Telerik.WebControls.IGridEditableColumn)">
            <remarks>This method is for Telerik RadGrid internal usage.</remarks>
        </member>
        <member name="T:Telerik.WebControls.GridEditFormItem">
            <summary>
            Item that loads an EditForm during binding if <see cref="P:Telerik.WebControls.GridTableView.EditMode"/> is <see cref="F:Telerik.WebControls.GridEditMode.EditForms"/>. When in this mode
            RadGrid loads an EditFormItem for each normal data-bound item. EditForm is generated only for the items that are in <see cref="!:Edit"/> = true mode.
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridEditFormItem.EditFormCell">
            <summary>
            The table cell where the edit form will be instantiated, during data-binding.
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridEditFormItem.FormColumns">
            <summary>
            FormColumns are only available when EditFormType is GridEditFormType.AutoGenerated.
            These are the container controls for each edit-form-column. You cna find the edit controls 
            in these containers. You should not remove any controls from this containers.
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridEditFormItem.ParentItem">
            <summary>
            The corresponding DataItem that the edit form is generated for.
            </summary>
        </member>
        <member name="T:Telerik.WebControls.GridFilteringItem">
            <summary>
                It's an item, displaying input controls, which allows user to enter a filter values
                for each visible column in a GridTableView. By default the columns render a textbox
                and a button, displaying the filtering menu on click. This item is visible based on
                the settings of <see cref="P:Telerik.WebControls.GridTableView.AllowFilteringByColumn"/> property.
                The items is displayed right under the header row of a GridTabelView.
            </summary>
            <seealso cref="!:grdSettingFilterTextBoxDimensions.html" cat="RadGrid Manual: How-To">Setting filter textbox dimensions/changing default filter image</seealso>
            <example>
            	<code lang="VB" title="Access controls of FilteringMenuItem" description="Setting filter textbox dimensions/changing default filter image">
            Protected Sub RadGrid1_ItemCreated(sender As Object, e As GridItemEventArgs) Handles RadGrid1.ItemCreated
               If Typeof e.Item Is GridFilteringItem Then
                  Dim filteringItem As GridFilteringItem = CType(e.Item, GridFilteringItem)
             
                  'set dimensions for the filter textbox 
                  Dim box As TextBox = CType(filteringItem("ContactName").Controls(0), TextBox)
                  box.Width = Unit.Pixel(30)
             
                  'set ImageUrl which points to your custom image
                  Dim image As Image = CType(filteringItem("ContactName").Controls(1), Image)
                 image.ImageUrl = "&lt;my_image_url&gt;"
               End If
            End Sub 'RadGrid1_ItemCreated
                </code>
            	<code lang="CS" title="Access controls of FilteringMenuItem" description="Setting filter textbox dimensions/changing default filter image">
            Protected void RadGrid1_ItemCreated(Object sender, GridItemEventArgs e)
            {
                     If (e.Item Is GridFilteringItem)
                    {
                        GridFilteringItem filteringItem = e.Item As GridFilteringItem;
             
                        //Set dimensions For the filter textbox 
                        TextBox box = filteringItem["ContactName"].Controls[0] As TextBox;
                        box.Width = Unit.Pixel(30);
             
                       //Set ImageUrl which points To your custom image
                       Image image = filteringItem["ContactName"].Controls[1] As Image;
                      image.ImageUrl = "&lt;my_image_url&gt;";
                    }
            }
                </code>
            </example>
        </member>
        <member name="M:Telerik.WebControls.GridFilteringItem.#ctor(Telerik.WebControls.GridTableView,System.Int32,System.Int32)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.WebControls.GridFilteringItem.Item(System.String)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="T:Telerik.WebControls.GridFooterItem">
            <summary>
            Displays the footer row of a GridTableView with cells for each column in the grid similar to GridHeaderItem.
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridFooterItem.Item(System.String)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.WebControls.GridFooterItem.Item(Telerik.WebControls.GridColumn)">
            <excludetoc/>
            <exclude/>
        </member>
        <member name="T:Telerik.WebControls.GridGroupHeaderItem">
            <summary>
            The item which splits the groups (when utilizing the grouping feature of RadGrid)
            and provides expand/collapse functionality for them.
            </summary>
            <example>
                Here is how you can get reference to the <strong>GridGroupHeaderItem</strong> on
                <strong>ItemDataBound</strong>:
                <code lang="VB" title="VB.NET">
            Private Sub RadGrid1_ItemDataBound(sender As Object, e As Telerik.WebControls.GridItemEventArgs)
               If Typeof e.Item Is GridGroupHeaderItem Then
                  Dim item As GridGroupHeaderItem = CType(e.Item, GridGroupHeaderItem)
                  'do something here
               End If
            End Sub 'RadGrid1_ItemDataBound
                </code>
            	<code lang="CS" title="C#">
            private void RadGrid1_ItemDataBound(object sender, Telerik.WebControls.GridItemEventArgs e)
            {
             if ( e.Item is GridGroupHeaderItem )
             {
              GridGroupHeaderItem item = (GridGroupHeaderItem)e.Item;
              //do something here
             }
             }
            }
                </code>
            </example>
            <remarks>Created and meaningful only with grouping enabled.</remarks>
            <requirements>
            	<see cref="T:Telerik.WebControls.GridGroupByExpression"/> should be applied to have such type of
                item(s).
            </requirements>
            <seealso cref="!:http://www.telerik.com/help/aspnet/grid/?grdCustomizeGridGroupHeaderItem.html">Customize GridGroupHeaderItem</seealso>
            <seealso cref="!:http://www.telerik.com/help/aspnet/grid/?grdPerformCalculationsInGroupHeader.html">Performing calculations in group header</seealso>
        </member>
        <member name="M:Telerik.WebControls.GridGroupHeaderItem.#ctor(Telerik.WebControls.GridTableView,System.Int32,System.Int32)">
            <summary>Marked for internal usage only</summary>
        </member>
        <member name="M:Telerik.WebControls.GridGroupHeaderItem.Initialize(Telerik.WebControls.GridColumn[])">
            <summary>Inherited from Control, for internal usage only</summary>
        </member>
        <member name="M:Telerik.WebControls.GridGroupHeaderItem.PrepareItemStyle">
            <summary>Inherited from Control, for internal usage only</summary>
        </member>
        <member name="M:Telerik.WebControls.GridGroupHeaderItem.SetupItem(System.Boolean,System.Object,Telerik.WebControls.GridColumn[],System.Web.UI.ControlCollection)">
            <summary>Inherited from Control, for internal usage only</summary>
        </member>
        <member name="M:Telerik.WebControls.GridGroupHeaderItem.GetChildItems">
            <summary>
                Method which returns the data items under the
                <see cref="T:Telerik.WebControls.GridGroupHeaderItem"/> group.
            </summary>
            <returns>An array of GridItem instances</returns>
            <example>
                The code below can be used to loop through the data items in a group on button
                click handler (for example): 
                <code lang="VB" title="VB.NET">
            Dim groupHeader As GridGroupHeaderItem = RadGrid1.MasterTableView.GetItems(GridItemType.GroupHeader)(0)
            Dim groupItems As GridItem() = groupHeader.GetChildItems()
            'traverse the items and operate with them further
                </code>
            	<code lang="CS" title="C#">
            GridGroupHeaderItem groupHeader= RadGrid1.MasterTableView.GetItems(GridItemType.GroupHeader)[0] as GridGroupHeaderItem;
            GridItem [] groupItems = groupHeader.GetChildItems();
            //traverse the items and operate with them further
                </code>
            </example>
            <remarks>Meaningful only with grouping enabled.</remarks>
            <requirements>
            	<see cref="T:Telerik.WebControls.GridGroupByExpression"/> should be applied to have
                <see cref="T:Telerik.WebControls.GridGroupHeaderItem"/> available.
            </requirements>
        </member>
        <member name="M:Telerik.WebControls.GridGroupHeaderItem.SetVisibleChildren(System.Boolean)">
            <summary>
                Method which shows/hides the items in the group designated by the
                <see cref="T:Telerik.WebControls.GridGroupHeaderItem"/>
            </summary>
            <returns>N/A</returns>
            <example>
                The code below will hide the items under the first group in the grid: 
                <code lang="VB" title="VB.NET">
            Dim groupHeader As GridGroupHeaderItem = RadGrid1.MasterTableView.GetItems(GridItemType.GroupHeader)(0)
            groupHeader.SetVisibleChildren(False)
                </code>
            	<code lang="CS" title="C#">
            GridGroupHeaderItem groupHeader = RadGrid1.MasterTableView.GetItems(GridItemType.GroupHeader)[0] as GridGroupHeaderItem;
            groupHeader.SetVisibleChildren(false);
                </code>
            </example>
            <remarks>Meaningful only with grouping enabled.</remarks>
            <requirements>
            	<see cref="T:Telerik.WebControls.GridGroupByExpression"/> should be applied to have
                <see cref="T:Telerik.WebControls.GridGroupHeaderItem"/> available.
            </requirements>
            <param name="value">
            boolean, determines whether the items in the group will be displayed or
            hidden
            </param>
        </member>
        <member name="P:Telerik.WebControls.GridGroupHeaderItem.DataCell">
            <summary>The cell holding the content of the <see cref="T:Telerik.WebControls.GridGroupHeaderItem"/></summary>
            <value>N/A</value>
            <example>
                Below is a sample code presenting how to customize the <strong>DataCell</strong>
                content dynamically on <strong>ItemDataBound:</strong>
            	<code lang="VB" title="VB.NET">
            Private Sub RadGrid1_ItemDataBound(sender As Object, e As Telerik.WebControls.GridItemEventArgs)
               If Typeof e.Item Is GridGroupHeaderItem Then
                  Dim item As GridGroupHeaderItem = CType(e.Item, GridGroupHeaderItem)
                  Dim groupDataRow As DataRowView = CType(e.Item.DataItem, DataRowView)
             
                  'Clear the present text of the cell
                  item.DataCell.Text = ""
                  Dim column As DataColumn
                  For Each column In groupDataRow.DataView.Table.Columns
             
                     'Check the condition and add only the field you need
                     If column.ColumnName = "Country" Then
                        item.DataCell.Text += "Customized display - Country is " + groupDataRow("Country").ToString()
                     End If
                  Next column
               End If
            End Sub 'RadGrid1_ItemDataBound
                </code>
            	<code lang="CS" title="C#">
            Private void RadGrid1_ItemDataBound(Object sender, Telerik.WebControls.GridItemEventArgs e)
            {
             If ( e.Item Is GridGroupHeaderItem )
             {
              GridGroupHeaderItem item = (GridGroupHeaderItem)e.Item;
              DataRowView groupDataRow = (DataRowView)e.Item.DataItem;
             
              //Clear the present text of the cell
              item.DataCell.Text = "";
              foreach( DataColumn column In groupDataRow.DataView.Table.Columns)
             
              //Check the condition And add only the field you need
              If ( column.ColumnName == "Country" )
              {
               item.DataCell.Text += "Customized display - Country is " + groupDataRow
               ["Country"].ToString();
              }
             }
            }
                </code>
            </example>
            <remarks>Created and meaningful only with grouping enabled.</remarks>
            <requirements>
            	<see cref="T:Telerik.WebControls.GridGroupByExpression"/> should be applied to have
                <see cref="T:Telerik.WebControls.GridGroupHeaderItem"/> with DataCell.
            </requirements>
            <seealso cref="!:http://www.telerik.com/help/aspnet/grid/?grdCustomizeGridGroupHeaderItem.html">Customize GridGroupHeaderItem</seealso>
            <seealso cref="!:http://www.telerik.com/help/aspnet/grid/?grdPerformCalculationsInGroupHeader.html">Performing calculations in group header</seealso>
        </member>
        <member name="P:Telerik.WebControls.GridGroupHeaderItem.HasChildItems">
            <summary>
                Boolean property indicating whether the relevant
                <see cref="T:Telerik.WebControls.GridGroupHeaderItem"/> has child items inside the group it forms.
            </summary>
            <value>boolean</value>
            <example>
            	<code lang="VB" title="VB.NET">
            Dim groupHeader As GridGroupHeaderItem = grid.MasterTableView.GetItems(GridItemType.GroupHeader)(0)
            If (groupHeader.HasChildItems) Then
              'operate with the items
            Else 
              'do something else
            End If
                </code>
            	<code lang="CS" title="C#">
            GridGroupHeaderItem groupHeader = grid.MasterTableView.GetItems(GridItemType.GroupHeader)[0] as GridGroupHeaderItem;
            if (groupHeader.HasChildItems)
            {
               //operate with the items
            }
            else
            {
               //do something else
            }
                </code>
            </example>
            <remarks>Meaningful only with grouping enabled.</remarks>
            <requirements>
            	<see cref="T:Telerik.WebControls.GridGroupByExpression"/> should be applied to have
                <see cref="T:Telerik.WebControls.GridGroupHeaderItem"/> with this boolean property.
            </requirements>
        </member>
        <member name="P:Telerik.WebControls.GridGroupHeaderItem.CanExpand">
            <summary>Marked for internal usage</summary>
        </member>
        <member name="T:Telerik.WebControls.GridHeaderItem">
            <summary>
            Summary description for GridHeaderItem.
            </summary>
        </member>
        <member name="M:Telerik.WebControls.GridHeaderItem.#ctor(Telerik.WebControls.GridTableView,System.Int32,System.Int32)">
            <excludetoc/>
            <exclude/>
        </member>
        <member name="M:Telerik.WebControls.GridHeaderItem.Initialize(Telerik.WebControls.GridColumn[])">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.WebControls.GridHeaderItem.Item(System.String)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="T:Telerik.WebControls.GridMultiRowItem">
            <summary>
            Summary description for GridMultiRowItem.
            </summary>
        </member>
        <member name="M:Telerik.WebControls.GridMultiRowItem.#ctor(Telerik.WebControls.GridTableView)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.WebControls.GridMultiRowItem.PrepareItemStyle">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.WebControls.GridTFoot.#ctor(Telerik.WebControls.GridTableView)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.WebControls.GridTFoot.RenderBeginTag(System.Web.UI.HtmlTextWriter)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.WebControls.GridTHead.#ctor(Telerik.WebControls.GridTableView,System.Boolean)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="T:Telerik.WebControls.GridNestedViewItem">
            <summary>
            Item that contains the nested instances of GridTableView class, that appear as a child item of the corresponding GridDataItem
            </summary>
            <remarks>
            The child tables will be created when grid is databinding and will be added as controls of the <see cref="P:Telerik.WebControls.GridNestedViewItem.NestedViewCell"/>
            Then these tables can also be accessed using the <see cref="P:Telerik.WebControls.GridNestedViewItem.NestedTableViews"/> array.
            </remarks>
        </member>
        <member name="M:Telerik.WebControls.GridNestedViewItem.#ctor(Telerik.WebControls.GridTableView,System.Int32,System.Int32)">
            <summary>
                Creates an instance of <see cref="T:Telerik.WebControls.GridNestedViewItem">GridNestedViewItem</see> For
                internal usage only.
            </summary>
            <exclude/>
            <excludetoc/>
            <param name="ownerTableView">
                An instance of <see cref="T:Telerik.WebControls.GridTableView">GridTableView Class</see>, which will
                contain the created item
            </param>
            <param name="itemIndex">
                The value for <see cref="P:Telerik.WebControls.GridItem.ItemIndex">ItemIndex Property
                (Telerik.WebControls.GridItem)</see> property
            </param>
            <param name="dataSetIndex">
                The value for <see cref="P:Telerik.WebControls.GridItem.DataSetIndex">DataSetIndex Property
                (Telerik.WebControls.GridItem)</see> property
            </param>
        </member>
        <member name="M:Telerik.WebControls.GridNestedViewItem.PrepareItemStyle">
            <summary>Defines the default logic for rendering the item. For internal usage only.</summary>
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.WebControls.GridNestedViewItem.Initialize(Telerik.WebControls.GridColumn[])">
            <summary>This method is not intended to be used directly from your code</summary>
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.WebControls.GridNestedViewItem.SetupItem(System.Boolean,System.Object,Telerik.WebControls.GridColumn[],System.Web.UI.ControlCollection)">
            <summary>This method is not intended to be used directly from your code</summary>
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.WebControls.GridNestedViewItem.NestedViewCell">
            <summary>Gets the cell that contains the <see cref="P:Telerik.WebControls.GridNestedViewItem.NestedTableViews"/>.</summary>
            <value>System.Web.UI.WebControls.TableCell</value>
            <example>
            	<code lang="CS">
            foreach (GridNestedViewItem nestedViewItem in radgrid1.MasterTableView.GetItems(GridItemType.NestedView))
            {
                TableCell cell = nestedViewItem.NestedViewCell;
                cell.BorderColor = System.Drawing.Color.Red;
            }
                </code>
            	<code lang="VB">
            Dim nestedViewItem As GridNestedViewItem
            For Each nestedViewItem In RadGrid1.MasterTableView.GetItems(GridItemType.NestedView)
                Dim cell As TableCell = nestedViewItem.NestedViewCell
                cell.BorderColor = System.Drawing.Color.Red
            Next nestedViewItem
                </code>
            </example>
        </member>
        <member name="P:Telerik.WebControls.GridNestedViewItem.NestedTableViews">
            <summary>
            Gets an array of GridTableView objects residing in the <see cref="P:Telerik.WebControls.GridNestedViewItem.NestedViewCell"/>.
            </summary>
            <example>
            	<code lang="CS">
            GridTableView nestedTable = RadGrid1.MasterTableView.Items[0].ChildItem.NestedTableViews[0];
                </code>
            	<code lang="VB">
            Dim nestedTable As GridTableView = RadGrid1.MasterTableView.Items(0).ChildItem.NestedTableViews(0)
                </code>
            </example>
        </member>
        <member name="T:Telerik.WebControls.GridNoRecordsItem">
            <summary>
            GridNoRecordsItem is used to display no records template, in the corresponding table view has <see cref="P:Telerik.WebControls.GridTableView.ShowHeadersWhenNoRecords"/> is set to true (the default)
            </summary>
        </member>
        <member name="M:Telerik.WebControls.GridNoRecordsItem.#ctor(Telerik.WebControls.GridTableView,System.Int32,System.Int32)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.WebControls.GridNoRecordsItem.PrepareItemStyle">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.WebControls.GridNoRecordsItem.Initialize(Telerik.WebControls.GridColumn[])">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.WebControls.GridNoRecordsItem.SetupItem(System.Boolean,System.Object,Telerik.WebControls.GridColumn[],System.Web.UI.ControlCollection)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="T:Telerik.WebControls.GridPagerItem">
            <summary>
            Summary description for GridPagerItem.
            </summary>
        </member>
        <member name="M:Telerik.WebControls.GridPagerItem.#ctor(Telerik.WebControls.GridTableView,System.Int32,System.Int32,System.Boolean)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.WebControls.GridPagerItem.SetupItem(System.Boolean,System.Object,Telerik.WebControls.GridColumn[],System.Web.UI.ControlCollection)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.WebControls.GridPagerItem.PrepareItemStyle">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.WebControls.GridPagerItem.InitializePagerItem(Telerik.WebControls.GridColumn[])">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.WebControls.GridPagerItem.IsTopPager">
            <summary>Gets the position of the pager in the RadGrid. Default value is false.</summary>
            <example>
            	<code lang="CS" title="C#">
            if (((GridPagerItem)this.Item).IsTopPager)
            {
            Item.Visible = false;
            return;
            }
                </code>
            	<code lang="VB" title="VB">
            If CType(Me.Item, GridPagerItem).IsTopPager Then
             Item.Visible = False
             Return
            End If
                </code>
            </example>
        </member>
        <member name="P:Telerik.WebControls.GridPagerItem.PagerContentCell">
            <summary>The Cell where the PagerItems are located</summary>
            <example>
            	<code lang="CS" title="C#">
            if (e.Item is GridPagerItem)
               {
                  GridPagerItem pagerItem = (e.Item as GridPagerItem);
                  pagerItem.PagerContentCell.Controls.Clear();
                  //custom paging
               }
                </code>
            	<code lang="VB" title="VB">
            If Typeof e.Item Is GridPagerItem Then
            Dim pagerItem As GridPagerItem = CType(e.Item, GridPagerItem)
             pagerItem.PagerContentCell.Controls.Clear
             'custom paging
            End If
                </code>
            </example>
        </member>
        <member name="T:Telerik.WebControls.GridStatusBarItem">
            <summary>
            GridStatusBarItem is used to display information messages for
            Telerik RadGrid status. Meaningful only when Telerik RadGrid is in AJAX
            mode.
            </summary>
        </member>
        <member name="M:Telerik.WebControls.GridStatusBarItem.#ctor(Telerik.WebControls.GridTableView,System.Int32,System.Int32)">
            <excludetoc/>
            <exclude/>
        </member>
        <member name="M:Telerik.WebControls.GridStatusBarItem.PrepareItemStyle">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.WebControls.GridStatusBarItem.Initialize(Telerik.WebControls.GridColumn[])">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.WebControls.GridStatusBarItem.SetupItem(System.Boolean,System.Object,Telerik.WebControls.GridColumn[],System.Web.UI.ControlCollection)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="T:Telerik.WebControls.GridGroupPanel">
            <summary>
            	<strong>GridGroupPanel</strong> appears on the top of Telerik RadGrid
                when <see cref="P:Telerik.WebControls.RadGrid.ShowGroupPanel">ShowGroupPanel</see> of RadGrid is set to
                <strong>true</strong> and if <see cref="P:Telerik.WebControls.GridClientSettings.AllowDragToGroup"/>
                is set to <strong>true</strong>, you can drag column to the panel to group data by
                that column.
            </summary>
            <seealso cref="!:grdBasicGrouping.html" cat="RadGrid Manual">Basic Grouping</seealso>
            <seealso cref="!:grdTraverseItemsInGroupPanel.html" cat="RadGrid Manual">Traversing items in group panel</seealso>
            <example>
            	<code lang="CS" title="Iterate through group panel items in PreRender">
            protected void RadGrid1_PreRender(object sender, System.EventArgs e)
            {
                    TableCell cell;
             
                    foreach (cell in RadGrid1.GroupPanel.GroupPanelItems)
                    {
                        Control ctrl;
                        foreach (ctrl in cell.Controls)
                        {
                            if (ctrl is ImageButton)
                            {
                                ImageButton button = ctrl as ImageButton;
                                button.ImageUrl = "&lt;my_img_url&gt;";
                                button.CausesValidation = false;
                            }
                        }
                    }
            }
                </code>
            	<code lang="VB" title="Iterate through group panel items in PreRender">
            Protected Sub RadGrid1_PreRender(ByVal sender As Object, ByVal e As System.EventArgs) Handles RadGrid1.PreRender
                    Dim cell As TableCell
             
                    For Each cell In RadGrid1.GroupPanel.GroupPanelItems
                        Dim ctrl As Control
                        For Each ctrl In cell.Controls
                            If (Typeof ctrl Is ImageButton) Then
                                Dim button As ImageButton = CType(ctrl, ImageButton)
                                button.ImageUrl = "&lt;my_img_url&gt;"
                                button.CausesValidation = False
                            End If
                        Next ctrl
                    Next cell
            End Sub
                </code>
            </example>
            <remarks>
                Group by fields (displayed in the GroupPanel) are defined through the
                <see cref="P:Telerik.WebControls.GridTableView.GroupByExpressions">GridGroupByExpressions</see>.
            </remarks>
        </member>
        <member name="M:Telerik.WebControls.GridGroupPanel.#ctor">
            <summary>For internal usage only.</summary>
        </member>
        <member name="M:Telerik.WebControls.GridGroupPanel.InitializeIn(Telerik.WebControls.RadGrid,System.Boolean)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.WebControls.GridGroupPanel.Ungroup(System.String)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.WebControls.GridGroupPanel.Swap(System.String,System.String)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.WebControls.GridGroupPanel.GroupPanelItems">
            <summary>
            Gets a collection of items displayed in the group panel. These items represent
            the <strong>GroupByFields</strong> used for Telerik RadGrid
            grouping.
            </summary>
            <example>
            	<code lang="CS" title="Traversing items in group panel">
            protected void RadGrid1_PreRender(object sender, System.EventArgs e)
            {
                    TableCell cell;
             
                    foreach (cell in RadGrid1.GroupPanel.GroupPanelItems)
                    {
                        Control ctrl;
                        foreach (ctrl in cell.Controls)
                        {
                            if (ctrl is ImageButton)
                            {
                                ImageButton button = ctrl as ImageButton;
                                button.ImageUrl = "&lt;my_img_url&gt;";
                                button.CausesValidation = false;
                            }
                        }
                    }
            }
                </code>
            	<code lang="VB" title="Traversing items in group panel">
            Protected Sub RadGrid1_PreRender(ByVal sender As Object, ByVal e As System.EventArgs) Handles RadGrid1.PreRender
                    Dim cell As TableCell
             
                    For Each cell In RadGrid1.GroupPanel.GroupPanelItems
                        Dim ctrl As Control
                        For Each ctrl In cell.Controls
                            If (Typeof ctrl Is ImageButton) Then
                                Dim button As ImageButton = CType(ctrl, ImageButton)
                                button.ImageUrl = "&lt;my_img_url&gt;"
                                button.CausesValidation = False
                            End If
                        Next ctrl
                    Next cell
            End Sub
                </code>
            </example>
            <seealso cref="!:grdTraverseItemsInGroupPanel.html" cat="RadGrid Manual">Traversing items in group panel</seealso>
        </member>
        <member name="P:Telerik.WebControls.GridGroupPanel.Text">
            <summary>
            Gets or sets the text displayed in the group panel to urge the user dragging a
            column to group by.
            </summary>
            <example>
            	<pre>
            &lt;GroupPanel Text="Drag here the column you need to group by."&gt;&lt;/GroupPanel&gt;
            </pre>
            </example>
            <remarks>
            Note that the GroupPanel Text has a default value, so you don't need to set it
            generally.
            </remarks>
        </member>
        <member name="P:Telerik.WebControls.GridGroupPanel.PanelStyle">
            <summary>Gets the style that will be used for the group panel.</summary>
            <example>
            	<pre>
                &lt;GroupPanel Text="Drag a column here."&gt;<br/>        &lt;PanelStyle BackColor="Aqua" BorderStyle="Dotted" /&gt;<br/>    &lt;/GroupPanel&gt;
                </pre>
            </example>
        </member>
        <member name="P:Telerik.WebControls.GridGroupPanel.PanelItemsStyle">
            <summary>Gets the style that will be used for the group panel items.</summary>
            <example>
            	<pre>
                &lt;GroupPanel Text="Drag a column here."&gt;<br/>        &lt;PanelStyle BackColor="Aqua" BorderStyle="Dotted" /&gt;<br/>        &lt;PanelItemsStyle BackColor="Black" Font-Italic="true"/&gt;<br/>    &lt;/GroupPanel&gt;
                </pre>
            </example>
        </member>
        <member name="P:Telerik.WebControls.GridGroupPanel.Visible">
            <summary>Gets or sets a value indicating whether the group panel will be displayed.</summary>
            <value>true, if group panel is visible, otherwise false (the default value).</value>
            <exclude/>
            <excludetoc/>
        </member>
        <member name="T:Telerik.WebControls.GridGroupPanelStyle">
            <summary>
            Summary description for GridGroupPanelStyle.
            </summary>
        </member>
        <member name="T:Telerik.WebControls.GridMenu">
            <summary>
                This class represents a generic menu that could be used in RadGrid. Currently it is
                used for the filtering menu (<see cref="T:Telerik.WebControls.GridFilterMenu"/>).
            </summary>
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.WebControls.GridMenu.OwnerGrid">
            <summary>Gets a reference to the parent RadGrid object.</summary>
        </member>
        <member name="P:Telerik.WebControls.GridMenu.ID">
            <summary>This property is for RadGrid internal usage.</summary>
        </member>
        <member name="P:Telerik.WebControls.GridMenu.Visible">
            <summary>Gets or sets if this menu would be visible</summary>
            <value>
            	<strong>true</strong>, if the menu would be visible, otherwise
            <strong>false</strong>.
            </value>
        </member>
        <member name="P:Telerik.WebControls.GridMenu.Items">
            <summary>Gets a collection of all menu items.</summary>
            <value>returns a <see cref="T:Telerik.WebControls.GridMenuItemCollection"/> of all menu items.</value>
            <remarks>
                You cannot use this property to modify the Items for this menu. For this purpose
                use the <see cref="T:Telerik.WebControls.GridMenuItemCollection"/> objet that this property returns.
            </remarks>
        </member>
        <member name="P:Telerik.WebControls.GridMenu.SelectedImageUrl">
            <summary>
            Gets or sets the URL to the image that will be displayed when an item in this
            menu is selected.
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridMenu.NotSelectedImageUrl">
            <summary>
            Gets or sets the URL to the image that will be displayed for all items in this
            menu that are not selected.
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridMenu.SelectColumnBackColor">
            <summary>
                Gets or sets the <see cref="T:System.Drawing.Color"/> of the stripe that appears on the left
                side of the menu and hold the selector image.
            </summary>
            <value>the <see cref="T:System.Drawing.Color"/> of the stripe that holds the selector image</value>
        </member>
        <member name="P:Telerik.WebControls.GridMenu.TextColumnBackColor">
            <summary>Gets or sets the <see cref="T:System.Drawing.Color"/> of the text in the menu.</summary>
            <value>the <see cref="T:System.Drawing.Color"/> of the text in the menu.</value>
        </member>
        <member name="P:Telerik.WebControls.GridMenu.HoverBackColor">
            <summary>
                Gets or sets the <see cref="T:System.Drawing.Color"/> that will be applied to the background
                when this item is hovered.
            </summary>
            <value>The color that is used for the item's background.</value>
        </member>
        <member name="P:Telerik.WebControls.GridMenu.HoverBorderColor">
            <summary>
                Gets or sets the <see cref="T:System.Drawing.Color"/> that will be applied to the border lines
                of the menu item.
            </summary>
            <value>The <see cref="T:System.Drawing.Color"/> that is used for the borders of the menu item.</value>
        </member>
        <member name="P:Telerik.WebControls.GridMenu.CssClass">
            <summary>
            Gets or sets the name of the CSS class that will be used for customizing the
            menu.
            </summary>
            <value>
                The name of the CSS class used for customizing the menu as
                <see cref="T:System.String"/>.
            </value>
        </member>
        <member name="P:Telerik.WebControls.GridMenu.Controls">
            <summary>
            	<para>Gets a ControlCollection object that represents the child <b>controls</b> for
                this menu in the UI hierarchy.</para>
            </summary>
            <value><see cref="T:System.Web.UI.ControlCollection"/> with the child controls for this menu.</value>
            <remarks>
            The <b>Controls</b> property allows you programmatic access to the instance of
            the <b>ControlCollection</b> class for any server control. You can add controls to the
            collection, remove controls from the collection, or iterate through the server controls
            in the collection.
            </remarks>
        </member>
        <member name="T:Telerik.WebControls.GridFilterMenu">
            <summary>Represents the filtering menu for Telerik RadGrid.</summary>
        </member>
        <member name="M:Telerik.WebControls.GridFilterMenu.#ctor(Telerik.WebControls.RadGrid)">
            <summary>Constructs a new GridFilterMenu object.</summary>
            <param name="ownerGrid">the RadGrid object that will hold this menu</param>
        </member>
        <member name="P:Telerik.WebControls.GridFilterMenu.Items">
            <commentsfrom cref="P:Telerik.WebControls.GridMenu.Items" filter=""/>
        </member>
        <member name="T:Telerik.WebControls.GridMenuItem">
            <summary>This class represents a single item in the menu.</summary>
        </member>
        <member name="P:Telerik.WebControls.GridMenuItem.OwnerMenu">
            <summary>Gets a reference to the <see cref="T:Telerik.WebControls.GridMenu"/> that holds this item.</summary>
        </member>
        <member name="E:Telerik.WebControls.GridMenuItem.OnClick">
            <summary>This event fires when an item in this menu is clicked.</summary>
            <example>
                The following example demonstrates how to handle the OnClick event and set custom
                filter function. First you set the <see cref="P:Telerik.WebControls.GridMenuItem.Text"/> and
                <see cref="P:Telerik.WebControls.GridMenuItem.Value"/> properties for this menu item, then in the event handler,
                you fire the "Filter" event and pass the menu item as an ergument in pair.
                <code lang="CS">
            override protected void OnInit(EventArgs e)
              {
              private void InitializeComponent()
              {
               this.Init += new EventHandler(WebForm1_Init);
               this.Load += new System.EventHandler(this.Page_Load);
               RadGrid1.NeedDataSource += new Telerik.WebControls.GridNeedDataSourceEventHandler(RadGrid1_NeedDataSource);
              }
             
             
              private void RadGrid1_NeedDataSource(object source, Telerik.WebControls.GridNeedDataSourceEventArgs e)
              {
               RadGrid1.DataSource = DataSourceHelperCS.GetDataTable("SELECT * FROM Customers");
              }
             
              private void WebForm1_Init(object sender, EventArgs e)
              {
               RadGrid1.FilterMenu.Items.Clear();
             
               GridMenuItem menuItem = new GridMenuItem();
               RadGrid1.FilterMenu.Items.Add(menuItem);
               menuItem.Text = "Custom-Text (Contains)";
               menuItem.Value = "Contains";
               menuItem.OnClick += new GridMenuItemClickEventHandler(menuItem_OnClick);
              }
             
              private void menuItem_OnClick(GridMenuItem sender, GridMenuItemClickEventArgs e)
              {
               GridFilteringItem filterItem = RadGrid1.MasterTableView.GetItems(GridItemType.FilteringItem)[0] as GridFilteringItem;
               GridMenuItem menuItem = sender as GridMenuItem;
               filterItem.FireCommandEvent( "Filter", new Pair(menuItem.Value, e.ColumnName));
             
              }
                </code>
            	<code lang="VB">
            Protected Overrides Sub OnInit(ByVal e As EventArgs)
             Dim InitializeComponent As System.Void
             AddHandler Init, AddressOf Me.WebForm1_Init
             AddHandler Load, AddressOf Me.Page_Load
             AddHandler RadGrid1.NeedDataSource, AddressOf Me.RadGrid1_NeedDataSource
            End Sub
             
            Private Sub RadGrid1_NeedDataSource(ByVal source As Object, ByVal e As Telerik.WebControls.GridNeedDataSourceEventArgs)
             RadGrid1.DataSource = DataSourceHelperCS.GetDataTable("SELECT * FROM Customers")
            End Sub
             
            Private Sub WebForm1_Init(ByVal sender As Object, ByVal e As EventArgs)
             RadGrid1.FilterMenu.Items.Clear
             Dim menuItem As GridMenuItem = New GridMenuItem
             RadGrid1.FilterMenu.Items.Add(menuItem)
             menuItem.Text = "Custom-Text (Contains)"
             menuItem.Value = "Contains"
             AddHandler menuItem.OnClick, AddressOf Me.menuItem_OnClick
            End Sub
             
            Private Sub menuItem_OnClick(ByVal sender As GridMenuItem, ByVal e As GridMenuItemClickEventArgs)
             Dim filterItem As GridFilteringItem = CType(RadGrid1.MasterTableView.GetItems(GridItemType.FilteringItem)(0),GridFilteringItem)
             Dim menuItem As GridMenuItem = CType(sender,GridMenuItem)
             filterItem.FireCommandEvent("Filter", New Pair(menuItem.Value, e.ColumnName))
            End Sub
                </code>
            </example>
        </member>
        <member name="P:Telerik.WebControls.GridMenuItem.Selected">
            <summary>Gets or sets a value indicating if this specific item is selected.</summary>
            <value>
            	<strong>true</strong>, if item is selected, otherwise
            <strong>false</strong>.
            </value>
            <remarks>
                You can customize the selected item, using the
                <see cref="P:Telerik.WebControls.GridMenu.SelectedImageUrl"/> property.
            </remarks>
        </member>
        <member name="P:Telerik.WebControls.GridMenuItem.Text">
            <summary>Gets or sets the Text for the specific item.</summary>
            <example>
                You can use this property in conjunction with the <see cref="P:Telerik.WebControls.GridMenuItem.Value"/> property
                to create you own custom menu Items. The following example demonstrates how to
                handle the OnClick event and set custom filter function. First you set the
                <see cref="P:Telerik.WebControls.GridMenuItem.Text"/> and <see cref="P:Telerik.WebControls.GridMenuItem.Value"/> properties for this menu item,
                then in the event handler, you fire the "Filter" event and pass the menu item as an
                ergument in pair. 
                <code lang="CS">
            override protected void OnInit(EventArgs e)
             {
             private void InitializeComponent()
             {
              this.Init += new EventHandler(WebForm1_Init);
              this.Load += new System.EventHandler(this.Page_Load);
              RadGrid1.NeedDataSource += new Telerik.WebControls.GridNeedDataSourceEventHandler(RadGrid1_NeedDataSource);
             }
             
             
             private void RadGrid1_NeedDataSource(object source, Telerik.WebControls.GridNeedDataSourceEventArgs e)
             {
              RadGrid1.DataSource = DataSourceHelperCS.GetDataTable("SELECT * FROM Customers");
             }
             
             private void WebForm1_Init(object sender, EventArgs e)
             {
              RadGrid1.FilterMenu.Items.Clear();
             
              GridMenuItem menuItem = new GridMenuItem();
              RadGrid1.FilterMenu.Items.Add(menuItem);
              menuItem.Text = "Custom-Text (Contains)";
              menuItem.Value = "Contains";
              menuItem.OnClick += new GridMenuItemClickEventHandler(menuItem_OnClick);
             }
             
             private void menuItem_OnClick(GridMenuItem sender, GridMenuItemClickEventArgs e)
             {
              GridFilteringItem filterItem = RadGrid1.MasterTableView.GetItems(GridItemType.FilteringItem)[0] as GridFilteringItem;
              GridMenuItem menuItem = sender as GridMenuItem;
              filterItem.FireCommandEvent( "Filter", new Pair(menuItem.Value, e.ColumnName));
             
             }
                </code>
            	<code lang="VB">
            Protected Overrides Sub OnInit(ByVal e As EventArgs)
             Dim InitializeComponent As System.Void
             AddHandler Init, AddressOf Me.WebForm1_Init
             AddHandler Load, AddressOf Me.Page_Load
             AddHandler RadGrid1.NeedDataSource, AddressOf Me.RadGrid1_NeedDataSource
            End Sub
             
            Private Sub RadGrid1_NeedDataSource(ByVal source As Object, ByVal e As Telerik.WebControls.GridNeedDataSourceEventArgs)
             RadGrid1.DataSource = DataSourceHelperCS.GetDataTable("SELECT * FROM Customers")
            End Sub
             
            Private Sub WebForm1_Init(ByVal sender As Object, ByVal e As EventArgs)
             RadGrid1.FilterMenu.Items.Clear
             Dim menuItem As GridMenuItem = New GridMenuItem
             RadGrid1.FilterMenu.Items.Add(menuItem)
             menuItem.Text = "Custom-Text (Contains)"
             menuItem.Value = "Contains"
             AddHandler menuItem.OnClick, AddressOf Me.menuItem_OnClick
            End Sub
             
            Private Sub menuItem_OnClick(ByVal sender As GridMenuItem, ByVal e As GridMenuItemClickEventArgs)
             Dim filterItem As GridFilteringItem = CType(RadGrid1.MasterTableView.GetItems(GridItemType.FilteringItem)(0),GridFilteringItem)
             Dim menuItem As GridMenuItem = CType(sender,GridMenuItem)
             filterItem.FireCommandEvent("Filter", New Pair(menuItem.Value, e.ColumnName))
            End Sub
                </code>
            </example>
        </member>
        <member name="P:Telerik.WebControls.GridMenuItem.Value">
            <summary>
                Gets or sets the value for this Item as one of the members of
                <see cref="T:Telerik.WebControls.GridKnownFunction"/> Enumeration.
            </summary>
            <example>
                You can use this property in conjunction with the <see cref="P:Telerik.WebControls.GridMenuItem.Text"/> property
                to create you own custom menu Items. The following example demonstrates how to
                handle the OnClick event and set custom filter function. First you set the
                <see cref="P:Telerik.WebControls.GridMenuItem.Text"/> and <see cref="P:Telerik.WebControls.GridMenuItem.Value"/> properties for this menu item,
                then in the event handler, you fire the "Filter" event and pass the menu item as an
                ergument in pair. 
                <code lang="VB">
            Protected Overrides Sub OnInit(ByVal e As EventArgs)
             Dim InitializeComponent As System.Void
             AddHandler Init, AddressOf Me.WebForm1_Init
             AddHandler Load, AddressOf Me.Page_Load
             AddHandler RadGrid1.NeedDataSource, AddressOf Me.RadGrid1_NeedDataSource
            End Sub
             
            Private Sub RadGrid1_NeedDataSource(ByVal source As Object, ByVal e As Telerik.WebControls.GridNeedDataSourceEventArgs)
             RadGrid1.DataSource = DataSourceHelperCS.GetDataTable("SELECT * FROM Customers")
            End Sub
             
            Private Sub WebForm1_Init(ByVal sender As Object, ByVal e As EventArgs)
             RadGrid1.FilterMenu.Items.Clear
             Dim menuItem As GridMenuItem = New GridMenuItem
             RadGrid1.FilterMenu.Items.Add(menuItem)
             menuItem.Text = "Custom-Text (Contains)"
             menuItem.Value = "Contains"
             AddHandler menuItem.OnClick, AddressOf Me.menuItem_OnClick
            End Sub
             
            Private Sub menuItem_OnClick(ByVal sender As GridMenuItem, ByVal e As GridMenuItemClickEventArgs)
             Dim filterItem As GridFilteringItem = CType(RadGrid1.MasterTableView.GetItems(GridItemType.FilteringItem)(0),GridFilteringItem)
             Dim menuItem As GridMenuItem = CType(sender,GridMenuItem)
             filterItem.FireCommandEvent("Filter", New Pair(menuItem.Value, e.ColumnName))
            End Sub
                </code>
            	<code lang="CS">
            override Protected void OnInit(EventArgs e)
            {
            Private void InitializeComponent()
            {
             this.Init += New EventHandler(WebForm1_Init);
             this.Load += New System.EventHandler(this.Page_Load);
             RadGrid1.NeedDataSource += New Telerik.WebControls.GridNeedDataSourceEventHandler(RadGrid1_NeedDataSource);
            }
             
             
            Private void RadGrid1_NeedDataSource(Object source, Telerik.WebControls.GridNeedDataSourceEventArgs e)
            {
             RadGrid1.DataSource = DataSourceHelperCS.GetDataTable("SELECT * FROM Customers");
            }
             
            Private void WebForm1_Init(Object sender, EventArgs e)
            {
             RadGrid1.FilterMenu.Items.Clear();
             
             GridMenuItem menuItem = New GridMenuItem();
             RadGrid1.FilterMenu.Items.Add(menuItem);
             menuItem.Text = "Custom-Text (Contains)";
             menuItem.Value = "Contains";
             menuItem.OnClick += New GridMenuItemClickEventHandler(menuItem_OnClick);
            }
             
            Private void menuItem_OnClick(GridMenuItem sender, GridMenuItemClickEventArgs e)
            {
             GridFilteringItem filterItem = RadGrid1.MasterTableView.GetItems(GridItemType.FilteringItem)[0] As GridFilteringItem;
             GridMenuItem menuItem = sender As GridMenuItem;
             filterItem.FireCommandEvent( "Filter", New Pair(menuItem.Value, e.ColumnName));
             
            }
                </code>
            </example>
        </member>
        <member name="P:Telerik.WebControls.GridMenuItem.UID">
            <excludetoc/>
            <exclude/>
            <summary>This property is for internal RadGrid usage.</summary>
        </member>
        <member name="P:Telerik.WebControls.GridMenuItem.ID">
            <summary>This property is for internal RadGrid usage.</summary>
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.WebControls.GridMenuItem.Visible">
            <summary>Gets or sets the visibility of an item.</summary>
            <value>
            	<strong>true</strong> if the item is visible, otherwise
            <strong>false</strong>.
            </value>
        </member>
        <member name="T:Telerik.WebControls.GridMenuItemClickEventArgs">
            <summary>For RadGrid internal usage.</summary>
        </member>
        <member name="M:Telerik.WebControls.GridMenuItemClickEventArgs.#ctor(System.String,System.String)">
            <summary>Contains data related to the <see cref="E:Telerik.WebControls.GridMenuItem.OnClick"/> event.</summary>
            <param name="tableID">
                The <see cref="!:GridTableView.UniqueID"/> of the <strong>GridTableView</strong>
                that will be filtered.
            </param>
            <param name="columnName">The <see cref="P:Telerik.WebControls.GridColumn.UniqueName"/> of the column that will be filtered.</param>
        </member>
        <member name="P:Telerik.WebControls.GridMenuItemClickEventArgs.TableID">
            <summary>
                The <see cref="!:GridTableView.UniqueID"/> of the GridTableView that will be
                filtered.
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridMenuItemClickEventArgs.ColumnName">
            <summary>The <see cref="P:Telerik.WebControls.GridColumn.UniqueName"/> of the column that will be filtered.</summary>
        </member>
        <member name="T:Telerik.WebControls.GridMenuItemCollection">
            <summary>
            	<para>
                    A collection that stores <see cref="T:Telerik.WebControls.GridMenuItem"/>
                    objects.
                </para>
            </summary>
            <seealso cref="T:Telerik.WebControls.GridMenuItemCollection"/>
            <remarks>
            You can access this collection through
            <a href="RadGridNet2~Telerik.WebControls.GridMenu~Items.html">Items Property</a> of
            <strong>GridMenu</strong>/<strong>GridFilterMenu</strong>.
            </remarks>
        </member>
        <member name="M:Telerik.WebControls.GridMenuItemCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            	<para>
                    Copies the current collection to a collection starting at the specified index
                    of the target collection (<paramref name="Array"></paramref>).
                </para>
            </summary>
            <param name="array">the target array where the current collection will be copied.</param>
            <param name="index">
            the starting index of the target array where the current collection will be
            copied to.
            </param>
        </member>
        <member name="M:Telerik.WebControls.GridMenuItemCollection.GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary>
            <returns>
                An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the
                collection.
            </returns>
        </member>
        <member name="M:Telerik.WebControls.GridMenuItemCollection.Add(System.Object)">
            <summary>Adds an object to the end of Items collection.</summary>
            <param name="value">
                The <see cref="T:Telerik.WebControls.GridMenuItem"/> that will be added to the end of the
                collection.
            </param>
        </member>
        <member name="M:Telerik.WebControls.GridMenuItemCollection.Contains(System.Object)">
            <summary>Determines if the Items collection contains the specified Item.</summary>
            <returns>
            	<strong>true</strong> if the item is present in this collection, otherwise
            <strong>false</strong>.
            </returns>
            <param name="value">The Item to locate in the collection.</param>
        </member>
        <member name="M:Telerik.WebControls.GridMenuItemCollection.Clear">
            <summary>Removes all items from the collection.</summary>
            <remarks>
            	<para>You can use the <b>Clear</b> method to remove the entire collection of item
                from a parent control.</para>
            	<para>
                    To remove an individual item from the collection, use the
                    <see cref="M:Telerik.WebControls.GridMenuItemCollection.Remove(System.Object)"/> or <see cref="M:Telerik.WebControls.GridMenuItemCollection.RemoveAt(System.Int32)"/> methods.
                </para>
            	<para>
                    To add new Item objects to the collection, use the <see cref="M:Telerik.WebControls.GridMenuItemCollection.Add(System.Object)"/>
                    method.
                </para>
            </remarks>
        </member>
        <member name="M:Telerik.WebControls.GridMenuItemCollection.IndexOf(System.Object)">
            <summary>Returns the index within the collection of the specified item.</summary>
            <returns>
            The zero-based index where the item is located within the collection; otherwise,
            negative one (-1).
            </returns>
            <param name="value">An object representing the item to locate in the collection.</param>
        </member>
        <member name="M:Telerik.WebControls.GridMenuItemCollection.Insert(System.Int32,System.Object)">
            <summary>Inserts an Item in the collection at the specified index.</summary>
            <param name="index">the zero-based index where the Item will be inserted.</param>
            <param name="value">the Item that will be inserted</param>
        </member>
        <member name="M:Telerik.WebControls.GridMenuItemCollection.Remove(System.Object)">
            <summary>Removes an Item from the collection</summary>
            <param name="value">the Item that will be removed.</param>
        </member>
        <member name="M:Telerik.WebControls.GridMenuItemCollection.RemoveAt(System.Int32)">
            <summary>Removes an Item at the specidied position from the collection.</summary>
            <param name="index">the position of the Item that will be removed.</param>
        </member>
        <member name="P:Telerik.WebControls.GridMenuItemCollection.Count">
            <summary>Gets the number of items in this collection.</summary>
            <value>the number of items in this collection as Integer.</value>
        </member>
        <member name="P:Telerik.WebControls.GridMenuItemCollection.SyncRoot">
            <summary>Gets an object that can be used to synchronize access to this collection.</summary>
        </member>
        <member name="P:Telerik.WebControls.GridMenuItemCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to this collection is synchronized (thread
            safe).
            </summary>
            <value>
            	<strong>true</strong> if the access to the collection is thread safe; otherwise
            <strong>false</strong>.
            </value>
        </member>
        <member name="P:Telerik.WebControls.GridMenuItemCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the collection is with restricted access
            (read-only).
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridMenuItemCollection.IsFixedSize">
            <summary>Gets a value indicating whether the collection has a fixed size.</summary>
            <value>
            	<strong>true</strong> if the collection has a fixed size; otherwise,
            <b>false</b>. The default is <b>false</b>.
            </value>
        </member>
        <member name="P:Telerik.WebControls.GridMenuItemCollection.Item(System.Int32)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="T:Telerik.RadGridUtils.RadAJAXControl">
            <summary>This control is intended for internal usage by other telerik controls.</summary>
        </member>
        <member name="P:Telerik.RadGridUtils.RadControl.Version">
            <summary>Gets the component's current version.</summary>
        </member>
        <member name="P:Telerik.RadGridUtils.RadControl.UseEmbeddedScripts">
            <summary>
            Gets or sets a value indicating whether to use the embedded JavaScript files or not.
            </summary>
            <value>
            	<strong>True</strong> if embedded JavaScript files are to be used; otherwise
            <strong>false</strong>. The default value is <strong>true</strong>.
            </value>
            <remarks>
            Use this property for debugging purposes or to apply any modifications to the
            JavaScript files.
            </remarks>
        </member>
        <member name="M:Telerik.RadGridUtils.RadAJAXControl.GetPageUrl">
            <exclude/>
            <excludetoc/>
            <summary>This method is intended only for internal usage.</summary>
        </member>
        <member name="P:Telerik.RadGridUtils.RadAJAXControl.ResponseScripts">
            <summary>
            Gets or sets a string collection of JavaScripts that will be executed on
            client-side when the response returns.
            </summary>
            <example>
            	<para>The following example demonstrates a sample usage of the
                <strong>ResponseScripts</strong> property:</para>
            	<pre>
            [C#]  
                </pre>
            	<pre>
            &lt;form id="Form1" method="post" runat="server"&gt;<br/>&lt;script language="C#" runat="server"&gt;<br/>private void Button1_Click(object sender, System.EventArgs e)<br/>{<br/>RadAjaxManager1.ResponseScripts.Add("alert('This can be any script!');");<br/>}<br/>&lt;/script&gt;<br/>&lt;rad:RadAjaxManager id="RadAjaxManager1" runat="server" &gt;<br/> &lt;AjaxSettings&gt;<br/>  &lt;rad:AjaxSetting AjaxControlID="Button1"&gt;<br/>  &lt;rad:AjaxSetting&gt;<br/> &lt;/AjaxSettings&gt;<br/>&lt;/rad:RadAjaxManager&gt;<br/>&lt;/form&gt;
            </pre>
            	<code lang="VB" title="VB">
            &lt;form id="Form1" method="post" runat="server"&gt;
            &lt;script language="VB" runat="server"&gt;
            Private Sub Button1_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles Button1.Click
             RadAjaxManager.ResponseScripts.Add("alert('This can be any script!');")
            End Sub 'RadAjaxManager1_AjaxRequest
            &lt;/script&gt;
            &lt;rad:RadAjaxManager id="RadAjaxManager1" runat="server" &gt;
             &lt;AjaxSettings&gt;
              &lt;rad:AjaxSetting AjaxControlID="Button1"&gt;
              &lt;rad:AjaxSetting&gt;
             &lt;/AjaxSettings&gt;
            &lt;/rad:RadAjaxManager&gt;
            &lt;/form&gt;
                </code>
            </example>
            <isnew>July 11, 2006</isnew>
        </member>
        <member name="P:Telerik.RadGridUtils.RadAJAXControl.EnableAJAX">
            <summary>
            Gets or sets a value indicating whether the control will work in AJAX or Postback
            mode.
            </summary>
            <remarks>
            Set to <strong>false</strong> to force using postbacks instead of AJAX
            requests.
            </remarks>
            <value>Returns <strong>true</strong> by default.</value>
        </member>
        <member name="P:Telerik.RadGridUtils.RadAJAXControl.EnableOutsideScripts">
            <summary>
            Gets or sets a value indicating if the outside scripts for the AJAX-enabled
            controls will be evaluated.
            </summary>
            <value>The default value is <strong>false</strong>.</value>
            <remarks>
            Outside scripts are scripts rendered from the code-behind and are usually not
            executed if they are rendered outside of the currently updated control(s).
            </remarks>
        </member>
        <member name="P:Telerik.RadGridUtils.RadAJAXControl.OnAjaxRequestError">
            <summary>
            Using this property you can provide your own error handler for AJAX requests in RadAjax, RadGrid, RadCalendar if you wish to block or handle those errors in a specific way.
            You can either supply the name of a javascript function or executable code like "alert(e.message)"
            The javascript handler function should have the following signature: AjaxRequestErrorHandler(e, clientID) {...} 
            It must also be defined ABOVE the code clock which contains your AJAX enabled control.
            </summary>
        </member>
        <member name="P:Telerik.RadGridUtils.RadAJAXControl.IsAsyncRequest">
            <summary>
            Gets a value indicating whether the current request is an AJAX request initiated
            by the current control.
            </summary>
        </member>
        <member name="P:Telerik.RadGridUtils.RadAJAXControl.IsAjaxRequest">
            <summary>
            Gets a value indicating whether the current request is an AJAX request initiated
            by the current control.
            </summary>
        </member>
        <member name="P:Telerik.RadGridUtils.RadAJAXControl.AjaxUrl">
            <summary>
            Gets or sets a value containing the URL that will be used for AJAX
            request.
            </summary>
            <value>
            Returns a String containing the URL that will be used for AJAX request. The
            default value is the URL of the current page.
            </value>
            <remarks>
            	<strong>AJAX Panel</strong> and <strong>AJAX Manager</strong> automatically
            resolve the current page URL when forming the request. However if you want to achieve
            different scenario such as AJAX requests between two pages you can set the desired URL
            for the request using this property.
            </remarks>
            <summary>Gets or sets a value the URL that the control will use for AJAX requests.</summary>
        </member>
        <member name="T:Telerik.WebControls.Ide.Common.RadGrid.ProjectManagement">
            <summary>
            Utility class for Design - Time VisualStudio.NET project management.
            </summary>
        </member>
        <member name="T:Telerik.RadGridUtils.PropertyCategory">
            <summary>
            Defines the common property categories' names
            </summary>
        </member>
        <member name="T:Telerik.WebControls.GridClientObjectBuilder">
            <summary>
            Summary description for ClientObjectBuilder.
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridSplitGroup.GroupItemsCount">
            <summary>
            Number of items in the group
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridSplitGroup.ActualItemCount">
            <summary>
            Number of items displayed on the page
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridSplitGroup.Mode">
            <summary>
            if true Group is countinued from the previous page or it continues
            on the next page if value of false
            </summary>
        </member>
        <member name="T:Telerik.WebControls.GridDataSetHelper">
            <summary>
            Summary description for DataSetHelper.
            </summary>
        </member>
        <member name="T:Telerik.WebControls.GridDefaultValueChecker">
            <summary>
            Summary description for DefaultValueChecker.
            </summary>
        </member>
        <member name="T:Telerik.WebControls.GridBaseDataList">
            <summary>
            	<para>Serves as the abstract base class for data tables. This class provides the
            methods and properties common to all tables in
            Telerik RadGrid.</para>
            </summary>
        </member>
        <member name="E:Telerik.WebControls.GridBaseDataList.SelectedIndexChanged">
            <summary>
            Occurs when a different item is selected in a table between posts to the
            server.
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridBaseDataList.TabIndex">
            <summary>Gets or sets the tab index of the Web server control.</summary>
        </member>
        <member name="P:Telerik.WebControls.GridBaseDataList.CellPadding">
            <summary>
            Gets or sets the amount of space between the contents of a cell and the cell's
            border.
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridBaseDataList.CellSpacing">
            <summary>Gets or sets the amount of space between cells.</summary>
        </member>
        <member name="P:Telerik.WebControls.GridBaseDataList.Controls">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.WebControls.GridBaseDataList.GridLines">
            <summary>
            Gets or sets a value that specifies whether the border between the cells of a
            data table is displayed.
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridBaseDataList.HorizontalAlign">
            <summary>
            Gets or sets the horizontal alignment of a data table within its
            container.
            </summary>
        </member>
        <member name="T:Telerik.WebControls.GridObjectWithState">
            <summary>
            ObjectWithState
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridClientEvents.OnRequestStart">
            <remarks>
            	<para>This event is fired when asynchronous request is started. Handle
            RadGrid.OnRequestStart to execute code that should perform any operations before the
            AJAX request has started. Those can be - cleanup operations, check if the request can
            be performed at this moment to prevent any loss of user data, etc.</para>
            	<list type="table">
            		<item>
            			<term>
            				<para align="left"><strong>Fired by</strong></para></term>
            			<description>RadGrid</description></item>
            		<item>
            			<term>
            				<para align="left"><strong>Arguments</strong></para></term>
            			<description>N/A</description></item>
            		<item>
            			<term>
            				<para align="left"><strong>Can be canceled</strong></para></term>
            			<description>No</description></item>
            		<item>
            			<term>
            				<para><strong>Examples</strong></para></term>
            			<description>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">
            					<strong>ascx/aspx</strong></para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">&lt;ClientEvents
            OnRequestStart="RequestStart" ...</para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">
            					<strong>JavaScript</strong></para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">&lt;script&gt;</para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">function
            RequestStart()</para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">{</para>
            				<para>return confirm("Request started!");</para>
            				<para>}</para>
            				<para>&lt;/script&gt;</para></description></item></list>
            </remarks>
            <summary>This client-side event is fired when asynchronous request is started.</summary>
        </member>
        <member name="P:Telerik.WebControls.GridClientEvents.OnRequestEnd">
            <remarks>
            	<para>This client-side event is fired when asynchronous request is finished.
            <strong>RadGrid.OnRequestEnd</strong> can be used to recreate any javascript objects
            related to RadGrid, execute scripts related to the initial load state of the
            control.</para>
            	<list type="table">
            		<item>
            			<term>
            				<para align="left"><strong>Fired by</strong></para></term>
            			<description>RadGrid</description></item>
            		<item>
            			<term>
            				<para align="left"><strong>Arguments</strong></para></term>
            			<description>N/A</description></item>
            		<item>
            			<term>
            				<para align="left"><strong>Can be canceled</strong></para></term>
            			<description>No</description></item>
            		<item>
            			<term>
            				<para><strong>Examples</strong></para></term>
            			<description>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">
            					<strong>ascx/aspx</strong></para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">&lt;ClientEvents
            OnRequestEnd="RequestEnd" ...</para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">
            					<strong>JavaScript</strong></para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">&lt;script&gt;</para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">function RequestEnd()</para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">{</para>
            				<para>alert("Request end!");</para>
            				<para>}</para>
            				<para>&lt;/script&gt;</para></description></item></list>
            </remarks>
            <summary>This client-side event is fired when asynchronous request is finished.</summary>
        </member>
        <member name="P:Telerik.WebControls.GridClientEvents.OnRequestError">
            <remarks>
            	<para>This client-side event is fired when the server returns status different from '200 OK'.
            <strong>RadGrid.OnRequestError</strong> can be used for various purposes such redirects, permissions checks, etc.
                </para>
            	<list type="table">
            		<item>
            			<term>
            				<para align="left"><strong>Fired by</strong></para></term>
            			<description>RadGrid</description></item>
            		<item>
            			<term>
            				<para align="left"><strong>Arguments</strong></para></term>
            			<description>Error object</description></item>
            		<item>
            			<term>
            				<para align="left"><strong>Can be canceled</strong></para></term>
            			<description>Yes, return <em>false</em> to cancel</description></item>
            		<item>
            			<term>
            				<para><strong>Examples</strong></para></term>
            			<description>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">
            					<strong>ascx/aspx</strong></para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">&lt;ClientEvents
            OnRequestError="RequestError" ...</para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">
            					<strong>JavaScript</strong></para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">&lt;script&gt;</para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">function RequestError(sender, e)</para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">{</para>
            				<para>alert("Status code: " + e.Status);</para>
            				<para>alert("ResponseText: " + e.ResponseText);</para>
            				<para>alert("ResponseHeaders: " + e.ResponseHeaders);</para>
            				<para>}</para>
            				<para>&lt;/script&gt;</para></description></item></list>
            </remarks>
            <summary>This client-side event is fired when asynchronous request is finished.</summary>
        </member>
        <member name="P:Telerik.WebControls.GridClientEvents.OnGridCreating">
            <remarks>
            	<para>This event is fired before grid creation.</para>
            	<list type="table">
            		<item>
            			<term>
            				<para align="left"><strong>Fired by</strong></para></term>
            			<description>RadGrid</description></item>
            		<item>
            			<term>
            				<para align="left"><strong>Arguments</strong></para></term>
            			<description>N/A</description></item>
            		<item>
            			<term>
            				<para align="left"><strong>Can be canceled</strong></para></term>
            			<description>No</description></item>
            		<item>
            			<term><strong>Examples</strong></term>
            			<description>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">
            					<strong>ascx/aspx</strong></para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">&lt;ClientEvents
            OnGridCreating="GridCreating" ...</para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">
            					<strong>JavaScript</strong></para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">&lt;script&gt;</para>
            				<blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
            					<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">function
            GridCreating()</para>
            					<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">{</para>
            					<para>alert("Creting grid with ClientID: " + this.ClientID);</para>
            					<para>}</para></blockquote>
            				<para dir="ltr">&lt;/script&gt;</para></description></item></list>
            </remarks>
            <summary>This client-side event is fired before grid creation.</summary>
        </member>
        <member name="P:Telerik.WebControls.GridClientEvents.OnGridCreated">
            <remarks>
            	<para>This event is fired after the grid is created.</para>
            	<list type="table">
            		<item>
            			<term>
            				<para align="left"><strong>Fired by</strong></para></term>
            			<description>RadGrid</description></item>
            		<item>
            			<term>
            				<para align="left"><strong>Arguments</strong></para></term>
            			<description>N/A</description></item>
            		<item>
            			<term>
            				<para align="left"><strong>Can be canceled</strong></para></term>
            			<description>No</description></item>
            		<item>
            			<term>
            				<para align="left"><strong>Examples</strong></para></term>
            			<description>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">
            					<strong>ascx/aspx</strong></para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">&lt;ClientEvents
            OnGridCreated="GridCreated" ...</para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">
            					<strong>JavaScript</strong></para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">&lt;script&gt;</para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">function GridCreated()</para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">{</para>
            				<para>alert("Grid with ClientID: " + this.ClientID + " was created");</para>
            				<para>}</para>
            				<para>&lt;/script&gt;</para></description></item></list>
            </remarks>
            <summary>This client-side event is fired after the grid is created.</summary>
        </member>
        <member name="P:Telerik.WebControls.GridClientEvents.OnGridDestroying">
            <remarks>
            	<para>This event is fired when RadGrid object is destroyed, i.e. on each
            <em>window.onunload</em></para>
            	<list type="table">
            		<item>
            			<term>
            				<para align="left"><strong>Fired by</strong></para></term>
            			<description>RadGrid</description></item>
            		<item>
            			<term>
            				<para align="left"><strong>Arguments</strong></para></term>
            			<description>N/A</description></item>
            		<item>
            			<term>
            				<para align="left"><strong>Can be canceled</strong></para></term>
            			<description>No</description></item>
            		<item>
            			<term><strong>Examples</strong></term>
            			<description>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">
            					<strong>ascx/aspx</strong></para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">&lt;ClientEvents
            OnGridCreating="GridDestroying" ...</para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">
            					<strong>JavaScript</strong></para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">&lt;script&gt;</para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">function
            GridDestroying()</para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">{</para>
            				<para>alert("Destroying grid with ClientID: " + this.ClientID);</para>
            				<para>}</para>
            				<para>&lt;/script&gt;</para></description></item></list>
            </remarks>
            <summary>
            This client-side event is fired when <strong>RadGrid</strong> object is
            destroyed, i.e. on each <em>window.onunload</em>
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridClientEvents.OnMasterTableViewCreating">
            <remarks>
            	<para>This event is fired before the MasterTableView is created.</para>
            	<list type="table">
            		<item>
            			<term>
            				<para align="left"><strong>Fired by</strong></para></term>
            			<description>RadGrid</description></item>
            		<item>
            			<term>
            				<para align="left"><strong>Arguments</strong></para></term>
            			<description>N/A</description></item>
            		<item>
            			<term>
            				<para align="left"><strong>Can be canceled</strong></para></term>
            			<description>No</description></item>
            		<item>
            			<term><strong>Examples</strong></term>
            			<description>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">
            					<strong>ascx/aspx</strong></para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">&lt;ClientEvents
            OnMasterTableViewCreating="MasterTableViewCreating" ...</para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">
            					<strong>JavaScript</strong></para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">&lt;script&gt;</para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">function
            MasterTableViewCreating()</para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">{</para>
            				<para>alert("Creating MasterTableView");</para>
            				<para>}</para>
            				<para>&lt;/script&gt;</para></description></item></list>
            </remarks>
            <summary>This client-side event is fired before the MasterTableView is created.</summary>
        </member>
        <member name="P:Telerik.WebControls.GridClientEvents.OnMasterTableViewCreated">
            <remarks>
            	<para align="left">This event is fired after the MasterTableView is created.</para>
            	<list type="table">
            		<item>
            			<term>
            				<para align="left"><strong>Fired by</strong></para></term>
            			<description>RadGrid</description></item>
            		<item>
            			<term>
            				<para align="left"><strong>Arguments</strong></para></term>
            			<description>N/A</description></item>
            		<item>
            			<term>
            				<para align="left"><strong>Can be canceled</strong></para></term>
            			<description>No</description></item>
            		<item>
            			<term>
            				<para align="left"><strong>Examples</strong></para></term>
            			<description>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">
            					<strong>ascx/aspx</strong></para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">&lt;ClientEvents
            OnMasterTableViewCreated="MasterTableViewCreated" ...</para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">
            					<strong>JavaScript</strong></para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">&lt;script&gt;</para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">function
            MasterTableViewCreated()</para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">{</para>
            				<para>alert("MasterTableView was created");</para>
            				<para>}</para>
            				<para>&lt;/script&gt;</para></description></item></list>
            </remarks>
            <summary>This client-side event is fired after the MasterTableView is created.</summary>
        </member>
        <member name="P:Telerik.WebControls.GridClientEvents.OnError">
            <remarks>
            	<para>You can hook this event to have your code executed when an error occurs in
            RadGrid.</para>
            	<list type="table">
            		<item>
            			<term>
            				<para align="left"><strong>Fired by</strong></para></term>
            			<description>RadGrid</description></item>
            		<item>
            			<term>
            				<para align="left"><strong>Arguments</strong></para></term>
            			<description>Error object</description></item>
            		<item>
            			<term>
            				<para align="left"><strong>Can be canceled</strong></para></term>
            			<description>Yes, return <em>false</em> to cancel</description></item>
            		<item>
            			<term>
            				<para align="left"><strong>Examples</strong></para></term>
            			<description>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">
            					<strong>ascx/aspx</strong></para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">&lt;ClientEvents
            OnError="Error" ...</para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">
            					<strong>JavaScript</strong></para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">&lt;script&gt;</para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">function Error()</para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">{</para>
            				<para>return false; // cancel error event</para>
            				<para>}</para>
            				<para>&lt;/script&gt;</para></description></item></list>
            </remarks>
            <summary>
            You can hook this client-side event to have your code executed when an error
            occurs in RadGrid.
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridClientEvents.OnTableCreating">
            <remarks>
            	<para>This event is fired before table creation.</para>
            	<list type="table">
            		<item>
            			<term>
            				<para align="left"><strong>Fired by</strong></para></term>
            			<description>RadGrid</description></item>
            		<item>
            			<term>
            				<para align="left"><strong>Arguments</strong></para></term>
            			<description>N/A</description></item>
            		<item>
            			<term>
            				<para align="left"><strong>Can be canceled</strong></para></term>
            			<description>No</description></item>
            		<item>
            			<term>
            				<para align="left"><strong>Examples</strong></para></term>
            			<description>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">
            					<strong>ascx/aspx</strong></para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">&lt;ClientEvents
            OnTableCreating="TableCreating" ...</para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">
            					<strong>JavaScript</strong></para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">&lt;script&gt;</para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">function
            TableCreating()</para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">{</para>
            				<para>alert("Creating DetailTable");</para>
            				<para>}</para>
            				<para>&lt;/script&gt;</para></description></item></list>
            </remarks>
            <summary>This client-side event is fired before table creation.</summary>
        </member>
        <member name="P:Telerik.WebControls.GridClientEvents.OnTableCreated">
            <remarks>
            	<para>This event is fired after the table is created.</para>
            	<list type="table">
            		<item>
            			<term>
            				<para align="left"><strong>Fired by</strong></para></term>
            			<description>RadGrid</description></item>
            		<item>
            			<term>
            				<para align="left"><strong>Arguments</strong></para></term>
            			<description>RadGridTable Object</description></item>
            		<item>
            			<term>
            				<para align="left"><strong>Can be canceled</strong></para></term>
            			<description>No</description></item>
            		<item>
            			<term><strong>Examples</strong></term>
            			<description>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">
            					<strong>ascx/aspx</strong></para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">&lt;ClientEvents
            OnTableCreated="TableCreated" ...</para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">
            					<strong>JavaScript</strong></para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">&lt;script&gt;</para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">function
            TableCreated(tableObject)</para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">{</para>
            				<para>alert("DetailTable with ClientID: " + tableObject.ClientID + " was
            created");</para>
            				<para>}</para>
            				<para>&lt;/script&gt;</para></description></item></list>
            </remarks>
            <summary>This client-side event is fired after the table is created.</summary>
        </member>
        <member name="P:Telerik.WebControls.GridClientEvents.OnTableDestroying">
            <remarks>
            	<para>This event is fired when table object is destroyed.</para>
            	<list type="table">
            		<item>
            			<term>
            				<para align="left"><strong>Fired by</strong></para></term>
            			<description>RadGrid</description></item>
            		<item>
            			<term>
            				<para align="left"><strong>Arguments</strong></para></term>
            			<description>N/A</description></item>
            		<item>
            			<term>
            				<para align="left"><strong>Can be canceled</strong></para></term>
            			<description>No</description></item>
            		<item>
            			<term>
            				<para><strong>Examples</strong></para></term>
            			<description>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">
            					<strong>ascx/aspx</strong></para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">&lt;ClientEvents
            OnTableDestroying="TableDestroying" ...</para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">
            					<strong>JavaScript</strong></para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">&lt;script&gt;</para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">function
            TableDestroying()</para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">{</para>
            				<para>alert("Destroing DetailTable with ClientID: " + this.ClientID);</para>
            				<para>}</para>
            				<para>&lt;/script&gt;</para></description></item></list>
            </remarks>
            <summary>This client-side event is fired when table object is destroyed.</summary>
        </member>
        <member name="P:Telerik.WebControls.GridClientEvents.OnColumnCreating">
            <remarks>
            	<para>This event is fired before column available at client-side creation.</para>
            	<list type="table">
            		<item>
            			<term>
            				<para align="left"><strong>Fired by</strong></para></term>
            			<description>RadGridTable</description></item>
            		<item>
            			<term>
            				<para align="left"><strong>Arguments</strong></para></term>
            			<description>N/A</description></item>
            		<item>
            			<term>
            				<para align="left"><strong>Can be canceled</strong></para></term>
            			<description>No</description></item>
            		<item>
            			<term>
            				<para align="left"><strong>Examples</strong></para></term>
            			<description>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">
            					<strong>ascx/aspx</strong></para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">&lt;ClientEvents
            OnColumnCreating="ColumnCreating" ...</para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">
            					<strong>JavaScript</strong></para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">&lt;script&gt;</para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">function
            ColumnCreating()</para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">{</para>
            				<para>alert("Creating column);</para>
            				<para>}</para>
            				<para>&lt;/script&gt;</para></description></item></list>
            </remarks>
            <summary>
            This client-side event is fired before column available at client-side
            creation.
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridClientEvents.OnColumnCreated">
            <remarks>
            	<para>This event is fired after a column available at client-side is created.</para>
            	<list type="table">
            		<item>
            			<term>
            				<para align="left"><strong>Fired by</strong></para></term>
            			<description>RadGridTable</description></item>
            		<item>
            			<term>
            				<para align="left"><strong>Arguments</strong></para></term>
            			<description>RadGridTableColumn object</description></item>
            		<item>
            			<term>
            				<para align="left"><strong>Can be canceled</strong></para></term>
            			<description>No</description></item>
            		<item>
            			<term><strong>Examples</strong></term>
            			<description>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">
            					<strong>ascx/aspx</strong></para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">&lt;ClientEvents
            OnColumnCreated="ColumnCreated" ...</para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">
            					<strong>JavaScript</strong></para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">&lt;script&gt;</para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">function
            ColumnCreated(columnObject)</para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">{</para>
            				<para>alert("Column with Index: " + columnObject.Index + " was created");</para>
            				<para>}</para>
            				<para>&lt;/script&gt;</para></description></item></list>
            </remarks>
            <summary>
            This client-side event is fired after a column available at client-side is
            created.
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridClientEvents.OnColumnDestroying">
            <remarks>
            	<para>This event is fired when a column object is destroyed.</para>
            	<list type="table">
            		<item>
            			<term>
            				<para align="left"><strong>Fired by</strong></para></term>
            			<description>RadGridTable</description></item>
            		<item>
            			<term>
            				<para align="left"><strong>Arguments</strong></para></term>
            			<description>N/A</description></item>
            		<item>
            			<term>
            				<para align="left"><strong>Can be canceled</strong></para></term>
            			<description>No</description></item>
            		<item>
            			<term>
            				<para align="left"><strong>Examples</strong></para></term>
            			<description>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">
            					<strong>ascx/aspx</strong></para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">&lt;ClientEvents
            OnColumnDestroying="ColumnDestroying" ...</para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">
            					<strong>JavaScript</strong></para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">&lt;script&gt;</para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">function
            ColumnDestroying()</para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">{</para>
            				<para>alert("Destroing column with Index: " + this.Index);</para>
            				<para>}</para>
            				<para>&lt;/script&gt;</para></description></item></list>
            </remarks>
            <summary>This client-side event is fired when a column object is destroyed.</summary>
        </member>
        <member name="P:Telerik.WebControls.GridClientEvents.OnColumnResizing">
            <remarks>
            	<para>This event is fired before a column is resized.</para>
            	<list type="table">
            		<item>
            			<term>
            				<para align="left"><strong>Fired by</strong></para></term>
            			<description>RadGridTable</description></item>
            		<item>
            			<term>
            				<para align="left"><strong>Arguments</strong></para></term>
            			<description>columnIndex, columnWidth</description></item>
            		<item>
            			<term>
            				<para align="left"><strong>Can be canceled</strong></para></term>
            			<description>Yes, return <em>false</em> to cancel</description></item>
            		<item>
            			<term>
            				<para align="left"><strong>Examples</strong></para></term>
            			<description>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">
            					<strong>ascx/aspx</strong></para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">&lt;ClientEvents
            OnColumnResizing="ColumnResizing" ...</para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">
            					<strong>JavaScript</strong></para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">&lt;script&gt;</para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">function
            ColumnResizing(columnIndex, columnWidth)</para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">{</para>
            				<para>alert("Resizng column with Index: " + columnIndex + ", width: " +
            columnWidth);</para>
            				<para>}</para>
            				<para>OR</para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">function
            ColumnResizing(columnIndex, columnWidth)</para>
            				<para style="LINE-HEIGHT: normal; LETTER-SPACING: normal">{</para>
            				<para>return false; //cancel ColumnResizing event</para>
            				<para>}</para>
            				<para>&lt;/script&gt;</para></description></item></list>
            </remarks>
            <summary>This client-side event is fired before a column is resized.</summary>
        </member>
        <member name="P:Telerik.WebControls.GridClientEvents.OnRowClick">
            FOR FUTURE VERSIONS
        </member>
        <member name="P:Telerik.WebControls.GridClientEvents.OnRowContextMenu">
            <remarks>
            	<para><span id="ctl01_repeaterMessages_ctl01_lblMessageText">The client-side script
                for RadGrid.ClientSettings.ClientEvents.OnRowContextMenu kills any exceptions that
                occur in the event handler. This can make bugs hard to track down because it
                appears that nothing happens when actually the exception was killed before it
                becomes visible.</span></para>
            	<para><span>You can avoid this problem by putting a try/catch block around the
                event handler that sends an alert if an exception was thrown:</span></para>
            	<pre>
            RadGrid1.ClientSettings.ClientEvents.OnRowContextMenu = " try { ... my event handling code ... } catch (exp) { alert(exp.message); }";
                </pre>
            </remarks>
        </member>
        <member name="T:Telerik.WebControls.GridClientMessages">
            <summary>
            Contains properties related to messages appearing as tooltips for various grid
            actions. You can use this class for localizing the grid messages.
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridClientMessages.DropHereToReorder">
            <summary>
            Gets or sets a string that will be displayed as a tooltip when you start dragging
            a column header trying to reorder columns.
            </summary>
            <value>
            	<strong>string</strong>, the tooltip that will be displayed when you try to
            reorder columns. By default it states "<strong>Drop here to reorder</strong>".
            </value>
        </member>
        <member name="P:Telerik.WebControls.GridClientMessages.DragToGroupOrReorder">
            <summary>
            Gets or sets a string that will be displayed as a tooltip when you hover a column
            that can be dragged.
            </summary>
            <value>
            	<strong>string</strong>, the tooltip that will be displayed hover a draggable
            column. By default it states "<strong>Drag to group or reorder</strong>".
            </value>
        </member>
        <member name="P:Telerik.WebControls.GridClientMessages.DragToResize">
            <value>
            	<strong>string</strong>, the tooltip that will be displayed when you hover the
            resizing handle of a column. By default it states "<strong>Drag to
            resize</strong>".
            </value>
            <summary>
            Gets or sets a string that will be displayed as a tooltip when you hover the
            resizing handle of a column.
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridClientMessages.PagerTooltipFormatString">
            <summary>
            The format string used for the tooltip when using Ajax scroll paging or the Slider pager
            </summary>
        </member>
        <member name="M:Telerik.WebControls.GridClientSettings.IsSet">
            <remarks>This method is for Telerik RadGrid internal usage.</remarks>
            <summary>
            Checks if a client settings property value was changed and differs from its
            default.
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridClientSettings.Selecting">
            <summary>
                Gets a reference to <see cref="T:Telerik.WebControls.GridSelecting"/> class providing properties
                related to client-side selection features.
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridClientSettings.ClientEvents">
            <summary>Gets a reference to <see cref="T:Telerik.WebControls.GridClientEvents"/> class.</summary>
        </member>
        <member name="P:Telerik.WebControls.GridClientSettings.ClientMessages">
            <summary>
                Gets a reference to <see cref="T:Telerik.WebControls.GridClientMessages"/> class, holding properties
                that can be used for localizing Telerik RadGrid.
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridClientSettings.Scrolling">
            <summary>
                Gets a reference to <see cref="T:Telerik.WebControls.GridScrolling"/>, which holds various
                properties for setting the Telerik RadGrid scrolling features.
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridClientSettings.Resizing">
            <summary>
                Gets a reference to <see cref="T:Telerik.WebControls.GridResizing"/>, which holds properties related
                to Telerik RadGrid resizing features.
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridClientSettings.AllowKeyboardNavigation">
            <summary>
            Gets or sets a value indicating whether the keyboard navigation will be enabled
            in Telerik RadGrid.
            </summary>
            <value>
            true, if keyboard navigation is enabled, otherwise false (the default
            value).
            </value>
            <remarks>
            	<ul class="noindent">
            		<li><strong>Arrowkey Navigation</strong> - allows end-users to navigate around
                    the menu structure using the arrow keys.</li>
            		<li>select grid items pressing the [SPACE] key</li>
            		<li>edit rows hitting the [ENTER] key</li>
            	</ul>
            </remarks>
        </member>
        <member name="P:Telerik.WebControls.GridClientSettings.ApplyStylesOnClient">
            <summary>
            Gets or sets a value indicating whether the CSS styles will be set when the
            control is rendered on the server or when the control is rendered on the client (using
            JavaScript).
            </summary>
            <remarks>
            Applying the styles on the client will reduce the output sent from the server to
            the client. It will also share the grid rendering load between the server and the
            client, thus reducing the server CPU load.
            </remarks>
            <value>
            	<strong>true</strong>, if the styles will be applied client-side, otherwise
            <strong>false</strong> (the default value).
            </value>
        </member>
        <member name="P:Telerik.WebControls.GridClientSettings.AllowDragToGroup">
            <summary>
                Gets or sets a value indicating whether you will be able to drag column headers to
                <see cref="T:Telerik.WebControls.GridGroupPanel"/> and let the grid automatically form
                <see cref="!:GroupByExpression"/> and group its data.
            </summary>
            <value>
            	<strong>true</strong>, if you are able to drag group header to the group panel,
            otherwise <strong>false</strong> (the default value)
            </value>
        </member>
        <member name="P:Telerik.WebControls.GridClientSettings.AllowColumnsReorder">
            <summary>
            Gets or sets a value indicating whether you will be able to reorder columns by
            using drag&amp;drop. By default it is false.
            </summary>
            <seealso cref="P:Telerik.WebControls.GridClientSettings.ReorderColumnsOnClient">ReorderColumnsOnClient Property</seealso>
            <value>
            	<strong>true</strong> if reorder via drag&amp;drop is enabled, otherwise
            <strong>false</strong> (the default value).
            </value>
        </member>
        <member name="P:Telerik.WebControls.GridClientSettings.ReorderColumnsOnClient">
            <summary>
                Gets or sets a value indicating whether columns will be reordered on the client.
                This property is meaningful when used in conjunction with
                <see cref="P:Telerik.WebControls.GridClientSettings.AllowColumnsReorder"/> set to <strong>true</strong>.
            </summary>
            <remarks>
            	<para>False by default, which means that each time you try to reorder columns a
                postback will be performed.</para>
            	<para>Note that in case this property is true the order changes will be persisted
                on the server only after postback.</para>
            </remarks>
            <value>
            	<strong>true</strong> if columns are reordered on the client, otherwise
            <strong>false</strong> (the default value.
            </value>
        </member>
        <member name="P:Telerik.WebControls.GridClientSettings.AllowExpandCollapse">
            <summary>
            Gets or sets a value indicating whether the expand/collapse functionality for
            hierarchical structures in grid will be enabled.
            </summary>
            <remarks>
            This property should be set to <strong>true</strong>, when working in
            <strong>HierarchyLoadMode.Client</strong>.
            </remarks>
            <value>
            	<strong>true</strong> if expand/collapse is enabled, otherwise
            <strong>false</strong> (the default value).
            </value>
        </member>
        <member name="P:Telerik.WebControls.GridClientSettings.AllowGroupExpandCollapse">
            <summary>
            Gets or sets a value indicating whether the expand/collapse functionality for
            grouped data in grid will be enabled.
            </summary>
            <value>
            	<strong>true</strong>, if expand/collapse is enabled, otherwise
            <strong>false</strong> (the default value).
            </value>
        </member>
        <member name="P:Telerik.WebControls.GridClientSettings.EnableClientKeyValues">
            <summary>
            Gets or sets a value indicating whether you will be able to retrieve the field
            values client-side through the <strong>KeyValues</strong> array.
            </summary>
        </member>
        <member name="T:Telerik.WebControls.IGridCommandEvent">
            <summary>
            Interface that provides the basic functionality needed for a class to be used to
            send information to Command event handler.
            </summary>
        </member>
        <member name="M:Telerik.WebControls.IGridCommandEvent.ExecuteCommand(System.Object)">
            <summary>Override to fire the corresponding command.</summary>
        </member>
        <member name="P:Telerik.WebControls.IGridCommandEvent.Canceled">
            <summary>Gets or sets a value, defining whether the command should be canceled.</summary>
        </member>
        <member name="T:Telerik.WebControls.GridCommandEventArgsFactory">
            <summary>For internal usage only.</summary>
            <exclude/>
        </member>
        <member name="M:Telerik.WebControls.GridCommandEventArgsFactory.CreateGridCommandEventArgs(Telerik.WebControls.GridItem,System.Object,System.Web.UI.WebControls.CommandEventArgs)">
            <summary>For internal usage only.</summary>
        </member>
        <member name="T:Telerik.WebControls.GridCommandEventHandler">
            <summary>
            Represents the method that will handle grid's Command events including
            CancelCommand, DeleteCommand, EditCommand, InsertCommand, ItemCommand, SortCommand and
            UpdateCommand.
            </summary>
            <param name="source">The source of the event.</param>
            <param name="e">A <see cref="T:System.Web.UI.WebControls.CommandEventArgs"/> object that contains the event data.</param>
        </member>
        <member name="T:Telerik.WebControls.GridCommandEventArgs">
            <summary>
            Provides data for Command events including CancelCommand, DeleteCommand,
            EditCommand, InsertCommand, ItemCommand, SortCommand and UpdateCommand.
            </summary>
        </member>
        <member name="M:Telerik.WebControls.GridCommandEventArgs.ExecuteCommand(System.Object)">
            <summary>
                Fires the command stored in <see cref="!:GridCommandEventArgs.CommandName"/>
                property
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridCommandEventArgs.CommandSource">
            <summary>Gets the source of the command</summary>
            <example>
            	<code lang="CS">
            // Get a reference to the control that triggered expand/collapse command 
            protected void RadGrid1_ItemCommand(object source, GridCommandEventArgs e)
            {
                if (e.CommandName == RadGrid.ExpandCollapseCommandName)
                {
                    Control c = e.CommandSource as Control;
                }
            }
                </code>
            	<code lang="VB">
            ' Get a reference to the control that triggered expand/collapse command 
            Protected Sub RadGrid1_ItemCommand([source] As Object, e As GridCommandEventArgs)
                If e.CommandName = RadGrid.ExpandCollapseCommandName Then
                    Dim c As Control = e.CommandSource 
                End If
            End Sub 'RadGrid1_ItemCommand
                </code>
            </example>
        </member>
        <member name="P:Telerik.WebControls.GridCommandEventArgs.Item">
            <summary>Gets the item containing the command source</summary>
            <example>
            	<code lang="CS">
            protected void RadGrid1_UpdateCommand(object source, GridCommandEventArgs e)
            {
                if (e.Item is GridEditFormItem &amp;&amp; e.Item.IsInEditMode)
                {
                    GridEditFormItem item = e.Item as GridEditFormItem;
                    Hashtable newValues = new Hashtable();
                    item.OwnerTableView.ExtractValuesFromItem(newValues, item);
                    if (newValues["Name"].ToString() == "DefaultName")
                    {
                        e.Canceled = true;
                    }
                }
            }
                </code>
            	<code lang="VB">
            Protected Sub RadGrid1_UpdateCommand([source] As Object, e As GridCommandEventArgs)
                If Typeof e.Item Is GridEditFormItem AndAlso e.Item.IsInEditMode Then
                    Dim item As GridEditFormItem = e.Item
                    Dim newValues As New Hashtable()
                    item.OwnerTableView.ExtractValuesFromItem(newValues, item)
                    If newValues("Name").ToString() = "DefaultName" Then
                        e.Canceled = True
                    End If
                 End If
            End Sub
                </code>
            </example>
        </member>
        <member name="P:Telerik.WebControls.GridCommandEventArgs.Canceled">
            <summary>Gets or sets a value, defining whether the command should be canceled.</summary>
            <example>
            	<code lang="CS">
            protected void RadGrid1_UpdateCommand(object source, GridCommandEventArgs e)
            {
                if (e.Item is GridEditFormItem &amp;&amp; e.Item.IsInEditMode)
                {
                    GridEditFormItem item = e.Item as GridEditFormItem;
                    Hashtable newValues = new Hashtable();
                    item.OwnerTableView.ExtractValuesFromItem(newValues, item);
                    if (newValues["Name"].ToString() == "DefaultName")
                    {
                        e.Canceled = true;
                    }
                }
            }
                </code>
            	<code lang="VB">
            Protected Sub RadGrid1_UpdateCommand([source] As Object, e As GridCommandEventArgs)
                If Typeof e.Item Is GridEditFormItem AndAlso e.Item.IsInEditMode Then
                    Dim item As GridEditFormItem = e.Item
                    Dim newValues As New Hashtable()
                    item.OwnerTableView.ExtractValuesFromItem(newValues, item)
                    If newValues("Name").ToString() = "DefaultName" Then
                        e.Canceled = True
                    End If
                 End If
            End Sub
                </code>
            </example>
        </member>
        <member name="T:Telerik.WebControls.GridSelectCommandEventArgs">
            <summary>For internal usage only.</summary>
            <exclude/>
        </member>
        <member name="M:Telerik.WebControls.GridSelectCommandEventArgs.ExecuteCommand(System.Object)">
            <summary>Fires RadGrid.SelectedIndexChanged event.</summary>
        </member>
        <member name="T:Telerik.WebControls.GridDeselectCommandEventArgs">
            <summary>For internal usage only</summary>
            <exclude/>
        </member>
        <member name="M:Telerik.WebControls.GridDeselectCommandEventArgs.ExecuteCommand(System.Object)">
            <summary>Fires RadGrid.SelectedIndexChanged event.</summary>
        </member>
        <member name="T:Telerik.WebControls.GridDetailTableDataBindEventHandler">
            <summary>Represents a method that will handle grid's DetailTableDataBind event.</summary>
        </member>
        <member name="T:Telerik.WebControls.GridDetailTableDataBindEventArgs">
            <summary>Provides data for DetailTableDataBind event.</summary>
            <example>
            	<code lang="CS">
            protected void RadGrid1_DetailTableDataBind(object source, Telerik.WebControls.GridDetailTableDataBindEventArgs e)
            {
                GridDataItem parentItem = e.DetailTableView.ParentItem as GridDataItem;
                if (e.DetailTableView.DataSourceID == "AccessDataSource2")
                {
                    Session["CustomerID"] = parentItem["CustomerID"].Text;
                }
            }
                </code>
            	<code lang="VB">
            Protected Sub RadGrid1_DetailTableDataBind(ByVal source As Object, ByVal e As GridDetailTableDataBindEventArgs) Handles RadGrid1.DetailTableDataBind
                Dim parentItem As GridDataItem = CType(e.DetailTableView.ParentItem, GridDataItem)
                If (e.DetailTableView.DataSourceID = "AccessDataSource2") Then
                        Session("CustomerID") = parentItem("CustomerID").Text
                End If
            End Sub
                </code>
            </example>
        </member>
        <member name="M:Telerik.WebControls.GridDetailTableDataBindEventArgs.ExecuteCommand(System.Object)">
            <summary>
            Fires RadGrid.DetailTableDataBind event
            </summary>
            <param name="source"></param>
        </member>
        <member name="P:Telerik.WebControls.GridDetailTableDataBindEventArgs.DetailTableView">
            <summary>Gets a reference to the detail table being bound.</summary>
            <example>
            	<code lang="CS">
            protected void RadGrid1_DetailTableDataBind(object source, Telerik.WebControls.GridDetailTableDataBindEventArgs e)
            {
                GridDataItem parentItem = e.DetailTableView.ParentItem as GridDataItem;
                if (e.DetailTableView.DataSourceID == "AccessDataSource2")
                {
                    Session["CustomerID"] = parentItem["CustomerID"].Text;
                }
            }
                </code>
            	<code lang="VB">
            Protected Sub RadGrid1_DetailTableDataBind(ByVal source As Object, ByVal e As GridDetailTableDataBindEventArgs) Handles RadGrid1.DetailTableDataBind
                Dim parentItem As GridDataItem = CType(e.DetailTableView.ParentItem, GridDataItem)
                If (e.DetailTableView.DataSourceID = "AccessDataSource2") Then
                        Session("CustomerID") = parentItem("CustomerID").Text
                End If
            End Sub
                </code>
            </example>
        </member>
        <member name="P:Telerik.WebControls.GridDetailTableDataBindEventArgs.Canceled">
            <summary>Gets or sets a value, defining whether the command should be canceled.</summary>
        </member>
        <member name="T:Telerik.WebControls.GridExpandCommandEventArgs">
            <summary>For internal usage only.</summary>
            <exclude/>
        </member>
        <member name="M:Telerik.WebControls.GridExpandCommandEventArgs.ExecuteCommand(System.Object)">
            <summary>
                Expands/Collapses the <see cref="T:Telerik.WebControls.GridItem"/> containing the
                <see cref="!:CommandSource"/>
            </summary>
        </member>
        <member name="T:Telerik.WebControls.GridFilterCommandEventArgs">
            <summary>For internal usage only.</summary>
            <exclude/>
        </member>
        <member name="M:Telerik.WebControls.GridFilterCommandEventArgs.ExecuteCommand(System.Object)">
            <summary>
                Calculates and sets the <see cref="!:FilterExpression"/> to the corresponding
                <see cref="T:Telerik.WebControls.GridTableView"/> and rebinds the grid.
            </summary>
        </member>
        <member name="T:Telerik.WebControls.GridTableViewCollection">
            <summary>
            	<para>A collection that stores <see cref="T:Telerik.WebControls.GridTableView"/> objects. You can access
            this collection through <see cref="P:Telerik.WebControls.GridTableView.DetailTables"/> property of a
            parent <see cref="T:Telerik.WebControls.GridTableView"/>.</para>
            </summary>
            <seealso cref="T:Telerik.WebControls.GridTableViewCollection"/>
        </member>
        <member name="M:Telerik.WebControls.GridTableViewCollection.#ctor(Telerik.WebControls.RadGrid,Telerik.WebControls.GridTableView)">
            <summary>
            <para>
             Initializes a new instance of <see cref="T:Telerik.WebControls.GridTableViewCollection"/>.
            </para>
            </summary>
            <param name="Owner"><see cref="T:Telerik.WebControls.RadGrid"/> that would aggregate this instance</param>
        </member>
        <member name="M:Telerik.WebControls.GridTableViewCollection.#ctor(Telerik.WebControls.GridTableViewCollection)">
            <summary>
                <para>
                  Initializes a new instance of <see cref="T:Telerik.WebControls.GridTableViewCollection"/> based on another <see cref="T:Telerik.WebControls.GridTableViewCollection"/>.
               </para>
            </summary>
            <param name="value">
                  A <see cref="T:Telerik.WebControls.GridTableViewCollection"/> from which the contents are copied
            </param>
        </member>
        <member name="M:Telerik.WebControls.GridTableViewCollection.#ctor(Telerik.WebControls.GridTableView[])">
            <summary>
                <para>
                  Initializes a new instance of <see cref="T:Telerik.WebControls.GridTableViewCollection"/> containing any array of <see cref="T:Telerik.WebControls.GridTableView"/> objects.
               </para>
            </summary>
            <param name="value">
                  An array of <see cref="T:Telerik.WebControls.GridTableView"/> objects with which to intialize the collection
            </param>
        </member>
        <member name="M:Telerik.WebControls.GridTableViewCollection.Add(Telerik.WebControls.GridTableView)">
            <summary>
               <para>Adds a <see cref="T:Telerik.WebControls.GridTableView"/> with the specified value to the 
               <see cref="T:Telerik.WebControls.GridTableViewCollection"/> .</para>
            </summary>
            <param name="value">The <see cref="T:Telerik.WebControls.GridTableView"/> to add.</param>
            <returns>
               <para>The index at which the new element was inserted.</para>
            </returns>
            <seealso cref="M:Telerik.WebControls.GridTableViewCollection.AddRange(Telerik.WebControls.GridTableView[])"/>
        </member>
        <member name="M:Telerik.WebControls.GridTableViewCollection.AddRange(Telerik.WebControls.GridTableView[])">
            <summary>
            <para>Copies the elements of an array to the end of the <see cref="T:Telerik.WebControls.GridTableViewCollection"/>.</para>
            </summary>
            <param name="value">
               An array of type <see cref="T:Telerik.WebControls.GridTableView"/> containing the objects to add to the collection.
            </param>
            <returns>
              <para>None.</para>
            </returns>
            <seealso cref="M:Telerik.WebControls.GridTableViewCollection.Add(Telerik.WebControls.GridTableView)"/>
        </member>
        <member name="M:Telerik.WebControls.GridTableViewCollection.AddRange(Telerik.WebControls.GridTableViewCollection)">
            <summary>
                <para>
                  Adds the contents of another <see cref="T:Telerik.WebControls.GridTableViewCollection"/> to the end of the collection.
               </para>
            </summary>
            <param name="value">
               A <see cref="T:Telerik.WebControls.GridTableViewCollection"/> containing the objects to add to the collection.
            </param>
            <returns>
              <para>None.</para>
            </returns>
            <seealso cref="M:Telerik.WebControls.GridTableViewCollection.Add(Telerik.WebControls.GridTableView)"/>
        </member>
        <member name="M:Telerik.WebControls.GridTableViewCollection.Contains(Telerik.WebControls.GridTableView)">
            <summary>
            <para>Gets a value indicating whether the 
               <see cref="T:Telerik.WebControls.GridTableViewCollection"/> contains the specified <see cref="T:Telerik.WebControls.GridTableView"/>.</para>
            </summary>
            <param name="value">The <see cref="T:Telerik.WebControls.GridTableView"/> to locate.</param>
            <returns>
            <para><see langword="true"/> if the <see cref="T:Telerik.WebControls.GridTableView"/> is contained in the collection; 
              otherwise, <see langword="false"/>.</para>
            </returns>
            <seealso cref="M:Telerik.WebControls.GridTableViewCollection.IndexOf(Telerik.WebControls.GridTableView)"/>
        </member>
        <member name="M:Telerik.WebControls.GridTableViewCollection.CopyTo(Telerik.WebControls.GridTableView[],System.Int32)">
            <summary>
            <para>Copies the <see cref="T:Telerik.WebControls.GridTableViewCollection"/> values to a one-dimensional <see cref="T:System.Array"/> instance at the 
               specified index.</para>
            </summary>
            <param name="array"><para>The one-dimensional <see cref="T:System.Array"/> that is the destination of the values copied from <see cref="T:Telerik.WebControls.GridTableViewCollection"/> .</para></param>
            <param name="index">The index in <paramref name="array"/> where copying begins.</param>
            <returns>
              <para>None.</para>
            </returns>
            <exception cref="T:System.ArgumentException"><para><paramref name="array"/> is multidimensional.</para> <para>-or-</para> <para>The number of elements in the <see cref="T:Telerik.WebControls.GridTableViewCollection"/> is greater than the available space between <paramref name="array"/> and the end of <paramref name="array"/>.</para></exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="array"/> is <see langword="null"/>. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="array"/> is less than <paramref name="array"/>"s lowbound. </exception>
            <seealso cref="T:System.Array"/>
        </member>
        <member name="M:Telerik.WebControls.GridTableViewCollection.IndexOf(Telerik.WebControls.GridTableView)">
            <summary>
               <para>Returns the index of a <see cref="T:Telerik.WebControls.GridTableView"/> in 
                  the <see cref="T:Telerik.WebControls.GridTableViewCollection"/> .</para>
            </summary>
            <param name="value">The <see cref="T:Telerik.WebControls.GridTableView"/> to locate.</param>
            <returns>
            <para>The index of the <see cref="T:Telerik.WebControls.GridTableView"/> of <paramref name="value"/> in the 
            <see cref="T:Telerik.WebControls.GridTableViewCollection"/>, if found; otherwise, -1.</para>
            </returns>
            <seealso cref="M:Telerik.WebControls.GridTableViewCollection.Contains(Telerik.WebControls.GridTableView)"/>
        </member>
        <member name="M:Telerik.WebControls.GridTableViewCollection.Insert(System.Int32,Telerik.WebControls.GridTableView)">
            <summary>
            <para>Inserts a <see cref="T:Telerik.WebControls.GridTableView"/> into the <see cref="T:Telerik.WebControls.GridTableViewCollection"/> at the specified index.</para>
            </summary>
            <param name="index">The zero-based index where <paramref name="value"/> should be inserted.</param>
            <param name=" value">The <see cref="T:Telerik.WebControls.GridTableView"/> to insert.</param>
            <returns><para>None.</para></returns>
            <seealso cref="M:Telerik.WebControls.GridTableViewCollection.Add(Telerik.WebControls.GridTableView)"/>
        </member>
        <member name="M:Telerik.WebControls.GridTableViewCollection.GetEnumerator">
            <summary>
               <para>Returns an enumerator that can iterate through 
                  the <see cref="T:Telerik.WebControls.GridTableViewCollection"/> .</para>
            </summary>
            <returns><para>None.</para></returns>
            <seealso cref="T:System.Collections.IEnumerator"/>
        </member>
        <member name="M:Telerik.WebControls.GridTableViewCollection.Remove(Telerik.WebControls.GridTableView)">
            <summary>
               <para> Removes a specific <see cref="T:Telerik.WebControls.GridTableView"/> from the 
               <see cref="T:Telerik.WebControls.GridTableViewCollection"/> .</para>
            </summary>
            <param name="value">The <see cref="T:Telerik.WebControls.GridTableView"/> to remove from the <see cref="T:Telerik.WebControls.GridTableViewCollection"/> .</param>
            <returns><para>None.</para></returns>
            <exception cref="T:System.ArgumentException"><paramref name="value"/> is not found in the Collection. </exception>
        </member>
        <member name="P:Telerik.WebControls.GridTableViewCollection.OwnerGrid">
            <summary>
            Get the instance of <see cref="T:Telerik.WebControls.RadGrid"/> that owns this instance
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridTableViewCollection.Item(System.Int32)">
            <summary>
            <para>Represents the entry at the specified index of the <see cref="T:Telerik.WebControls.GridTableView"/>.</para>
            </summary>
            <param name="index"><para>The zero-based index of the entry to locate in the collection.</para></param>
            <value>
               <para> The entry at the specified index of the collection.</para>
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is outside the valid range of indexes for the collection.</exception>
        </member>
        <member name="M:Telerik.WebControls.GridDataTableFromEnumerable.FinishedParsingProperties(System.Object)">
            <summary>
            Add DataColumns for grid columns with composite DataFields (sub properties)
            </summary>
        </member>
        <member name="T:Telerik.WebControls.GridEnumerableBase">
            <summary>
            Summary description for IGridEnumerable.
            </summary>
        </member>
        <member name="T:Telerik.WebControls.GridExportSettings">
            <summary>
            Container of misc. grouping settings of RadGrid control
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridExportSettings.FileName">
            <summary>
            A string specifying the name (without the extension) of the file that will be
            created. The file extension is automatically added based on the method that is
            used.
            </summary>
            <seealso cref="!:http://www.telerik.com/demos/aspnet/Grid/Examples/GeneralFeatures/Exporting/DefaultCS.aspx" cat="RadGrid QSF demos">Export Grid to Microsoft Excel, Microsoft Word</seealso>
        </member>
        <member name="P:Telerik.WebControls.GridExportSettings.ExportOnlyData">
            <summary>Determines whether only data will be exported.</summary>
            <seealso cref="!:http://www.telerik.com/demos/aspnet/Grid/Examples/GeneralFeatures/Exporting/DefaultCS.aspx" cat="RadGrid QSF demos">Export Grid to Microsoft Excel, Microsoft Word</seealso>
        </member>
        <member name="P:Telerik.WebControls.GridExportSettings.IgnorePaging">
            <summary>
            Specifies whether all records will be exported or merely those on the current
            page.
            </summary>
            <seealso cref="!:http://www.telerik.com/demos/aspnet/Grid/Examples/GeneralFeatures/Exporting/DefaultCS.aspx" cat="RadGrid QSF demos">Export Grid to Microsoft Excel, Microsoft Word</seealso>
        </member>
        <member name="P:Telerik.WebControls.GridExportSettings.OpenInNewWindow">
            <summary>Opens the exported grid in a new instead of the same page.</summary>
            <seealso cref="!:http://www.telerik.com/demos/aspnet/Grid/Examples/GeneralFeatures/Exporting/DefaultCS.aspx" cat="RadGrid QSF demos">Export Grid to Microsoft Excel, Microsoft Word</seealso>
        </member>
        <member name="T:Telerik.WebControls.GridKnownFunction">
            <summary>
            Predefined filter expression enumeration. Used by <see cref="T:Telerik.WebControls.GridFilterFunction"/> class.
            </summary>
            <seealso cref="!:http://www.telerik.com/demos/aspnet/Grid/Examples/GeneralFeatures/Filtering/DefaultCS.aspx" cat="Online demos">Basic Filtering</seealso>
            <remarks>
            	<para>Some functions are applicable (and are not displayed on filterting) to all
                the data types:</para>
            	<para><strong>String</strong> type supports all the functions.</para>
            	<para><strong>Integer:</strong> NoFilter, EqualTo, NotEqualTo, GreaterThan,
                LessThan, GreaterThanOrEqualTo, LessThanOrEqualTo, Between, NotBetween, IsNull and
                NotIsNull are supported. <font color="blue"><em>Contains, DoesNotContain,
                StartsWith,</em>
            			<em>EndsWith, IsEmpty <font color="#000040">and</font>
                NotIsEmpty</em></font>
            		<strong>are not</strong> supported.</para>
            	<para><strong>Date:</strong> same as Integer.</para>
            </remarks>
            <seealso cref="!:grdBasicFiltering.html" cat="RadGrid manual">Basic Filtering</seealso>
            <seealso cref="!:grdLocalizingFilteringMenuOptions.html" cat="RadGrid manual">How-To: Localizing filtering menu options</seealso>
            <seealso cref="!:grdReducingFilterMenuOptions.html" cat="RadGrid manual">How-To: Reducing filtering menu options</seealso>
        </member>
        <member name="F:Telerik.WebControls.GridKnownFunction.NoFilter">
            <summary>
            No filter would be applied, filter controls would be cleared 
            </summary>
        </member>
        <member name="F:Telerik.WebControls.GridKnownFunction.Contains">
            <summary>Same as: dataField LIKE '/%value/%'</summary>
        </member>
        <member name="F:Telerik.WebControls.GridKnownFunction.DoesNotContain">
            <summary>Same as: dataField NOT LIKE '/%value/%'</summary>
        </member>
        <member name="F:Telerik.WebControls.GridKnownFunction.StartsWith">
            <summary>Same as: dataField LIKE 'value/%'</summary>
        </member>
        <member name="F:Telerik.WebControls.GridKnownFunction.EndsWith">
            <summary>Same as: dataField LIKE '/%value'</summary>
        </member>
        <member name="F:Telerik.WebControls.GridKnownFunction.EqualTo">
            <summary>
            Same as: dataField = value
            </summary>
        </member>
        <member name="F:Telerik.WebControls.GridKnownFunction.NotEqualTo">
            <summary>Same as: dataField != value</summary>
        </member>
        <member name="F:Telerik.WebControls.GridKnownFunction.GreaterThan">
            <summary>Same as: dataField &gt; value</summary>
        </member>
        <member name="F:Telerik.WebControls.GridKnownFunction.LessThan">
            <summary>
            Same as: dataField &lt; value
            </summary>
        </member>
        <member name="F:Telerik.WebControls.GridKnownFunction.GreaterThanOrEqualTo">
            <summary>Same as: dataField &gt;= value</summary>
        </member>
        <member name="F:Telerik.WebControls.GridKnownFunction.LessThanOrEqualTo">
            <summary>
            Same as: dataField &lt;= value
            </summary>
        </member>
        <member name="F:Telerik.WebControls.GridKnownFunction.Between">
            <summary>
            Same as: value1 &lt;= dataField &lt;= value2.<br/>
            Note that value1 and value2 should be separated by [space] when entered as
            filter.
            </summary>
        </member>
        <member name="F:Telerik.WebControls.GridKnownFunction.NotBetween">
            <summary>
            Same as: dataField &lt;= value1 &amp;&amp; dataField &gt;= value2.<br/>
            Note that value1 and value2 should be separated by [space] when entered as
            filter.
            </summary>
        </member>
        <member name="F:Telerik.WebControls.GridKnownFunction.IsEmpty">
            <summary>
            Same as: dataField = ''
            </summary>
        </member>
        <member name="F:Telerik.WebControls.GridKnownFunction.NotIsEmpty">
            <summary>Same as: dataField != ''</summary>
        </member>
        <member name="F:Telerik.WebControls.GridKnownFunction.IsNull">
            <summary>
            Only null values
            </summary>
        </member>
        <member name="F:Telerik.WebControls.GridKnownFunction.NotIsNull">
            <summary>
            Only those records that does not contain null values within the corresponding column
            </summary>
        </member>
        <member name="F:Telerik.WebControls.GridKnownFunction.Custom">
            <summary>
            Custom function will be applied. The filter value should contain a valid filter expression, including DataField, operators and value
            </summary>
        </member>
        <member name="T:Telerik.WebControls.GridFilterListOptions">
            <summary>
            Choose which filter function will be enabled for a column
            </summary>
            <seealso cref="!:grdBasicFiltering.html" cat="RadGrid Manual">Basic Filtering</seealso>
            <seealso cref="!:grdCustomOptionForFiltering.html" cat="RadGrid Manual: How-To">Custom option for filtering (FilterListOptions -&gt;
            VaryByDataTypeAllowCustom)</seealso>
        </member>
        <member name="F:Telerik.WebControls.GridFilterListOptions.VaryByDataType">
            <summary>
            Depending of data type of the column, RadGrid will automatically choose which filters to be displayed in the list
            </summary>
        </member>
        <member name="F:Telerik.WebControls.GridFilterListOptions.VaryByDataTypeAllowCustom">
            <summary>
            As VaryByDataType with custom filtering enabled
            </summary>
        </member>
        <member name="F:Telerik.WebControls.GridFilterListOptions.AllowAllFilters">
            <summary>
            All filters will be displayed. Note that some data types are not applicatble to some filter functions. For example you cannot apply
            the 'like' function for integer data type. In such cases you should handle the filtering in a custom manner, handling
            <see cref="E:Telerik.WebControls.RadGrid.ItemCommand"/> for 'Filter' command or <see cref="!:RadGrid.FilterCommand"/>
            </summary>
        </member>
        <member name="T:Telerik.WebControls.GridFilterFunction">
            <summary>
            Used when column-based filtering feature of RadGrid is enabled. Defines properties and methods for formatting the 
            predefined filter expressions
            </summary>
        </member>
        <member name="T:Telerik.WebControls.GridAggregateFunction">
            <summary>
                Enumeration representing the aggregate functions which can be applied to a
                GridGroupByField (part of <see cref="P:Telerik.WebControls.GridGroupByExpression.SelectFields"/>
                collection)
            </summary>
            <remarks>
                Meaningful only when GridGroupByField is part of
                <see cref="P:Telerik.WebControls.GridGroupByExpression.SelectFields"/> collection
            </remarks>
            <seealso cref="!:http://www.telerik.com/help/aspnet/grid/?grdGroupByProgrammaticDefinition.html">Programmatic GridGroupByField syntax</seealso>
            <example>
            	<code lang="CS" title="C#">
            GridGroupByField gridGroupByField; 
              
            gridGroupByField = new GridGroupByField(); 
            gridGroupByField.FieldName = "Freight"; 
            gridGroupByField.HeaderText = "Total shipping cost is "; 
            gridGroupByField.Aggregate = GridAggregateFunction.Sum; 
            expression.SelectFields.Add( gridGroupByField );
                </code>
            	<code lang="VB" title="VB">
            Dim gridGroupByField As GridGroupByField
             
            gridGroupByField = New GridGroupByField
            gridGroupByField.FieldName = "Freight"
            gridGroupByField.HeaderText = "Total shipping cost is "
            gridGroupByField.Aggregate = GridAggregateFunction.Sum
            expression.SelectFields.Add(gridGroupByField)
                </code>
            </example>
        </member>
        <member name="T:Telerik.WebControls.GridGroupByField">
            <summary>
                Field which is part of each <see cref="P:Telerik.WebControls.GridGroupByExpression.SelectFields"/>
                and <see cref="P:Telerik.WebControls.GridGroupByExpression.GroupByFields"/> collection
            </summary>
            <example>
            	<code lang="VB" title="VB">
            Dim groupExpression As GridGroupByExpression = New GridGroupByExpression()
             
            Dim groupByField As GridGroupByField = New GridGroupByField()
             
            groupByField = New GridGroupByField()
            groupByField.FieldName = "Received"
            groupExpression.SelectFields.Add(groupByField)
             
            groupByField = New GridGroupByField()
            groupByField.FieldName = "Received"
            groupExpression.GroupByFields.Add(groupByField)
             
            RadGrid1.MasterTableView.GroupByExpressions.Add(groupExpression)
                </code>
            	<code lang="CS" title="C#">
            GridGroupByExpression groupExpression = new GridGroupByExpression(); 
             
            GridGroupByField groupByField = new GridGroupByField(); 
            groupByField = new GridGroupByField(); 
            groupByField.FieldName = "Received"; 
            groupExpression.SelectFields.Add(groupByField); 
             
            groupByField = new GridGroupByField(); 
            groupByField.FieldName = "Received"; 
            groupExpression.GroupByFields.Add(groupByField); 
             
            RadGrid1.MasterTableView.GroupByExpressions.Add(groupExpression);
                </code>
            </example>
            <remarks>
                Some of the GridGroupByField properties are meaningful only when present under
                specific collection - <see cref="P:Telerik.WebControls.GridGroupByExpression.SelectFields"/> or
                <see cref="P:Telerik.WebControls.GridGroupByExpression.GroupByFields"/>
            </remarks>
            <seealso cref="!:http://www.telerik.com/help/aspnet/grid/?grdGroupByDeclarativeDefinition.html">Declarative GridGroupByField syntax</seealso>
            <seealso cref="!:http://www.telerik.com/help/aspnet/grid/?grdGroupByProgrammaticDefinition.html">Programmatic GridGroupByField syntax</seealso>
        </member>
        <member name="M:Telerik.WebControls.GridGroupByField.SetAggregate(System.String)">
            <summary>
                Method setting the aggregate function applied for a
                <strong>GridGroupByField</strong> which is part of the
                <see cref="P:Telerik.WebControls.GridGroupByExpression.SelectFields"/> collection.
            </summary>
            <returns>N/A</returns>
            <example>
            	<code lang="VB" title="VB">
            Dim groupExpression As GridGroupByExpression = New GridGroupByExpression()
             
            Dim groupByField As GridGroupByField = New GridGroupByField()
            groupByField.FieldName = "Size"
            groupByField.SetAggregate(GridAggregateFunction.Sum)
            groupExpression.SelectFields.Add(groupByField)
             
            groupByField = New GridGroupByField()
            groupByField.FieldName = "Received"
            groupExpression.SelectFields.Add(groupByField)
             
            groupByField = New GridGroupByField()
            groupByField.FieldName = "Received"
            groupExpression.GroupByFields.Add(groupByField)
             
            RadGrid1.MasterTableView.GroupByExpressions.Add(groupExpression)
                </code>
            	<code lang="CS" title="C#">
            GridGroupByExpression groupExpression = new GridGroupByExpression(); 
             
            GridGroupByField groupByField = new GridGroupByField(); 
            groupByField.FieldName = "Size"; 
            groupByField.SetAggregate(GridAggregateFunction.Sum); 
            groupExpression.SelectFields.Add(groupByField); 
             
            groupByField = new GridGroupByField(); 
            groupByField.FieldName = "Received"; 
            groupExpression.SelectFields.Add(groupByField); 
             
            groupByField = new GridGroupByField(); 
            groupByField.FieldName = "Received"; 
            groupExpression.GroupByFields.Add(groupByField); 
             
            RadGrid1.MasterTableView.GroupByExpressions.Add(groupExpression);
                </code>
            </example>
            <remarks>
                Meaningful only for GridGroupByFields from the
                <see cref="P:Telerik.WebControls.GridGroupByExpression.SelectFields"/> collection
            </remarks>
        </member>
        <member name="M:Telerik.WebControls.GridGroupByField.SetSortOrder(System.String)">
            <summary>
                Method setting the sort order applied for a <strong>GridGroupByField</strong> which
                is part of the <see cref="P:Telerik.WebControls.GridGroupByExpression.GroupByFields"/> collection.
            </summary>
            <returns>N/A</returns>
            <remarks>
                Meaningful only for GridGroupByFields from the
                <see cref="P:Telerik.WebControls.GridGroupByExpression.GroupByFields"/> collection
            </remarks>
            <example>
            	<code lang="CS" title="C#">
            GridGroupByExpression groupExpression = new GridGroupByExpression(); 
             
            groupByField = new GridGroupByField(); 
            groupByField.FieldName = "Received"; 
            groupExpression.SelectFields.Add(groupByField); 
             
            groupByField = new GridGroupByField(); 
            groupByField.FieldName = "Received"; 
            groupByField.SetSortOrder(GridSortOrder.Ascending);
            groupExpression.GroupByFields.Add(groupByField); 
             
            RadGrid1.MasterTableView.GroupByExpressions.Add(groupExpression);
                </code>
            	<code lang="VB" title="VB">
            Dim groupExpression As GridGroupByExpression = New GridGroupByExpression()
             
            Dim groupByField As GridGroupByField = New GridGroupByField()
             
            groupByField = New GridGroupByField()
            groupByField.FieldName = "Received"
            groupExpression.SelectFields.Add(groupByField)
             
            groupByField = New GridGroupByField()
            groupByField.FieldName = "Received"
            groupByField.SetSortOrder(GridSortOrder.Descending)
            groupExpression.GroupByFields.Add(groupByField)
             
            RadGrid1.MasterTableView.GroupByExpressions.Add(groupExpression)
                </code>
            </example>
        </member>
        <member name="M:Telerik.WebControls.GridGroupByField.GetHeaderText">
            <summary>
                Method which gets the <strong>HeaderText</strong> value from GridGroupByField part
                of the <see cref="P:Telerik.WebControls.GridGroupByExpression.SelectFields"/> collection
            </summary>
            <returns>String containing the <strong>HeaderText</strong> value</returns>
            <remarks>
                Meaningful only for GridGroupByFields from the
                <see cref="P:Telerik.WebControls.GridGroupByExpression.SelectFields"/> collection
            </remarks>
            <example>
            	<code lang="VB" title="VB">
            Dim groupExpression As GridGroupByExpression = RadGrid1.MasterTableView.GroupByExpressions(0)
            Dim headerText as String = groupExpression.SelectFields(0).GetHeaderText()
                </code>
            	<code lang="CS" title="C#">
            GridGroupByExpression groupExpression = RadGrid1.MasterTableView.GroupByExpressions[0] as GridGroupByExpression;
            String headerText = groupExpression.SelectFields[0].GetHeaderText()
                </code>
            </example>
        </member>
        <member name="M:Telerik.WebControls.GridGroupByField.GetFormatString">
            <summary>
                Method which gets the <strong>FormatString</strong> value from GridGroupByField
                part of the <see cref="P:Telerik.WebControls.GridGroupByExpression.SelectFields"/> collection
            </summary>
            <returns>String containing the <strong>FormatString</strong> value</returns>
            <remarks>
                Meaningful only for GridGroupByFields from the
                <see cref="P:Telerik.WebControls.GridGroupByExpression.SelectFields"/> collection
            </remarks>
            <example>
            	<code lang="VB" title="VB">
            Dim groupExpression As GridGroupByExpression = RadGrid1.MasterTableView.GroupByExpressions(0)
            Dim formatString As String = groupExpression.SelectFields(0).GetFormatString()
                </code>
            	<code lang="CS" title="C#">
            GridGroupByExpression groupExpression = RadGrid1.MasterTableView.GroupByExpressions[0] As GridGroupByExpression; 
            String formatString = groupExpression.SelectFields[0].GetFormatString()
                </code>
            </example>
        </member>
        <member name="M:Telerik.WebControls.GridGroupByField.Validate">
            <summary>Inherited but not used</summary>
        </member>
        <member name="M:Telerik.WebControls.GridGroupByField.ToString">
            <summary>
            Method that retrieves a <b>System.String</b> that indicates the current
            object
            </summary>
            <returns>The string format of the object.</returns>
            <seealso cref="!:http://msdn.microsoft.com/library/default.asp?url=/workshop/webcontrols/webforms/library/shared/tostring.asp">Object.ToString()</seealso>
        </member>
        <member name="M:Telerik.WebControls.GridGroupByField.CopyFrom(Telerik.WebControls.GridGroupByField)">
            <summary>Inherited but not used</summary>
        </member>
        <member name="P:Telerik.WebControls.GridGroupByField.FieldName">
            <summary>
            Gets or sets a string that represents the <strong>DataField</strong> column
            property that will be used to form the <strong>GroupByExpression</strong>.
            </summary>
            <remarks>
            Unless you have specified a <strong>FieldAlias</strong>, the value of this
            property will be used when Telerik RadGrid constructs the text for
            <strong>GridGroupHeaderItem</strong>. <strong>FieldName</strong> has a meaning both for
            <strong>SelectFields</strong> and <strong>GroupByFields</strong> of
            <strong>GroupByExpression</strong>.
            </remarks>
            <value>
            String representing the <strong>DataField</strong> for the corresponding grouped
            column
            </value>
            <example>
            	<code lang="CS" title="C#">
            GridGroupByField gridGroupByField;
             
            //Add select fields (before the "Group By" clause)
            gridGroupByField = new GridGroupByField();
            gridGroupByField.FieldName = "EmployeeID";
            gridGroupByField.HeaderText = "Employee";
            expression.SelectFields.Add( gridGroupByField );
             
            //Add a field for group-by (after the "Group By" clause)
            gridGroupByField = new GridGroupByField();
            gridGroupByField.FieldName = "EmployeeID";
            expression.GroupByFields.Add( gridGroupByField );
                </code>
            	<code lang="VB" title="VB">
            Dim gridGroupByField As GridGroupByField
             
            'Add select field (before the "Group By" clause)
            gridGroupByField = New GridGroupByField()
            gridGroupByField.FieldName = "EmployeeID"
            gridGroupByField.HeaderText = "Employee"
            expression.SelectFields.Add(gridGroupByField)
             
            'Add a field for group-by (after the "Group By" clause)
            gridGroupByField = New GridGroupByField()
            gridGroupByField.FieldName = "EmployeeID"
            expression.GroupByFields.Add(gridGroupByField)
                </code>
            </example>
            <seealso cref="!:http://www.telerik.com/help/aspnet/grid/?grdGroupByDeclarativeDefinition.html">Declarative GridGroupByField syntax</seealso>
            <seealso cref="!:http://www.telerik.com/help/aspnet/grid/?grdGroupByProgrammaticDefinition.html">Programmatic GridGroupByField syntax</seealso>
        </member>
        <member name="P:Telerik.WebControls.GridGroupByField.FieldAlias">
            <summary>
            Gets or sets a value representing a friendly name for the field used for forming
            the group by expression. This name will be displayed in each group header when grouping
            by the respective field.
            </summary>
            <remarks>
            	<para>
                    Use this property for setting the field text that will be displayed in the
                    <strong>GridGroupHeaderItem</strong>. If this property is not set, the value of
                    <see cref="P:Telerik.WebControls.GridGroupByField.FieldName"/> property will be used. Note that this property has
                    a meaning <em>only</em> for GridGroupByField part of the <u>SelectFields</u> of
                    <strong>GridGroupByExpression</strong>.
                </para>
            	<para>This property is useful in cases when:</para>
            	<list type="bullet">
            		<item>you want to change the value displayed in group header (different than
                    the default <strong>DataField</strong> column value)<br/>
                    or</item>
            		<item>group by a template column and Telerik RadGrid cannot get the
                    header text for that column.</item>
            	</list>
            </remarks>
            <example>
            	<code lang="CS" title="C#">
            GridGroupByField gridGroupByField;
             
            //Add select fields (before the "Group By" clause)
            gridGroupByField = new GridGroupByField();
            gridGroupByField.FieldName = "EmployeeID";
            gridGroupByField.FieldAlias = "EmployeeIdentificator";
            expression.SelectFields.Add( gridGroupByField );
                </code>
            	<code lang="VB" title="VB">
            Dim gridGroupByField As GridGroupByField
             
            'Add select fields (before the "Group By" clause)
            gridGroupByField = New GridGroupByField
            gridGroupByField.FieldName = "EmployeeID"
            gridGroupByField.FieldAlias = "EmployeeIdentificator"
            expression.SelectFields.Add(gridGroupByField)
                </code>
            </example>
            <value>String representing the friendly name shown</value>
            <seealso cref="!:http://www.telerik.com/help/aspnet/grid/?grdGroupByDeclarativeDefinition.html">Declarative GridGroupByField syntax</seealso>
            <seealso cref="!:http://www.telerik.com/help/aspnet/grid/?grdGroupByProgrammaticDefinition.html">Programmatic GridGroupByField syntax</seealso>
        </member>
        <member name="P:Telerik.WebControls.GridGroupByField.Aggregate">
            <remarks>
                Meaningful only for fields in the
                <see cref="P:Telerik.WebControls.GridGroupByExpression.SelectFields"/> collection.
            </remarks>
            <summary>
                Gets or sets aggregate function (from <see cref="T:Telerik.WebControls.GridAggregateFunction"/>
                enumeration values) that will be applied on the grouped data.
            </summary>
            <value>
            Returns the result from currently used aggregate function. This property defaults
            to <strong>GridAggregateFunction.None</strong>
            </value>
            <example>
            	<code lang="CS" title="C#">
            GridGroupByField gridGroupByField;
             
            gridGroupByField = new GridGroupByField();
            gridGroupByField.FieldName = "Freight";
            gridGroupByField.HeaderText = "Total shipping cost is ";
            gridGroupByField.Aggregate = GridAggregateFunction.Sum;
            expression.SelectFields.Add( gridGroupByField );
                </code>
            	<code lang="VB" title="VB">
            Dim gridGroupByField As GridGroupByField
             
            gridGroupByField = New GridGroupByField
            gridGroupByField.FieldName = "Freight"
            gridGroupByField.HeaderText = "Total shipping cost is "
            gridGroupByField.Aggregate = GridAggregateFunction.Sum
            expression.SelectFields.Add(gridGroupByField)
                </code>
            </example>
            <seealso cref="!:http://www.telerik.com/help/aspnet/grid/?grdGroupByProgrammaticDefinition.html">Programmatic GridGroupByField syntax</seealso>
        </member>
        <member name="P:Telerik.WebControls.GridGroupByField.SortOrder">
            <remarks>
                Meaningful only for fields in the
                <see cref="P:Telerik.WebControls.GridGroupByExpression.GroupByFields"/> collection. 'None' value is
                not supported because it can not determine uniquely the order in which the groups
                will be displayed.
            </remarks>
            <summary>
                Gets or sets the value representing how the data will be sorted. Acceptable values
                are the values of <see cref="T:Telerik.WebControls.GridSortOrder"/> enumeration except for None
                (Ascending, Descending).
            </summary>
            <value>
            Returns the sorting mode applied to the grouped data. By default it is
            Ascending.
            </value>
            <example>
            	<code lang="CS" title="C#">
            GridGroupByField gridGroupByField;
             
            gridGroupByField = new GridGroupByField();
            gridGroupByField.FieldName = "EmployeeID";
            gridGroupByField.SortOrder = GridSortOrder.Descending;
            expression.GroupByFields.Add( gridGroupByField );
                </code>
            	<code lang="VB" title="VB">
            Dim gridGroupByField As GridGroupByField
             
            gridGroupByField = New GridGroupByField
            gridGroupByField.FieldName = "EmployeeID"
            gridGroupByField.SortOrder = GridSortOrder.Descending
            expression.GroupByFields.Add(gridGroupByField)
                </code>
            </example>
            <seealso cref="!:http://www.telerik.com/help/aspnet/grid/?grdGroupByProgrammaticDefinition.html">Programmatic GridGroupByField syntax</seealso>
        </member>
        <member name="P:Telerik.WebControls.GridGroupByField.FormatString">
            <remarks>
            	<para>
                    Meaningful only for fields in the
                    <see cref="P:Telerik.WebControls.GridGroupByExpression.SelectFields"/> collection.
                </para>
            	<para>When rendering RadGrid is using this expression to format field's value. It
                is mandatory that {0} parameter is specified in the string - it will be replaced
                with field's runtime value.</para>
            </remarks>
            <summary>
                Gets or sets the string that will be used to format the GridGroupByField part of
                the <see cref="!:SelectFields"/> collection.
            </summary>
            <value>
            String, formated by the GridGroupByField's FormatString property. It defaults to:
            "{0}".
            </value>
            <example>
            	<code lang="CS" title="C#">
            GridGroupByField gridGroupByField;
             
            gridGroupByField = new GridGroupByField();
            gridGroupByField.FieldName = "EmployeeID";
            gridGroupByField.FormatString = "&lt;strong&gt;{0}&lt;/strong&gt;";
            expression.SelectFields.Add( gridGroupByField );
                </code>
            	<code lang="VB" title="VB">
            Dim gridGroupByField As GridGroupByField
             
            gridGroupByField = New GridGroupByField
            gridGroupByField.FieldName = "EmployeeID"
            gridGroupByField.FormatString = "&lt;strong&gt;{0}&lt;/strong&gt;"
            expression.SelectFields.Add(gridGroupByField)
                </code>
            </example>
            <seealso cref="!:http://www.telerik.com/help/aspnet/grid/?grdGroupByDeclarativeDefinition.html">Declarative GridGroupByField syntax</seealso>
            <seealso cref="!:http://www.telerik.com/help/aspnet/grid/?grdGroupByProgrammaticDefinition.html">Programmatic GridGroupByField syntax</seealso>
        </member>
        <member name="P:Telerik.WebControls.GridGroupByField.HeaderText">
            <remarks>
                Meaningful only for fields in the
                <see cref="P:Telerik.WebControls.GridGroupByExpression.SelectFields"/> collection. When rendering
                RadGrid will override the <strong>FieldAlias</strong> value with the
                <strong>HeaderText</strong> specified.
            </remarks>
            <value>
            	<strong>string</strong>, copied from the column's HeaderText if this group
            expression is based on a column. It defaults to the <strong>FieldAlias</strong> value
            (if specified).
            </value>
            <summary>
                Gets or sets the expression that will be displayed in the
                <see cref="T:Telerik.WebControls.GridGroupHeaderItem"/>.
            </summary>
            <example>
            	<code lang="CS" title="C#">
            GridGroupByField gridGroupByField;
             
            gridGroupByField = new GridGroupByField();
            gridGroupByField.FieldName = "EmployeeID";
            gridGroupByField.HeaderText = "EmployeeNo";
            expression.SelectFields.Add( gridGroupByField );
                </code>
            	<code lang="VB" title="VB">
            Dim gridGroupByField As GridGroupByField
             
            gridGroupByField = New GridGroupByField
            gridGroupByField.FieldName = "EmployeeID"
            gridGroupByField.HeaderText = "EmployeeNo"
            expression.SelectFields.Add(gridGroupByField)
                </code>
            </example>
            <seealso cref="!:http://www.telerik.com/help/aspnet/grid/?grdGroupByProgrammaticDefinition.html">Programmatic GridGroupByField syntax</seealso>
        </member>
        <member name="P:Telerik.WebControls.GridGroupByField.HeaderValueSeparator">
            <summary>
            	<para>Gets or sets the string that separates header text from value text as the
                field is rendered in the <strong>GroupHeaderItems</strong>.</para>
            </summary>
            <value>
            	<para>string, represents the separator between the header text and value
                text.</para>
            	<para>This field value defaults to <strong>": "</strong>.</para>
            </value>
            <example>
            	<code lang="CS" title="C#">
            GridGroupByField gridGroupByField;
             
            gridGroupByField = new GridGroupByField();
            gridGroupByField.FieldName = "EmployeeID";
            gridGroupByField.HeaderValueSeparator = " for current group: ";
            expression.SelectFields.Add( gridGroupByField );
                </code>
            	<code lang="VB" title="VB">
            Dim gridGroupByField As GridGroupByField
             
            gridGroupByField = New GridGroupByField
            gridGroupByField.FieldName = "EmployeeID"
            gridGroupByField.HeaderValueSeparator = " for current group: "
            expression.SelectFields.Add(gridGroupByField)
                </code>
            </example>
            <remarks>
                Meaningful only for fields in the
                <see cref="P:Telerik.WebControls.GridGroupByExpression.SelectFields"/> collection.
            </remarks>
            <seealso cref="!:http://www.telerik.com/help/aspnet/grid/?grdGroupByProgrammaticDefinition.html">Programmatic GridGroupByField syntax</seealso>
            <seealso cref="!:http://www.telerik.com/help/aspnet/grid/?grdGroupByDeclarativeDefinition.html">Declarative GridGroupByField syntax</seealso>
        </member>
        <member name="T:Telerik.WebControls.GridGroupByFieldList">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="T:Telerik.WebControls.GridGroupingSettings">
            <summary>Container of miscellaneous grouping settings of RadGrid control</summary>
        </member>
        <member name="M:Telerik.WebControls.GridGroupingSettings.#ctor(System.Web.UI.StateBag)">
            <summary>For internal usage only</summary>
        </member>
        <member name="P:Telerik.WebControls.GridGroupingSettings.GroupContinuesFormatString">
            <summary>
            The group header message, indicating that the group continues on the next
            page.
            </summary>
            <seealso cref="!:grdLocalizingTootips.html" cat="RadGrid Manual">Localizing the grid messages</seealso>
            <remarks>
            Localizing the grid messages topic lists all the tooltips and text messages which
            can be modified.
            </remarks>
            <example>
            	<pre>
            &lt;GroupingSettings GroupContinuesFormatString="The group continues on the next page." /&gt;
                </pre>
            </example>
        </member>
        <member name="P:Telerik.WebControls.GridGroupingSettings.GroupContinuedFormatString">
            <summary>
            The group header message indicating that this group continues from the previous
            page.
            </summary>
            <seealso cref="!:grdLocalizingTootips.html" cat="RadGrid Manual">Localizing the grid messages</seealso> 
            <remarks>
            Localizing the grid messages topic lists all the tooltips and text messages which
            can be modified.
            </remarks>
            <example>
            	<pre>
            &lt;GroupingSettings GroupContinuedFormatString="This group continues from the previous page." /&gt;
                </pre>
            </example>
        </member>
        <member name="P:Telerik.WebControls.GridGroupingSettings.GroupSplitDisplayFormat">
            <summary>
            A part of the string that formats the information label that appears on each
            group header of a group that is split onto several pages parameter {0} will be replaced
            with the number of actual items displayed on the page parameter {1} will be replaced
            with the number of all items in the group
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridGroupingSettings.GroupSplitFormat">
            <summary>
            Gets or sets the format string that will be used when group is split, containing
            the <strong>GroupSplitDisplayFormat</strong> or
            <strong>GroupContinuedFormatString</strong> and
            <strong>GroupContinuesFormatString</strong> or the three together.
            </summary>
            <value>This property defaults to "({0})"</value>
        </member>
        <member name="P:Telerik.WebControls.GridGroupingSettings.GroupByFieldsSeparator">
            <summary>
            String that separates each group-by field when displayed in
            <strong>GridGroupHeaderItems</strong>.
            </summary>
            <value>This property default to ";"</value>
        </member>
        <member name="P:Telerik.WebControls.GridGroupingSettings.CaseSensitive">
            <summary>
            Gets or sets a value indicating whether the grouping operations will be case
            sensitive or not.
            </summary>
            <value>
            	<strong>true</strong> if grouping is case sensitive, otherwise
            <strong>false</strong>. The default value is <strong>true</strong>.
            </value>
        </member>
        <member name="P:Telerik.WebControls.GridGroupingSettings.ExpandTooltip">
            <summary>
            Gets or sets a string that will be displayed when the group expand image is
            hovered.
            </summary>
            <seealso cref="!:grdLocalizingTootips.html" cat="RadGrid Manual">Localizing the grid messages</seealso>
            <remarks>
            Localizing the grid messages topic lists all the tooltips and text messages which
            can be modified.
            </remarks>
            <example>
            	<pre>
              &lt;GroupingSettings ExpandTooltip="Click here to expand the group!" /&gt;
            </pre>
            </example>
        </member>
        <member name="P:Telerik.WebControls.GridGroupingSettings.CollapseTooltip">
            <summary>
            Gets or sets a string that will be displayed when the group collapse image is
            hovered.
            </summary>
            <seealso cref="!:grdLocalizingTootips.html" cat="RadGrid Manual">Localizing the grid messages</seealso>
            <remarks>
            Localizing the grid messages topic lists all the tooltips and text messages which
            can be modified.
            </remarks>
            <example>
            	<pre>
              &lt;GroupingSettings ExpandTooltip="Click here to collapse the group!" /&gt;
                </pre>
            </example>
        </member>
        <member name="P:Telerik.WebControls.GridGroupingSettings.UnGroupTooltip">
            <summary>
            Gets or sets a string that will be displayed when a group panel item is
            hovered.
            </summary>
            <seealso cref="!:grdLocalizingTootips.html" cat="RadGrid Manual">Localizing the grid messages</seealso>
            <remarks>
            Localizing the grid messages topic lists all the tooltips and text messages which
            can be modified.
            </remarks>
            <example>
            	<pre>
                &lt;rad:RadGrid&gt;<br/>        ..<br/>        &lt;GroupingSettings UnGroupTooltip="Wanna ungroup? Drag me back!" /&gt;<br/>    &lt;/rad:RadGrid&gt;
                </pre>
            </example>
        </member>
        <member name="T:Telerik.WebControls.GridGroupsChangingEventArgs">
            <summary>
            Holds properties specific for grouping mechanism such as performed action and
            reference to GridTableView where the action was performed.
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridGroupsChangingEventArgs.Action">
            <summary>
                Gets a reference to <see cref="T:Telerik.WebControls.GridGroupsChangingAction"/> enumeration, which
                holds information about what action did fire the
                <see cref="E:Telerik.WebControls.RadGrid.GroupsChanging"/> event.
            </summary>
            <example>
            	<para>protected void RadGrid1_GroupsChanging(object source,
                Telerik.WebControls.GridGroupsChangingEventArgs e)<br/>
                {<br/>
                if (e.Action == GridGroupsChangingAction.Group)</para>
            	<para>{ ... }</para>
            </example>
        </member>
        <member name="P:Telerik.WebControls.GridGroupsChangingEventArgs.TableView">
            <summary>
            Gets a reference to the <strong>GridTableView</strong> object where the grouping
            is performed.
            </summary>
            <value>a reference to <strong>GridTableView</strong> object.</value>
        </member>
        <member name="P:Telerik.WebControls.GridGroupsChangingEventArgs.Expression">
            <summary>
                Gets or sets the <see cref="T:Telerik.WebControls.GridGroupByExpression"/> that will be used for
                grouping Telerik RadGrid.
            </summary>
            <example>
            	<code lang="CS" title="CS">
            protected void RadGrid1_GroupsChanging(object source, Telerik.WebControls.GridGroupsChangingEventArgs e) 
            {  
              if (e.Action == GridGroupsChangingAction.Group) 
              { 
               GridGroupByField countryGroupField = new GridGroupByField(); 
               countryGroupField.FieldName = "Country"; 
               GridGroupByField cityGroupField = new GridGroupByField(); 
               cityGroupField.FieldName = "City"; 
              
               e.Expression.SelectFields.Clear(); 
               e.Expression.SelectFields.Add(countryGroupField); 
               e.Expression.SelectFields.Add(cityGroupField); 
               
               e.Expression.GroupByFields.Clear(); 
               e.Expression.GroupByFields.Add(countryGroupField); 
               e.Expression.GroupByFields.Add(cityGroupField); 
               ...
              }
            }
                </code>
            	<code lang="VB" title="VB">
            Protected Sub RadGrid1_GroupsChanging(ByVal source As Object, ByVal e As Telerik.WebControls.GridGroupsChangingEventArgs)
             'Expression is added (by drag/grop on group panel)
              If (e.Action = GridGroupsChangingAction.Group) Then
               Dim countryGroupField As GridGroupByField = New GridGroupByField
               countryGroupField.FieldName = "Country"
               Dim cityGroupField As GridGroupByField = New GridGroupByField
               cityGroupField.FieldName = "City"
               e.Expression.SelectFields.Clear
               e.Expression.SelectFields.Add(countryGroupField)
               e.Expression.SelectFields.Add(cityGroupField)
               e.Expression.GroupByFields.Clear
               e.Expression.GroupByFields.Add(countryGroupField)
               e.Expression.GroupByFields.Add(cityGroupField)
              End If
            End Sub
                </code>
            </example>
        </member>
        <member name="P:Telerik.WebControls.GridGroupsChangingEventArgs.SortedField">
            <summary>Gets a reference to the currently used <see cref="T:Telerik.WebControls.GridGroupByField"/>.</summary>
        </member>
        <member name="P:Telerik.WebControls.GridGroupsChangingEventArgs.Canceled">
            <summary>
                Gets or sets a value indicating whether <see cref="E:Telerik.WebControls.RadGrid.GroupsChanging"/>
                event will be canceled.
            </summary>
            <value>
            	<strong>true</strong>, if the event is canceled, otherwise
            <strong>false</strong>.
            </value>
        </member>
        <member name="T:Telerik.WebControls.GridHierarchySettings">
            <summary>
            Container of misc. grouping settings of RadGrid control
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridHierarchySettings.ExpandTooltip">
            <summary>
            Gets or sets a string that represents the tooltip that will be shown when the
            expand image is hovered.
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridHierarchySettings.CollapseTooltip">
            <summary>
            Gets or sets a string that represents the tooltip that will be shown when the
            collapse image is hovered.
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridHierarchySettings.SelfExpandTooltip">
            <summary>
            Gets or sets a string that represents the tooltip that will be shown when the
            self-hierarchy expand image is hovered.
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridHierarchySettings.SelfCollapseTooltip">
            <summary>
            Gets or sets a string that represents the tooltip that will be shown when the
            self-hierarchy collapse image is hovered.
            </summary>
        </member>
        <member name="T:Telerik.WebControls.GridIndexCollection">
            <summary>
            This is a collection of item indexes - each item index is unique within the
            collection
            </summary>
        </member>
        <member name="M:Telerik.WebControls.GridIndexCollection.Add(System.Int32[])">
            <summary>
            Constructs and add item hierarchical index to the collection
            of indexes.
            </summary>
            <remarks>
            The hierarchical-index is based on sequential numbers of
            indxes of items and detail tables. For example
            index Add(1) will construct the hierarchicalindex for Item 1 in MasterTableView.
            Add(1, 0, 2) references to the item with index 2 that belongs to a child table 0 of
            the item 1 in MastertableView.
            </remarks>
            <param name="indexes"></param>
        </member>
        <member name="T:Telerik.WebControls.GridItemDecorator">
            <summary>
            Summary description for GridItemDecorator.
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridItemEventArgs.EventInfo">
            <summary>
            Event info object. Cast to derrived classes to obtain the appropriate instance
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridItemEventArgs.Canceled">
            <summary>
            Set to true to cancel the default event execution, if available. The ItemCreated and ItemDataBound events cannot be cancelled.
            </summary>
        </member>
        <member name="T:Telerik.WebControls.GridPagerMode">
            <summary>
            The mode of the pager defines what buttons will be displayed and how the pager
            will navigate through the pages.
            </summary>
        </member>
        <member name="F:Telerik.WebControls.GridPagerMode.NextPrev">
            <summary>The grid Pager will display only the Previous and Next link buttons.</summary>
        </member>
        <member name="F:Telerik.WebControls.GridPagerMode.NumericPages">
            <summary>The grid Pager will display only the page numbers as link buttons.</summary>
        </member>
        <member name="F:Telerik.WebControls.GridPagerMode.NextPrevAndNumeric">
            <summary>
            The grid Pager will display the Previous button, then the page numbers and then
            the Next button.
            </summary>
        </member>
        <member name="F:Telerik.WebControls.GridPagerMode.NextPrevNumericAndAdvanced">
            <summary>
            The grid Pager will display the Previous button, then the page numbers and then
            the Next button. On the next Pager row, the Pager will display text boxes for
            navigating to a specific page and setting the Page size (number of items per
            page).
            </summary>
        </member>
        <member name="F:Telerik.WebControls.GridPagerMode.Advanced">
            <summary>
            The grid Pager will display text boxes for navigating to a specific page and
            setting the Page size (number of items per page).
            </summary>
        </member>
        <member name="F:Telerik.WebControls.GridPagerMode.Slider">
            <summary>
            The grid Pager will display a slider for very fast and AJAX-based navigation
            through grid pages.
            </summary>
        </member>
        <member name="T:Telerik.WebControls.GridPagerPosition">
            <summary>This enumeration defines the possible positions of the pager item</summary>
        </member>
        <member name="F:Telerik.WebControls.GridPagerPosition.Bottom">
            <summary>
            The Pager item will be displayed on the bottom of the grid. (Default
            value)
            </summary>
        </member>
        <member name="F:Telerik.WebControls.GridPagerPosition.Top">
            <summary>The Pager item will be displayed on the top of the grid.</summary>
        </member>
        <member name="F:Telerik.WebControls.GridPagerPosition.TopAndBottom">
            <summary>
            The Pager item will be displayed both on the bottom and on the top of the
            grid.
            </summary>
        </member>
        <member name="T:Telerik.WebControls.GridPagerStyle">
            <summary>
            RadGrid and GridTableView use instance of this class to set style of thir PagerItem-s when rendering
            </summary>
        </member>
        <member name="T:Telerik.WebControls.GridTableItemStyle">
            <summary>
            Summary description for GridTableItemStyle.
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridTableItemStyle.IsDefault">
            <summary>
            Returns 'True' if none of the properties have been set
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridPagerStyle.IsDefault">
            <value>Returns <strong>true</strong> if none of the properties have been set.</value>
            <summary>
            Gets a value indicating whether the default pager will be used, i.e. no
            customizations have been made.
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridPagerStyle.IsPagerOnBottom">
            <summary>
            Gets a value indicating whether the pager is displayed on the bottom of the
            grid.
            </summary>
            <value>
            Returns <strong>true</strong> if the pager will be displayed on the bottom of the
            grid. Otherwise <strong>false</strong>.
            </value>
        </member>
        <member name="P:Telerik.WebControls.GridPagerStyle.IsPagerOnTop">
            <summary>
            Gets a value indicating whether the pager is displayed on the top of the
            grid.
            </summary>
            <value>
            Returns <strong>true</strong> if the pager will be displayed on the top of the
            grid. Otherwise <strong>false</strong>.
            </value>
        </member>
        <member name="P:Telerik.WebControls.GridPagerStyle.Mode">
            <summary>
            Gets or sets the mode of Telerik RadGrid Pager. The mode defines what
            the pager will contain. This property accepts as values only members of the
            <a href="RadGridNet2~Telerik.WebControls.GridPagerMode.html">GridPagerMode
            Enumeration</a>.
            </summary>
            <value>
            Returns the pager mode as one of the values of the
            <a href="RadGridNet2~Telerik.WebControls.GridPagerMode.html">GridPagerMode
            Enumeration</a>.
            </value>
            <remarks>
                You should have Paging enabled by setting the <see cref="P:Telerik.WebControls.RadGrid.PageSize"/>
                property.
            </remarks>
        </member>
        <member name="P:Telerik.WebControls.GridPagerStyle.NextPageText">
            <summary>
            Text that would appear if Mode is PrevNext for 'next' page button
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridPagerStyle.NextPageToolTip">
            <summary>
            ToolTip that would appear if Mode is PrevNext for 'next' page button
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridPagerStyle.PrevPageToolTip">
            <summary>
            ToolTip that would appear if Mode is PrevNext for 'prev' page button
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridPagerStyle.NextPagesToolTip">
            <summary>
            ToolTip that would appear if Mode is PrevNext for 'next' page button
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridPagerStyle.PrevPagesToolTip">
            <summary>
            ToolTip that would appear if Mode is PrevNext for 'prev' page button
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridPagerStyle.PageButtonCount">
            <summary>
                Gets or sets the number of buttons that would be rendered if pager Mode is
                <see cref="F:Telerik.WebControls.GridPagerMode.NumericPages"/>
            </summary>
            <value>
            returns the number of button that will be displayed. The default value is 10
            buttons.
            </value>
            <remarks>
            By default 10 buttons will be displayed. If the number of grid pages is greater
            than 10, ellipsis will be displayed.
            </remarks>
        </member>
        <member name="P:Telerik.WebControls.GridPagerStyle.Position">
            <summary>
            Gets or sets the Position of pager item(s).Accepts only values, members of the
            <a href="RadGridNet2~Telerik.WebControls.GridPagerPosition.html">GridPagerPosition
            Enumeration</a>.
            </summary>
            <value>
            Returns the Pager position as a value, member of the
            <a href="RadGridNet2~Telerik.WebControls.GridPagerPosition.html">GridPagerPosition
            Enumeration</a>.
            </value>
        </member>
        <member name="P:Telerik.WebControls.GridPagerStyle.PrevPageText">
            <summary>
            Text that would appear if Mode is PrevNext for 'previous' page button
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridPagerStyle.Visible">
            <summary>Gets or sets the visibility of the pager item</summary>
        </member>
        <member name="P:Telerik.WebControls.GridPagerStyle.AlwaysVisible">
            <remarks>
            In order to display the grid pager regardless of the number of records returned
            and the page size, you should set this property of the corresponding GridTableView to
            <strong>true</strong>. Its default value is <strong>false</strong>.
            </remarks>
            <summary>
            Gets or set a value indicating whether the Pager will be visible regardless of
            the number of items. (See the remarks)
            </summary>
            <value>
            	<strong>true</strong>, if pager will be displayed, regardless of the number of
            grid items, othewise <strong>false</strong>. By fefault it is
            <strong>false</strong>.
            </value>
        </member>
        <member name="P:Telerik.WebControls.GridPagerStyle.EnableSEOPaging">
            <summary>
            Get or set a value indicating whether the SEO (Search Engine Optimized) paging
            enabled
            </summary>
            <isnew>December 15, 2006</isnew>
        </member>
        <member name="P:Telerik.WebControls.GridPagerStyle.HorizontalAlign">
            <summary>
                Gets or sets the horizontal align of the pager. Accepts as values members of the
                <see cref="P:Telerik.WebControls.GridPagerStyle.HorizontalAlign"/> enumeration.
            </summary>
            <value>
                the horizontal align of the pager as a value from the
                <see cref="P:Telerik.WebControls.GridPagerStyle.HorizontalAlign"/> enumeration.
            </value>
        </member>
        <member name="P:Telerik.WebControls.GridPagerStyle.ShowPagerText">
            <summary>
            Gets or sets a value indicating whether the pager text or only the pager buttons
            will be displayed.
            </summary>
            <value>
            	<strong>true</strong> if both pager text and buttons will be displayed, otherwise
            <strong>false</strong>. By default it is <strong>true</strong>.
            </value>
        </member>
        <member name="P:Telerik.WebControls.GridPagerStyle.PagerTextFormat">
            <summary>
            The string used to format the description text that appears in a pager item. See
            the remarks.
            </summary>
            <remarks>
            The parameters {0) - {4} are mandatory.<br/>
            	<br/>
            Parameter {0} is used to display current page number.<br/>
            Parameter {1} is total number of pages.<br/>
            Parameter {2} will be replaced with the number of the first item in the current
            page.<br/>
            Parameter {3} will be set to the number of the last item in the current page.<br/>
            Parameter {4} indicates where pager buttons would appear.<br/>
            Parameter {5} corresponds to number of all items in the datasource.
            </remarks>
            <value>
            The default value is:<br/>
            	<font face="Courier New">Change page: {4} | Displaying page {0} of {1}, items {2}
            <font color="black"><font class="keyword">to</font> {3} of {5}</font></font>
            </value>
        </member>
        <member name="T:Telerik.WebControls.GridPagingManager">
            <summary>
            Summary description for GridPagingManager.
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridPagingManager.DataSourceCount">
            <summary>
            Number of items in the data-source
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridPagingManager.Count">
            <summary>
            Number of items in the current page
            </summary>
        </member>
        <member name="T:Telerik.WebControls.GridPaperSize">
            <summary>
            Represents the paper size used when exporting to PDF.
            </summary>
        </member>
        <member name="T:Telerik.WebControls.GridPdfSettings">
            <summary>
            Container of misc. grouping settings of RadGrid control
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridPdfSettings.PaperSize">
            <summary>
            Gets or sets the physical paper size that RadGrid will use when exporting to PDF.
            </summary>
            <remarks>
            It will be overriden by setting PageWidth and PageHeight explicitly.
            </remarks>
        </member>
        <member name="P:Telerik.WebControls.GridPdfSettings.PageWidth">
            <summary>
            Gets or sets the page width that RadGrid will use when exporting to PDF.
            </summary>
            <remarks>
            This setting will override any predefined value that comes from the PaperSize property.
            </remarks>
        </member>
        <member name="P:Telerik.WebControls.GridPdfSettings.PageHeight">
            <summary>
            Gets or sets the page height that RadGrid will use when exporting to PDF.
            </summary>
            <remarks>
            This setting will override any predefined value that comes from the PaperSize property.
            </remarks>
        </member>
        <member name="P:Telerik.WebControls.GridPdfSettings.FontType">
            <summary>
            	<para class="">This property describes the different types of font embedding: Link,
                Embed and Subset.</para>
            </summary>
            <remarks>
                Possible values: 
                <list type="bullet">
            		<item>
            			<div class="">
            				<strong>Link</strong><br/>
                            The font program is referenced by name in the rendered PDF. Anyone who
                            views a rendered PDF with a linked font program must have that font
                            installed on their computer otherwise it will not display correctly.
                        </div>
            		</item>
            		<item>
            			<div class="">
            				<strong>Embed</strong><br/>
                            The entire font program is embedded in the rendered PDF. Embedding the
                            entire font program guarantees the PDF will display as intended by the
                            author on all computers, however this method does possess several
                            disadvantages:
                        </div>
            			<ol>
            				<li>
            					<div class="">
                                    Font programs can be extremely large and will significantly
                                    increase the size of the rendered PDF. For example, the MS
                                    Gothic TrueType collection is 8MB!
                                </div>
            				</li>
            				<li>
            					<div class="">
                                    Certain font programs cannot be embedded due to license
                                    restrictions. If you attempt to embed a font program that
                                    disallows embedding, RadGrid will substitute the font with a
                                    base 14 font and generate a warning message.
                                </div>
            				</li>
            			</ol>
            		</item>
            		<item>
            			<div class="">
            				<strong>Subset (default value)<br/></strong>Subsetting a font will
                            generate a new font that is embedded in the rendered PDF that contains
                            only the chars referenced by RadGrid. For example, if a particular
                            RadGrid utilised the Verdana font referencing only the character 'A', a
                            subsetted font would be generated at run-time containing only the
                            information necessary to render the character 'A'.<br/>
            				<br/>
                            Subsetting provides the benefits of embedding and significantly reduces
                            the size of the font program. However, small processing overhead is
                            incurred to generated the subsetted font.
                        </div>
            		</item>
            	</list>
            </remarks>
        </member>
        <member name="T:Telerik.WebControls.GridPropertyEvaluator">
            <summary>
            GridPropertyEvaluator
            A DataBinder.Eval() workalike that is a bit more forgiving and does not throw exceptions when it can't find a property.
            </summary>
        </member>
        <member name="T:Telerik.WebControls.GridResizing">
            <summary>
            Summary description for GridResizing.
            </summary>
        </member>
        <member name="T:Telerik.WebControls.GridScrolling">
            <summary>
            Contains properties related to customizing the settings for scrolling operation
            in Telerik RadGrid.
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridScrolling.AllowScroll">
            <summary>
            Gets or sets a value indicating whether scrolling will be enabled in
            Telerik RadGrid.
            </summary>
            <value>true, if scrolling is enabled, otherwise false (the default value).</value>
        </member>
        <member name="P:Telerik.WebControls.GridScrolling.ScrollHeight">
            <summary>
            Gets or sets a value specifying the grid height in pixels (px) beyond which the
            scrolling will be enabled.
            </summary>
            <value>the default value is 300px</value>
        </member>
        <member name="P:Telerik.WebControls.GridScrolling.UseStaticHeaders">
            <summary>
            Gets or sets a value indicating whether grid column headers will scroll as the
            rest of the grid items or will remain static (MS Excel ® style).
            </summary>
            <value>
            	<strong>true</strong> if headers remain static on scroll, otherwise
            <strong>false</strong> (the default value).
            </value>
            <remarks>
                This property is meaningful only when used in conjunction with
                <see cref="P:Telerik.WebControls.GridScrolling.AllowScroll"/> set to <strong>true</strong>.
            </remarks>
        </member>
        <member name="P:Telerik.WebControls.GridScrolling.SaveScrollPosition">
            <summary>
            Gets or sets a value indicating whether Telerik RadGrid will keep the
            scroll position during postbacks.
            </summary>
            <remarks>
                This property is meaningful only when used in conjunction with
                <see cref="P:Telerik.WebControls.GridScrolling.AllowScroll"/> set to <strong>true</strong>.
            </remarks>
            <value>
            	<strong>true</strong> (the default value), if Telerik RadGrid keeps
            the scroll position on postback, otherwise <strong>false</strong> .
            </value>
        </member>
        <member name="P:Telerik.WebControls.GridScrolling.EnableAJAXScrollPaging">
            <remarks>
            	<para>This property is particularly useful when working with huge datasets. Using
                the grid scrollbar, you can change the grid pages just like in Microsoft
                Word<font size="1">®.</font> When scrolling with the virtual scrollbar,
                Telerik RadGrid uses AJAX requests to change the pages, i.e. no
                Postbacks are performed. The overall behavior is smooth and with no flicker.</para>
            	<para>Note that you should have AJAX enabled for Telerik RadGrid by
                setting the <strong>EnableAJAX</strong>="<strong>True</strong>".</para>
            </remarks>
            <summary>
            Gets or sets a value indicating whether Telerik RadGrid will change
            the pages when you scroll using the grid scroller. This in terms of
            Telerik RadGrid is called Virtual Scrolling.
            </summary>
            <value>
            	<strong>true</strong>, if virtual scrolling is enabled, otherwise
            <strong>false</strong> (the default value).
            </value>
        </member>
        <member name="T:Telerik.WebControls.GridSelecting">
            <summary>
            Provides properties related to setting the client-side selection in
            Telerik RadGrid.
            </summary>
            <remarks>
                You can get a reference to this class using
                <see cref="P:Telerik.WebControls.GridClientSettings.Selecting"/> property.
            </remarks>
        </member>
        <member name="P:Telerik.WebControls.GridSelecting.AllowCellSelect">
            <summary>not currently available</summary>
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.WebControls.GridSelecting.AllowMultiCellSelect">
            <summary>not currently available</summary>
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.WebControls.GridSelecting.AllowRowSelect">
            <summary>
            Gets or sets a value indicating whether you will be able to select a grid row on
            the client by clicking on it with the mouse.
            </summary>
            <value>
            true, if you will be able to select a row on the client, otherwise false (the
            default value).
            </value>
        </member>
        <member name="P:Telerik.WebControls.GridSelecting.AllowColumnSelect">
            <summary>not currently available</summary>
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.WebControls.GridSelecting.AllowMultiColumnSelect">
            <summary>not currently available</summary>
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.WebControls.GridSelecting.EnableDragToSelectRows">
            <summary>
            Gets or sets a value indicating whether you will be able to select multiple rows
            by dragging a rectangle around them with the mouse.
            </summary>
            <value>
            true, if you can select rows by dragging a rectangle with the mouse, otherwise
            false (the default value)
            </value>
        </member>
        <member name="T:Telerik.WebControls.GridSelfHierarchySettings">
            <summary>
            Holds the column names presenting the self-referencing relations in the source
            table.
            </summary>
            <example>
            &lt;MasterTableView HierarchyDefaultExpanded="true" HierarchyLoadMode="Client"
            EnableNoRecordsTemplate="false"<br/>
            DataKeyNames= "ID,ParentID" Width="100%"&gt;<br/>
            	<font color="red">&lt;SelfHierarchySettings ParentKeyName="ParentID" KeyName="ID"
            /&gt;</font><br/>
            &lt;/MasterTableView&gt;
            </example>
            <remarks>Meaningful in cases of self-referenced grid.</remarks>
        </member>
        <member name="M:Telerik.WebControls.GridSelfHierarchySettings.IsSet">
            <remarks>This method is for Telerik RadGrid internal usage.</remarks>
            <summary>
            Checks if a self-hierarchy settings property value was changed and differs from its
            default.
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridSelfHierarchySettings.ParentKeyName">
            <summary>
            Gets or sets a value representing the parent ID field when building the
            self-referencing hierarchy.
            </summary>
            <remarks>
            The value property must be included in the <strong>DataKeyNames</strong> array
            for the <strong>MasterTableView</strong>.
            </remarks>
            <value>
            	<strong>string</strong>, representing the parent ID of the current table
            level.
            </value>
            <example>
            	<list type="termdef">
            		<item>
            			<description>
            				<pre>
            &lt;rad:RadGrid ID="RadGrid1" EnableAJAX="True" ShowHeader="true" runat="server" Skin="None"<br/>                        Width= "97%" GridLines="None" OnColumnCreated="RadGrid1_ColumnCreated"<br/>                        OnItemCreated="RadGrid1_ItemCreated"<br/>                        OnNeedDataSource= "RadGrid1_NeedDataSource"&gt;<br/>                        &lt;MasterTableView HierarchyDefaultExpanded="true" HierarchyLoadMode="Client" EnableNoRecordsTemplate="false"<br/>
            					<strong><u>DataKeyNames= "ID,ParentID"</u></strong> Width="100%"&gt;<br/>                            &lt;SelfHierarchySettings <strong><u>ParentKeyName="ParentID"</u></strong> KeyName="ID" /&gt;<br/>                        &lt;/MasterTableView&gt;<br/>                        &lt;ClientSettings AllowExpandCollapse="true" /&gt;
            &lt;/rad:RadGrid&gt;
            </pre>
            			</description>
            		</item>
            	</list>
            </example>
        </member>
        <member name="P:Telerik.WebControls.GridSelfHierarchySettings.KeyName">
            <summary>
            Gets or sets a value, representing the ID of the current table level in
            self-referencing hierarchy structure.
            </summary>
            <value><strong>string</strong>, representing the current table level.</value>
            <remarks>
            The value property must be included in the <strong>DataKeyNames</strong> array
            for the <strong>MasterTableView</strong>.
            </remarks>
            <example>
            	<list type="termdef">
            		<item>
            			<term>
            				<pre>
            &lt;rad:RadGrid ID="RadGrid1" EnableAJAX="True" ShowHeader="true" runat="server" Skin="None"<br/>                        Width= "97%" GridLines="None" OnColumnCreated="RadGrid1_ColumnCreated"<br/>                        OnItemCreated="RadGrid1_ItemCreated"<br/>                        OnNeedDataSource= "RadGrid1_NeedDataSource"&gt;<br/>                        &lt;MasterTableView HierarchyDefaultExpanded="true" HierarchyLoadMode="Client" EnableNoRecordsTemplate="false"<br/>
            					<strong><u>DataKeyNames= "ID,ParentID"</u></strong> Width="100%"&gt;<br/>                            &lt;SelfHierarchySettings ParentKeyName="ParentID" <strong><u>KeyName="ID"</u></strong> /&gt;<br/>                        &lt;/MasterTableView&gt;<br/>                        &lt;ClientSettings AllowExpandCollapse="true" /&gt;
            </pre>
            			</term>
            		</item>
            		<item>
            			<term>
            				<pre>
            &lt;/rad:RadGrid&gt;
            </pre>
            			</term>
            		</item>
            	</list>
            </example>
        </member>
        <member name="P:Telerik.WebControls.GridSelfHierarchySettings.MaximumDepth">
            <remarks>
            This property can be set <strong>only once</strong> when the grid is initialized
            and can not be modified.
            </remarks>
            <summary>
            Gets or sets a value indicating the level-depth limit of the nested
            tables.
            </summary>
            <value>
            	<strong>integer</strong>, representing the depth limit in levels of nesting. By
            default the limit is <strong>10 levels</strong>.
            </value>
        </member>
        <member name="T:Telerik.WebControls.GridSortOrder">
            <summary>Enumeration representing the order of sorting data in RadGrid</summary>
        </member>
        <member name="F:Telerik.WebControls.GridSortOrder.Ascending">
            <summary>sorts grid data in ascending order</summary>
        </member>
        <member name="F:Telerik.WebControls.GridSortOrder.Descending">
            <summary>sorts grid data in descending order</summary>
        </member>
        <member name="F:Telerik.WebControls.GridSortOrder.None">
            <summary>do not sort the grid data</summary>
        </member>
        <member name="T:Telerik.WebControls.GridSortExpression">
            <summary>
            Class that is used to define sort field and sort order for RadGrid
            </summary>
        </member>
        <member name="M:Telerik.WebControls.GridSortExpression.#ctor">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.WebControls.GridSortExpression.SortOrderAsString">
            <summary>
            This method gives the string representation of the sorting order. It can be
            either "ASC" or "DESC"
            </summary>
        </member>
        <member name="M:Telerik.WebControls.GridSortExpression.SortOrderFromString(System.String)">
            <summary>
            Returns a GridSortOrder enumeration based on the string input. Takes either "ASC"
            or "DESC"
            </summary>
        </member>
        <member name="M:Telerik.WebControls.GridSortExpression.SortOrderAsString(Telerik.WebControls.GridSortOrder)">
            <summary>
            This method gives the string representation of the sorting order. It can be
            either "ASC" or "DESC"
            </summary>
        </member>
        <member name="M:Telerik.WebControls.GridSortExpression.Equals(System.Object)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.WebControls.GridSortExpression.GetHashCode">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.WebControls.GridSortExpression.SetSortOrder(System.String)">
            <summary>
            	<para>Sets the sort order.</para>
            	<para>The SortOrder paremeter should be either "Ascending", "Descending" or "None".</para>
            </summary>
        </member>
        <member name="M:Telerik.WebControls.GridSortExpression.ToString">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.WebControls.GridSortExpression.Parse(System.String)">
            <summary>
            Parses a string representation of the sort order and returns
            GirdSortExpression.
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridSortExpression.FieldName">
            <summary>Gets or sets the name of the field to which sorting is applied.</summary>
        </member>
        <member name="P:Telerik.WebControls.GridSortExpression.SortOrder">
            <summary>Sets or gets the current sorting order.</summary>
        </member>
        <member name="T:Telerik.WebControls.GridSortExpressionCollection">
            <summary>
            A collection of <see cref="T:Telerik.WebControls.GridSortExpression"/> objects. Depending on the value of
            <see cref="P:Telerik.WebControls.GridSortExpressionCollection.AllowMultiColumnSorting"/> it holds single
            or multiple sort expressions. 
            </summary>
        </member>
        <member name="M:Telerik.WebControls.GridSortExpressionCollection.#ctor">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.WebControls.GridSortExpressionCollection.#ctor(System.Collections.ArrayList)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.WebControls.GridSortExpressionCollection.CopyTo(System.Array,System.Int32)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.WebControls.GridSortExpressionCollection.CopyTo(Telerik.WebControls.GridSortExpressionCollection)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.WebControls.GridSortExpressionCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the
            <strong>GridSortExpressionCollection</strong>.
            </summary>
        </member>
        <member name="M:Telerik.WebControls.GridSortExpressionCollection.Add(System.Object)">
            <summary>Adds a <see cref="T:Telerik.WebControls.GridSortExpression"/> to the collection.</summary>
        </member>
        <member name="M:Telerik.WebControls.GridSortExpressionCollection.Clear">
            <summary>Clears the GridSortExpressionCollection of all items.</summary>
        </member>
        <member name="M:Telerik.WebControls.GridSortExpressionCollection.GetExpression(System.String)">
            <summary>
            Find a SortExpression in the collection if it contains any with sort field = expression
            </summary>
            <param name="expression">sort field</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WebControls.GridSortExpressionCollection.AddSortExpression(Telerik.WebControls.GridSortExpression)">
            <summary>
            If <see cref="P:Telerik.WebControls.GridSortExpressionCollection.AllowMultiColumnSorting"/> is true adds the sortExpression in the collection. 
            Else any other expression previously stored in the collection wioll be removed
            </summary>
            <param name="sortExpression"></param>
        </member>
        <member name="M:Telerik.WebControls.GridSortExpressionCollection.AddSortExpression(System.String)">
            <summary>
            If <see cref="P:Telerik.WebControls.GridSortExpressionCollection.AllowMultiColumnSorting"/> is true adds the sortExpression in the collection. 
            Else any other expression previously stored in the collection wioll be removed
            </summary>
            <param name="expression">String containing sort field and optionaly sort order (ASC or DESC)</param>
        </member>
        <member name="M:Telerik.WebControls.GridSortExpressionCollection.AddAt(System.Int32,Telerik.WebControls.GridSortExpression)">
            <summary>
                Adds a <see cref="T:Telerik.WebControls.GridSortExpression"/> to the collection at the specified
                index.
            </summary>
            <remarks>
                As a convenience feature, adding at an index greater than zero will set the
                <see cref="P:Telerik.WebControls.GridSortExpressionCollection.AllowMultiColumnSorting"/> to <strong>true</strong>.
            </remarks>
        </member>
        <member name="M:Telerik.WebControls.GridSortExpressionCollection.RemoveSortExpression(Telerik.WebControls.GridSortExpression)">
            <summary>Removes the specified <see cref="T:Telerik.WebControls.GridSortExpression"/> from the collection.</summary>
        </member>
        <member name="M:Telerik.WebControls.GridSortExpressionCollection.ContainsSortExpression(Telerik.WebControls.GridSortExpression)">
            <summary>
                Returns true or false depending on whether the specified sorting expression exists
                in the collection. Takes a <see cref="T:Telerik.WebControls.GridSortExpression"/> parameter.
            </summary>
        </member>
        <member name="M:Telerik.WebControls.GridSortExpressionCollection.ContainsExpression(System.String)">
            <summary>
            Returns true or false depending on whether the specified sorting expression
            exists in the collection. Takes a string parameter.
            </summary>
        </member>
        <member name="M:Telerik.WebControls.GridSortExpressionCollection.ChangeSortOrder(System.String)">
            <summary>
            Adds the sort field (expression parameter) if the collection does not alreqady contain the field. Else the sort order of the field will be inverted. The default change order is
            Asc -&gt; Desc -&gt; No Sort. The No-Sort state can be controlled using <see cref="P:Telerik.WebControls.GridSortExpressionCollection.AllowNaturalSort"/> property
            </summary>
            <param name="expression"></param>
        </member>
        <member name="M:Telerik.WebControls.GridSortExpressionCollection.GetSortString">
            <summary>
            Get a comma separated list of sort fields and sort-order, in the same format used by
            DataView.Sort string expression. Returns null (Nothing) if there are no sort expressions in the collection
            </summary>
            <returns>Comma separated list of sort fields and optionaly sort-order, null if there are no sort expressions in the collection</returns>
        </member>
        <member name="M:Telerik.WebControls.GridSortExpressionCollection.IndexOf(Telerik.WebControls.GridSortExpression)">
            <summary>
            Searches for the specified
            GridSortExpression and
            returns the zero-based index of the first occurrence within the entire
            <b>GridSortExpressionCollection</b>.
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridSortExpressionCollection.AllowMultiColumnSorting">
            <summary>
            If false, the collection can contain only one sort expression at a time.
            Trying to add a new one in this case will delete the existing expression
            or will change the sort order if its FiledName is the same.
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridSortExpressionCollection.Count">
            <summary>Returns the number of items in the GridSortExpressionCollection.</summary>
        </member>
        <member name="P:Telerik.WebControls.GridSortExpressionCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the GridSortExpressionCollection is
            synchronized (thread safe).
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridSortExpressionCollection.Item(System.Int32)">
            <summary>This is the default indexer of the collection - takes an integer value.</summary>
        </member>
        <member name="P:Telerik.WebControls.GridSortExpressionCollection.SyncRoot">
            <summary>
            	<a onclick="javascript:Track('ctl00_LibFrame_ctl07|ctl00_LibFrame_ctl14',this);" href="http://msdn2.microsoft.com/en-us/library/system.collections.arraylist.syncroot.aspx">
            	</a>
            	<table>
            		<tr>
            			<td>Gets an object that can be used to synchronize access to the
                        GirdSortExpressionCollection.</td>
            		</tr>
            	</table>
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridSortExpressionCollection.AllowNaturalSort">
            <summary>
            Allow the no-sort state when changing sort order.
            </summary>
        </member>
        <member name="T:Telerik.WebControls.GridSortingSettings">
            <summary>
            Holds miscellaneous properties related to sorting like the localization
            properties.
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridSortingSettings.SortToolTip">
            <summary>
            Gets or sets the tooltip that will be displayed when you hover the sorting button
            and there is no sorting applied.
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridSortingSettings.SortedAscToolTip">
            <summary>
            Gets or sets the tooltip that will be displayed when you hover the sorting button
            and the column is sorted ascending.
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridSortingSettings.SortedDescToolTip">
            <summary>
            Gets or sets the tooltip that will be displayed when you hover the sorting button
            and the column is sorted descending.
            </summary>
        </member>
        <member name="T:Telerik.WebControls.GridStateManager">
            <summary>
            State managemenet helper. This class is intended to be used only internally in RadGrid.
            </summary>
        </member>
        <member name="T:Telerik.WebControls.GridStatusBarItemSettings">
            <summary>This class holds settings related to the StatusBar item.</summary>
            <example>
            	<para><font color="blue" size="2">&lt;</font><font color="maroon" size="2">StatusBarSettings</font><font color="red" size="2">ReadyText</font><font color="blue" size="2">="Stand
                by"</font><font color="blue" size="2">/&gt;</font></para>
            </example>
            <isnew>November 26, 2006</isnew>
        </member>
        <member name="P:Telerik.WebControls.GridStatusBarItemSettings.StatusLabelID">
            <summary>Gets the ID of the Label that will display the status message.</summary>
        </member>
        <member name="P:Telerik.WebControls.GridStatusBarItemSettings.ReadyText">
            <summary>
            Gets or sets the text that will be displayed in
            <strong>GridStatusBarItem</strong> when Telerik RadGrid does not perform
            any operations.
            </summary>
            <value>the default value is "Ready"</value>
        </member>
        <member name="P:Telerik.WebControls.GridStatusBarItemSettings.LoadingText">
            <summary>
            Gets or sets the text that will be displayed in
            <strong>GridStatusBarItem</strong> when Telerik RadGrid is performing an
            AJAX request.
            </summary>
            <value>the default value is "Loading..."</value>
        </member>
        <member name="T:Telerik.WebControls.GridStringTokenizer">
            <summary>
            A String Tokenizer that accepts Strings as source and delimiter. Only 1 delimiter is supported (either String or char[]).
            </summary>
        </member>
        <member name="M:Telerik.WebControls.GridStringTokenizer.#ctor(System.String,System.String)">
            <summary>
            Constructor for StringTokenizer Class.
            </summary>
            <param name="source">The Source String.</param>
            <param name="delimiter">The Delimiter String. If a 0 length delimiter is given, " " (space) is used by default.</param>
        </member>
        <member name="M:Telerik.WebControls.GridStringTokenizer.#ctor(System.String,System.Char[])">
            <summary>
            Constructor for StringTokenizer Class.
            </summary>
            <param name="source">The Source String.</param>
            <param name="delimiter">The Delimiter String as a char[].  Note that this is converted into a single String and
            expects Unicode encoded chars.</param>
        </member>
        <member name="M:Telerik.WebControls.GridStringTokenizer.#ctor(System.String)">
            <summary>
            Constructor for StringTokenizer Class.  The default delimiter of " " (space) is used.
            </summary>
            <param name="source">The Source String.</param>
        </member>
        <member name="M:Telerik.WebControls.GridStringTokenizer.#ctor">
            <summary>
            Empty Constructor.  Will create an empty StringTokenizer with no source, no delimiter, and no tokens.
            If you want to use this StringTokenizer you will have to call the NewSource(string s) method.  You may
            optionally call the NewDelim(string d) or NewDelim(char[] d) methods if you don't with to use the default
            delimiter of " " (space).
            </summary>
        </member>
        <member name="M:Telerik.WebControls.GridStringTokenizer.NewSource(System.String)">
            <summary>
            Method to add or change this Instance's Source string.  The delimiter will
            remain the same (either default of " " (space) or whatever you constructed 
            this StringTokenizer with or added with NewDelim(string d) or NewDelim(char[] d) ).
            </summary>
            <param name="newSrc">The new Source String.</param>
        </member>
        <member name="M:Telerik.WebControls.GridStringTokenizer.NewDelim(System.String)">
            <summary>
            Method to add or change this Instance's Delimiter string.  The source string
            will remain the same (either empty if you used Empty Constructor, or the 
            previous value of source from the call to a parameterized constructor or
            NewSource(string s)).
            </summary>
            <param name="newDel">The new Delimiter String.</param>
        </member>
        <member name="M:Telerik.WebControls.GridStringTokenizer.NewDelim(System.Char[])">
            <summary>
            Method to add or change this Instance's Delimiter string.  The source string
            will remain the same (either empty if you used Empty Constructor, or the 
            previous value of source from the call to a parameterized constructor or
            NewSource(string s)).
            </summary>
            <param name="newDel">The new Delimiter as a char[].  Note that this is converted into a single String and
            expects Unicode encoded chars.</param>
        </member>
        <member name="M:Telerik.WebControls.GridStringTokenizer.CountTokens">
            <summary>
            Method to get the number of tokens in this StringTokenizer.
            </summary>
            <returns>The number of Tokens in the internal ArrayList.</returns>
        </member>
        <member name="M:Telerik.WebControls.GridStringTokenizer.HasMoreTokens">
            <summary>
            Method to probe for more tokens.
            </summary>
            <returns>true if there are more tokens; false otherwise.</returns>
        </member>
        <member name="M:Telerik.WebControls.GridStringTokenizer.NextToken">
            <summary>
            Method to get the next (string)token of this StringTokenizer.
            </summary>
            <returns>A string representing the next token; null if no tokens or no more tokens.</returns>
        </member>
        <member name="P:Telerik.WebControls.GridStringTokenizer.Source">
            <summary>
            Gets the Source string of this Stringtokenizer.
            </summary>
            <returns>A string representing the current Source.</returns>
        </member>
        <member name="P:Telerik.WebControls.GridStringTokenizer.Delim">
            <summary>
            Gets the Delimiter string of this StringTokenizer.
            </summary>
            <returns>A string representing the current Delimiter.</returns>
        </member>
        <member name="T:Telerik.WebControls.GridTableFrame">
            <summary>
            The frame attribute for a table specifies which sides of the frame surrounding
            the table will be visible.
            </summary>
        </member>
        <member name="F:Telerik.WebControls.GridTableFrame.Void">
            <summary>No sides.</summary>
        </member>
        <member name="F:Telerik.WebControls.GridTableFrame.Above">
            <summary>The top side only.</summary>
        </member>
        <member name="F:Telerik.WebControls.GridTableFrame.Below">
            <summary>The bottom side only.</summary>
        </member>
        <member name="F:Telerik.WebControls.GridTableFrame.HSides">
            <summary>The top and bottom sides only.</summary>
        </member>
        <member name="F:Telerik.WebControls.GridTableFrame.LHS">
            <summary>The left-hand side only.</summary>
        </member>
        <member name="F:Telerik.WebControls.GridTableFrame.RHS">
            <summary>The right-hand side only.</summary>
        </member>
        <member name="F:Telerik.WebControls.GridTableFrame.VSides">
            <summary>The right and left sides only.</summary>
        </member>
        <member name="F:Telerik.WebControls.GridTableFrame.Box">
            <summary>All four sides.</summary>
        </member>
        <member name="F:Telerik.WebControls.GridTableFrame.Border">
            <summary>All four sides</summary>
        </member>
        <member name="T:Telerik.WebControls.GridTableTextDirection">
            <summary>
            Specifies the two possible text directions. Related to
            Telerik RadGrid support for right-to-left languages.
            </summary>
        </member>
        <member name="F:Telerik.WebControls.GridTableTextDirection.LTR">
            <summary>Left-To-Right direction</summary>
        </member>
        <member name="F:Telerik.WebControls.GridTableTextDirection.RTL">
            <summary>Right-To-Left direction</summary>
        </member>
        <member name="T:Telerik.WebControls.GridChildLoadMode">
            <summary>
            Defines the possible modes for loading the child items when
            <strong>RadGrid</strong> displays hierarchy.
            </summary>
        </member>
        <member name="F:Telerik.WebControls.GridChildLoadMode.ServerBind">
            <summary>
            All child GridTableViews will be bound immediately when DataBind occurs for a parent GridTableView or RadGrid. 
            </summary>
        </member>
        <member name="F:Telerik.WebControls.GridChildLoadMode.ServerOnDemand">
            <seealso cref="P:Telerik.WebControls.GridItem.Expanded"/>
            <seealso cref="P:Telerik.WebControls.GridItem.Expanded"/>
            <seealso cref="P:Telerik.WebControls.GridItem.Expanded"/>
            <summary>
            DataBind of a child GridTableView would only take place when an item is Expanded  <seealso cref="P:Telerik.WebControls.GridItem.Expanded"/>. 
            This is the default value of <see cref="P:Telerik.WebControls.GridTableView.HierarchyLoadMode"/>
            </summary>
        </member>
        <member name="F:Telerik.WebControls.GridChildLoadMode.Client">
            <summary>
            	<para>This mode is similar to ServerBind, but items are expanded client-side, using
                JavaScript manipulations, instead of postback to the server.</para>
            	<para>
                    In order to use client-side hierarchy expand, you will need to set also
                    <see cref="!:RadGrid.ClientSettings.AllowExpandCollapse"/> to
                    <strong>true</strong>.
                </para>
            </summary>
        </member>
        <member name="T:Telerik.WebControls.GridGroupLoadMode">
            <summary>
            	<para>Specifies where the grouping will be handled. There are two options:</para>
            	<list type="bullet">
            		<item>Server-side - <strong>GridTableView.GroupLoadMode.Server</strong></item>
            		<item>Client-side -
            <strong>GridTableView.GroupLoadMode.Client</strong></item></list>
            </summary>
        </member>
        <member name="F:Telerik.WebControls.GridGroupLoadMode.Server">
            <summary>
            This is the default behavior. Groups are expanded after postback to the server
            for example: 
            <div class="LanguageSpecific" style="DISPLAY: block" name="Code_VB">
            		<table class="CodeContainerTable" cellspacing="0" cellpadding="0" border="0">
            			<tbody>
            				<tr>
            					<td nowrap="nowrap">
            						<code class="VB">
            &lt;MasterTableView GroupLoadMode=<font color="black"><font class="string">"Server"</font>&gt;</font>
            						</code></td></tr></tbody></table></div>
            </summary>
        </member>
        <member name="F:Telerik.WebControls.GridGroupLoadMode.Client">
            <summary>
            Groups will be expanded client-side and no postback will be performed.<br/>
            	<div class="LanguageSpecific" style="DISPLAY: block" name="Code_VB">
            		<table class="CodeContainerTable" cellspacing="0" cellpadding="0" border="0">
            			<tbody>
            				<tr>
            					<td nowrap="nowrap">
            						<code class="VB">
            &lt;MasterTableView GroupLoadMode=<font color="black"><font class="string">"Client"</font>&gt;</font>
            						</code></td></tr></tbody></table></div>
            and set the client setting <strong>AllowGroupExpandCollapse</strong> to
            <strong>true:</strong><br/>
            	<div class="LanguageSpecific" style="DISPLAY: block" name="Code_VB">
            		<table class="CodeContainerTable" cellspacing="0" cellpadding="0" border="0">
            			<tbody>
            				<tr>
            					<td nowrap="nowrap">
            						<code class="VB">
            &lt;ClientSettings AllowGroupExpandCollapse=<font color="black"><font class="string">"True"</font>&gt;</font>
            						</code></td></tr></tbody></table></div>
            </summary>
        </member>
        <member name="T:Telerik.WebControls.GridEditMode">
            <summary>
            	<para>To display the grid column editors inline when switching grid item in edit
                mode (see the screenshot below), you simply need to change the
                <strong>EditMode</strong> property to <strong>InPlace</strong>.</para>
            	<div class="LanguageSpecific" name="Code_VB">
            		<table class="CodeContainerTable" cellspacing="0" cellpadding="0" border="0">
            			<tbody>
            				<tr>
            					<td nowrap="nowrap">
            						<pre>
            							<code>
            &lt;rad:RadGrid id=<font class="string" color="black">"RadGrid1"</font> runat=<font class="string" color="black">"server"</font>&gt;<br/>&lt;MasterTableView AutoGenerateColumns=<font class="string" color="black">"True"</font> EditMode=<font color="black"><font class="string">"InPlace"</font> /&gt;<br/>&lt;/rad:RadGrid&gt;</font>
            							</code>
            						</pre>
            					</td>
            				</tr>
            			</tbody>
            		</table>
            	</div>
            	<para class=""><img alt="A row in edit mode" src="Images/grd_EditMode_markedup.png" border="0"/></para>
            	<para>To display the grid column editors in auto-generated form when switching grid
                item in edit mode (see the screenshot below), you simply need to change the
                MasterTableView <strong>EditMode</strong> property to
                <strong>EditForms</strong>.</para>
            	<div class="LanguageSpecific">
            		<table class="CodeContainerTable" cellspacing="0" cellpadding="0" border="0">
            			<tbody>
            				<tr>
            					<td nowrap="nowrap">
            						<pre>
            							<code>
            &lt;rad:RadGrid id=<font class="string" color="black">"RadGrid1"</font> runat=<font class="string" color="black">"server"</font>&gt;<br/>&lt;MasterTableView AutoGenerateColumns=<font class="string" color="black">"True"</font> EditMode=<font color="black"><font class="string">"EditForms"</font> /&gt;<br/>&lt;/rad:RadGrid&gt;</font>
            							</code>
            						</pre>
            					</td>
            				</tr>
            			</tbody>
            		</table>
            	</div><img alt="Edit in forms mode" src="images/grd_EditInForms_thumb.png" border="0"/>
            </summary>
        </member>
        <member name="F:Telerik.WebControls.GridEditMode.InPlace">
            <summary>
            Telerik RadGrid will display the column editors inline when switching
            grid item in edit mode
            </summary>
        </member>
        <member name="F:Telerik.WebControls.GridEditMode.EditForms">
            <summary>
            Telerik RadGrid will display the grid column editors in
            auto-generated form when switching grid item in edit mode
            </summary>
        </member>
        <member name="T:Telerik.WebControls.GridDataSourcePersistenceMode">
            <summary>
            Indicate where RadGrid would store its data
            </summary>
        </member>
        <member name="F:Telerik.WebControls.GridDataSourcePersistenceMode.NoPersistence">
            <summary>
            DataSource (or generated html tables) data will not be stored.
            RadGrid will fire NeedDataSource event and will bind after each postback
            </summary>
        </member>
        <member name="F:Telerik.WebControls.GridDataSourcePersistenceMode.ViewState">
            <summary>
            Default - RadGrid stores data in the view-state bag.
            </summary>
        </member>
        <member name="T:Telerik.WebControls.GridResetPageIndexAction">
            <summary>
                Discribe how <strong>RadGrid</strong> whould respond if the
                <see cref="!:CurrentPageIndex"/> is invalid when data-binding. See
                <see cref="P:Telerik.WebControls.GridTableView.CurrentResetPageIndexAction"/>
            </summary>
        </member>
        <member name="F:Telerik.WebControls.GridResetPageIndexAction.SetPageIndexToFirst">
            <summary>
            CurrentPageIndex would be set to 0
            </summary>
        </member>
        <member name="F:Telerik.WebControls.GridResetPageIndexAction.SetPageIndexToLast">
            <summary>
            CurrentPageIndex would be set to current page count - 1
            </summary>
        </member>
        <member name="F:Telerik.WebControls.GridResetPageIndexAction.ReportError">
            <summary>
            RadGrid would repord an InvalidOperationException.
            </summary>
        </member>
        <member name="T:Telerik.WebControls.GridCommandItemDisplay">
            <summary>
            Specifies the position of the <see cref="!:CommandItem"/> in
            Telerik RadGrid.
            </summary>
        </member>
        <member name="F:Telerik.WebControls.GridCommandItemDisplay.None">
            <summary>There will be no command item.</summary>
        </member>
        <member name="F:Telerik.WebControls.GridCommandItemDisplay.Top">
            <summary>The command item will be above the Telerik RadGrid</summary>
        </member>
        <member name="F:Telerik.WebControls.GridCommandItemDisplay.Bottom">
            <summary>The command item will be on the bottom of Telerik RadGrid</summary>
        </member>
        <member name="F:Telerik.WebControls.GridCommandItemDisplay.TopAndBottom">
            <summary>
            The command item will be both on the top and bottom of
            Telerik RadGrid.
            </summary>
        </member>
        <member name="T:Telerik.WebControls.GridTableView">
            <summary>Represents one table of data.</summary>
            <remarks>
            	<para>In case of flat grid structure, i.e. no hierarchy levels, this object is the
            <strong>MasterTableView</strong> itself.</para>
            	<para>In case of hierarchical structure, the topmost <strong>GridTableView</strong> is
            the <strong>MasterTableView</strong>. All inner (child) tables are refered as
            DetailTables. Each table that has children tables has a collection called
            <see cref="P:Telerik.WebControls.GridTableView.DetailTables"/> where you can access these tables.</para>
            </remarks>
        </member>
        <member name="P:Telerik.WebControls.GridTableViewBase.OwnerGrid">
            <summary>Gets the owner RadGrid object.</summary>
            <value>The owner RadGrid object.</value>
            <seealso cref="!:OwnerID">OwnerID Property</seealso>
        </member>
        <member name="F:Telerik.WebControls.GridTableView.filterItemStyle">
            <summary>Gets the rendering style of a FilterItem.</summary>
        </member>
        <member name="F:Telerik.WebControls.GridTableView.commandItemStyle">
            <summary>Gets the rendering style of a CommandItem.</summary>
        </member>
        <member name="M:Telerik.WebControls.GridTableView.#ctor(Telerik.WebControls.RadGrid)">
            <summary>
            Constructs a new <strong>GridTableView</strong> and sets as its owner the RadGrid
            object.
            </summary>
            <seealso cref="T:Telerik.WebControls.GridTableView">GridTableView Method</seealso>
            <seealso cref="T:Telerik.WebControls.GridTableView">GridTableView Method</seealso>
        </member>
        <member name="M:Telerik.WebControls.GridTableView.#ctor(Telerik.WebControls.RadGrid,System.Boolean)">
            <summary>
            Constructs a new <strong>GridTableView</strong> and sets as its owner the
            <strong>RadGrid</strong> object. Sets the <strong>IsTrackingViewState</strong> property
            to the corresponding value of the boolean parameter.
            </summary>
            <seealso cref="T:Telerik.WebControls.GridTableView">GridTableView Method</seealso>
            <seealso cref="T:Telerik.WebControls.GridTableView">GridTableView Method</seealso>
            <param name="OwnerGrid">The owner RadGrid object</param>
            <param name="IsTrackingViewState">
            Indicates whether <strong>RadGrid</strong> is saving changes to its view
            state.
            </param>
        </member>
        <member name="M:Telerik.WebControls.GridTableView.#ctor">
            <summary>
            Default contructor for <strong>GridTableView</strong> - generally used by Page
            serializer only.
            </summary>
            <seealso cref="T:Telerik.WebControls.GridTableView">GridTableView Method</seealso>
            <seealso cref="T:Telerik.WebControls.GridTableView">GridTableView Method</seealso>
        </member>
        <member name="M:Telerik.WebControls.GridTableView.SwapColumns(System.String,System.String)">
            <summary>
            Swaps columns appearance position using the unique names of the two
            columns.
            </summary>
            <seealso cref="M:Telerik.WebControls.GridTableView.SwapColumns(System.String,System.String)">SwapColumns Method</seealso>
            <param name="columnName1">first column unique name</param>
            <param name="columnName2">second column unique name</param>
        </member>
        <member name="M:Telerik.WebControls.GridTableView.SwapColumns(System.Int32,System.Int32)">
            <summary>Swaps columns appearance position using order indexes of the two columns.</summary>
            <remarks>
            You should have in mind that <strong>GridExpandColumn</strong> and
            <strong>RowIndicatorColumn</strong> are always in front of data columns so that's why
            you columns will start from index 2.
            </remarks>
            <seealso cref="M:Telerik.WebControls.GridTableView.SwapColumns(System.String,System.String)">SwapColumns Method</seealso>
            <param name="orderIndex1">first column order index</param>
            <param name="orderIndex2">second column order index</param>
        </member>
        <member name="M:Telerik.WebControls.GridTableView.ClearSelectedItems">
            <summary>
            Removes all selected items that belong to this <strong>GridTableView</strong>
            instance.
            </summary>
            <seealso cref="T:Telerik.WebControls.GridSelecting">GridSelecting Class</seealso>
            <seealso cref="M:Telerik.WebControls.GridTableView.ClearEditItems">ClearEditItems Method</seealso>
        </member>
        <member name="M:Telerik.WebControls.GridTableView.ClearEditItems">
            <summary>
            Removes all edit items that belong to the <strong>GridTableView</strong>
            instance.
            </summary>
            <seealso cref="T:Telerik.WebControls.GridEditFormItem">GridEditFormItem Class</seealso>
            <seealso cref="M:Telerik.WebControls.GridTableView.ClearSelectedItems">ClearSelectedItems Method</seealso>
        </member>
        <member name="M:Telerik.WebControls.GridTableView.Rebind">
            <summary>
                Forces the Owner <strong>RadGrid</strong> to fire
                <see cref="E:Telerik.WebControls.RadGrid.NeedDataSource"/> event then calls
                <see cref="M:Telerik.WebControls.GridTableView.DataBind"/>.
            </summary>
            <seealso cref="T:Telerik.WebControls.GridNeedDataSourceEventHandler">GridNeedDataSourceEventHandler Delegate</seealso>
            <seealso cref="M:Telerik.WebControls.GridTableView.DataBind">DataBind Method</seealso>
            <remarks>
            The <strong>Rebind</strong> method should be called every time a change to the
            <strong>RadGrid</strong> columns/items has been made.
            </remarks>
        </member>
        <member name="M:Telerik.WebControls.GridTableView.DataBind">
            <summary>Binds the data source to the <strong>RadGrid</strong> instance.</summary>
            <remarks>
                Call this member to bind partially <strong>RadGrid</strong>. Before calling this
                method the <see cref="P:Telerik.WebControls.GridTableView.DataSource"/> property should be assigned or you can use
                <see cref="M:Telerik.WebControls.GridTableView.Rebind"/> method instead. Use <see cref="M:Telerik.WebControls.RadGrid.DataBind"/>
                or <see cref="M:Telerik.WebControls.RadGrid.Rebind"/> member to bind all
                <strong>GridTableView</strong>s in <strong>RadGrid</strong>.
            </remarks>
            <seealso cref="P:Telerik.WebControls.GridTableView.DataSource">DataSource Property</seealso>
            <seealso cref="M:Telerik.WebControls.GridTableView.Rebind">Rebind Method</seealso>
        </member>
        <member name="M:Telerik.WebControls.GridTableView.ClearChildSelectedItems">
            <summary>For internal usage.</summary>
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.WebControls.GridTableView.ClearChildEditItems">
            <summary>For internal usage.</summary>
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.WebControls.GridTableView.CreateColumnSet(System.Boolean)">
            <exclude/>
            <excludetoc/>
            <summary>For internal usage.</summary>
        </member>
        <member name="M:Telerik.WebControls.GridTableView.CreateColumnSet">
            <summary><para>For Internal Usage</para></summary>
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.WebControls.GridTableView.GetColumn(System.String)">
            <summary>
            Returns a <see cref="T:Telerik.WebControls.GridColumn"/> based on its
            <see cref="P:Telerik.WebControls.GridColumn.UniqueName"/>.
            </summary>
            <returns>
            The <strong>GridColumn</strong> object related to the
            <em>columnUniqueName</em>.
            </returns>
            <seealso cref="T:Telerik.WebControls.GridColumn">GridColumn Class</seealso>
            <seealso cref="P:Telerik.WebControls.GridColumn.UniqueName">UniqueName Property (Telerik.WebControls.GridColumn)</seealso>
            <example>
            	<para>The following code snippet demonstrates how you to access a column at
                PreRender RadGrid event and make set it as invisible:</para>
            	<para>[ASPX/ASCX]</para>
            	<para>&lt;rad:radgrid id="RadGrid1" DataSourceID="AccessDataSource1"
                runat="server" OnPreRender="RadGrid1_PreRender"&gt;<br/>
                &lt;/rad:radgrid&gt;<br/>
                &lt;asp:AccessDataSource ID="AccessDataSource1"
                DataFile="~/Grid/Data/Access/Nwind.mdb"<br/>
                SelectCommand="SELECT CustomerID, CompanyName, ContactName FROM Customers"<br/>
                runat="server"&gt;<br/>
                &lt;/asp:AccessDataSource&gt;</para>
            	<code lang="CS" title="[New Example]">
            protected void RadGrid1_PreRender(object sender, System.EventArgs e)
            {
                 RadGrid1.MasterTableView.GetColumn( "CustomerID" ).Visible = false;            
            }
            </code>
            </example>
            <seealso cref="M:Telerik.WebControls.GridTableView.GetItems(Telerik.WebControls.GridItemType[])">GetItems Method</seealso>
            <param name="columnUniqueName">The <see cref="P:Telerik.WebControls.GridColumn.UniqueName"/> for the requested column.</param>
        </member>
        <member name="M:Telerik.WebControls.GridTableView.GetColumnSafe(System.String)">
            <summary>
            Returns a <see cref="T:Telerik.WebControls.GridColumn"/> based on its
            <see cref="P:Telerik.WebControls.GridColumn.UniqueName"/>.
            </summary>
            <param name="columnUniqueName">The <see cref="P:Telerik.WebControls.GridColumn.UniqueName"/> for the requested column.</param>
        </member>
        <member name="M:Telerik.WebControls.GridTableView.GetItems(Telerik.WebControls.GridItemType[])">
            <summary>
            Returns a collection of <see cref="T:Telerik.WebControls.GridItem"/> objects based on their
                 <see cref="P:Telerik.WebControls.GridItem.ItemType"/>.
            </summary>
            <returns>
                A <see cref="T:Telerik.WebControls.GridItem"/>s collection of objects based on their
                <see cref="P:Telerik.WebControls.GridItem.ItemType"/>.
            </returns>
            <seealso cref="M:Telerik.WebControls.GridTableView.GetColumn(System.String)">GetColumn Method</seealso>
            <param name="includeItemTypes">
            The <see cref="P:Telerik.WebControls.GridItem.ItemType"/>, which will be used as a criteria for
            the collection.
            </param>
        </member>
        <member name="M:Telerik.WebControls.GridTableView.PrepareControlHierarchy">
            <summary>
            Applies all view changes to control hierarchy before rendering
            </summary>
        </member>
        <member name="M:Telerik.WebControls.GridTableView.CreateTableView(Telerik.WebControls.RadGrid,System.Boolean)">
            <summary>
            This method is used by RadGrid internally. Please do not use.
            </summary>
        </member>
        <member name="M:Telerik.WebControls.GridTableView.Clone">
            <exclude/>
            <excludetoc/>
            <summary>For internal structure usage.</summary>
        </member>
        <member name="M:Telerik.WebControls.GridTableView.CreateControlHierarchy(System.Boolean)">
            <summary>
            Recreates all GridItems and chld controls, using the DataSource or the ViewState
            </summary>
            <param name="useDataSource">'True' means that DataBind() is executing. 'False' means that Viewtate 
            has been just loaded after postback.</param>
        </member>
        <member name="M:Telerik.WebControls.GridTableView.ExportToCSV">
            <summary>
            Exports the grid data in CSV format using the properties set in the
            <a href="RadGrid~Telerik.WebControls.GridExportSettings.html">ExportSettings</a>.
            </summary>
            <seealso cref="M:Telerik.WebControls.GridTableView.ExportToWord">ExportToWord Method</seealso>
            <seealso cref="M:Telerik.WebControls.GridTableView.ExportToExcel">ExportToExcel Method</seealso>
            <seealso cref="!:http://www.telerik.com/demos/aspnet/Grid/Examples/GeneralFeatures/Exporting/DefaultCS.aspx">MS Excel and MS Word online example</seealso>
        </member>
        <member name="M:Telerik.WebControls.GridTableView.ExportToPdf">
            <summary>
            Exports the grid data in PDF format using the properties set in the
            <a href="RadGrid~Telerik.WebControls.GridExportSettings.html">ExportSettings</a>.
            </summary>
            <seealso cref="!:http://www.telerik.com/demos/aspnet/Grid/Examples/GeneralFeatures/Exporting/DefaultCS.aspx">Exporting online example</seealso>
        </member>
        <member name="M:Telerik.WebControls.GridTableView.ExportToExcel">
            <summary>
            Exports the grid data in Microsoft Excel ® format using the properties set in the
            <a href="RadGrid~Telerik.WebControls.GridExportSettings.html">ExportSettings</a>.
            </summary>
            <seealso cref="M:Telerik.WebControls.GridTableView.ExportToWord">ExportToWord Method</seealso>
            <seealso cref="M:Telerik.WebControls.GridTableView.ExportToExcel">ExportToExcel Method</seealso>
            <seealso cref="!:http://www.telerik.com/demos/aspnet/Grid/Examples/GeneralFeatures/Exporting/DefaultCS.aspx">MS Excel and MS Word online example</seealso>
        </member>
        <member name="M:Telerik.WebControls.GridTableView.ExportToExcel(System.String)">
            <summary>
            Exports the grid data in Microsoft Excel ® format file with a given name. Only
            export to Excel 2003 and above is currently supported.
            </summary>
            <seealso cref="T:Telerik.WebControls.GridExportSettings">GridExportSettings Class</seealso>
            <seealso cref="M:Telerik.WebControls.GridTableView.ExportToWord">ExportToWord Method</seealso>
            <seealso cref="M:Telerik.WebControls.GridTableView.ExportToExcel2007">ExportToExcel2007 Method</seealso>
            <seealso cref="M:Telerik.WebControls.GridTableView.ExportToWord2007">ExportToWord2007 Method</seealso>
            <seealso cref="!:http://www.telerik.com/demos/aspnet/Grid/Examples/GeneralFeatures/Exporting/DefaultCS.aspx">MS Excel and MS Word online example</seealso>
            <param name="fileName">
            A string specifying the name of the file for the exported data. The file
            extension should not be included.
            </param>
        </member>
        <member name="M:Telerik.WebControls.GridTableView.ExportToExcel(System.String,System.Boolean,System.Boolean)">
            <summary>
            Exports the grid data in Microsoft Excel ® format file with a given name and
            options to ignore formatting and paging. Only export to Excel 2003 and above is
            currently supported.
            </summary>
            <seealso cref="M:Telerik.WebControls.GridTableView.ExportToWord">ExportToWord Method</seealso>
            <seealso cref="M:Telerik.WebControls.GridTableView.ExportToExcel2007">ExportToExcel2007 Method</seealso>
            <seealso cref="M:Telerik.WebControls.GridTableView.ExportToWord2007">ExportToWord2007 Method</seealso>
            <seealso cref="T:Telerik.WebControls.GridExportSettings">GridExportSettings Class</seealso>
            <seealso cref="!:http://www.telerik.com/demos/aspnet/Grid/Examples/GeneralFeatures/Exporting/DefaultCS.aspx">MS Excel and MS Word online example</seealso>
            <param name="fileName">
            A string specifying the name of the file for the exported data. The file
            extension should not be included.
            </param>
            <param name="onlyData">
            If set to <strong>true</strong>, only the data will be exported, ignoring the
            formatting options.
            </param>
            <param name="ignorePaging">
            If set to <strong>true</strong>, the whole grid data will be exported ignoring
            the defined paging options. Otherwise (set to <strong>false</strong>) only the current
            page data will be exported.
            </param>
        </member>
        <member name="M:Telerik.WebControls.GridTableView.ExportToExcel2007">
            <summary>
            Exports the grid data in Microsoft Excel 2007 ® format using the properties set
            in the
            <a href="RadGrid~Telerik.WebControls.GridExportSettings.html">ExportSettings</a>.
            </summary>
            <seealso cref="M:Telerik.WebControls.GridTableView.ExportToExcel">ExportToExcel Method</seealso>
            <seealso cref="M:Telerik.WebControls.GridTableView.ExportToWord">ExportToWord Method</seealso>
            <seealso cref="M:Telerik.WebControls.GridTableView.ExportToWord2007">ExportToWord2007 Method</seealso>
        </member>
        <member name="M:Telerik.WebControls.GridTableView.ExportToExcel2007(System.String)">
            <summary>
            	<para>Exports the grid data in Microsoft Excel 2007 ® format file with a given
                name.</para>
            </summary> 
            <seealso cref="M:Telerik.WebControls.GridTableView.ExportToExcel">ExportToExcel Method</seealso>
            <seealso cref="M:Telerik.WebControls.GridTableView.ExportToWord">ExportToWord Method</seealso>
            <seealso cref="M:Telerik.WebControls.GridTableView.ExportToWord2007">ExportToWord2007 Method</seealso>
            <param name="fileName">
            A string specifying the name of the file for the exported data. The file
            extension should not be included.
            </param>
        </member>
        <member name="M:Telerik.WebControls.GridTableView.ExportToExcel2007(System.String,System.Boolean,System.Boolean)">
            <summary>
            Exports the grid data in Microsoft Excel 2007 ® format with options to ignore
            formatting and paging.
            </summary>
            <seealso cref="M:Telerik.WebControls.GridTableView.ExportToExcel">ExportToExcel Method</seealso>
            <seealso cref="M:Telerik.WebControls.GridTableView.ExportToWord">ExportToWord Method</seealso>
            <seealso cref="M:Telerik.WebControls.GridTableView.ExportToWord2007">ExportToWord2007 Method</seealso>
            <param name="fileName">
            A string specifying the name of the file for the exported data. The file
            extension should not be included.
            </param>
            <param name="onlyData">
            If set to <strong>true</strong>, only the data will be exported, ignoring the
            formatting options.
            </param>
            <param name="ignorePaging">
            If set to <strong>true</strong>, the whole grid data will be exported ignoring
            the defined paging options. Otherwise (set to <strong>false</strong>) only the current
            page data will be exported.
            </param>
        </member>
        <member name="M:Telerik.WebControls.GridTableView.ExportToWord">
            <summary>
            Exports the grid data in Microsoft Word ® format based on the selected ExportSettings.
            </summary>
            <seealso cref="T:Telerik.WebControls.GridExportSettings">GridExportSettings Class</seealso>
            <seealso cref="M:Telerik.WebControls.GridTableView.ExportToExcel">ExportToExcel Method</seealso>
            <seealso cref="M:Telerik.WebControls.GridTableView.ExportToExcel2007">ExportToExcel2007 Method</seealso>
            <seealso cref="M:Telerik.WebControls.GridTableView.ExportToWord2007">ExportToWord2007 Method</seealso>
        </member>
        <member name="M:Telerik.WebControls.GridTableView.ExportToWord(System.String)">
            <summary>
            Exports the grid data in Microsoft Word ® format. Only export to Word 2003 and
            above is currently supported.
            </summary>
            <seealso cref="T:Telerik.WebControls.GridExportSettings">GridExportSettings Class</seealso>
            <seealso cref="M:Telerik.WebControls.GridTableView.ExportToExcel">ExportToExcel Method</seealso>
            <seealso cref="M:Telerik.WebControls.GridTableView.ExportToExcel2007">ExportToExcel2007 Method</seealso>
            <seealso cref="M:Telerik.WebControls.GridTableView.ExportToWord2007">ExportToWord2007 Method</seealso>
            <param name="fileName">
            The name of the file that will be used for the exported data. Do not include the
            file extension.
            </param>
        </member>
        <member name="M:Telerik.WebControls.GridTableView.ExportToWord(System.String,System.Boolean,System.Boolean)">
            <summary>
            Exports the grid data in Microsoft Word ® format with options to ignore
            formatting and paging. Only export to Excel 2003 and above is currently
            supported.
            </summary>
            <seealso cref="T:Telerik.WebControls.GridExportSettings">GridExportSettings Class</seealso>
            <seealso cref="M:Telerik.WebControls.GridTableView.ExportToExcel">ExportToExcel Method</seealso>
            <seealso cref="M:Telerik.WebControls.GridTableView.ExportToExcel2007">ExportToExcel2007 Method</seealso>
            <seealso cref="M:Telerik.WebControls.GridTableView.ExportToWord2007">ExportToWord2007 Method</seealso>
            <param name="fileName">
            The name of the file that will be used for the exported data. Do not include the
            file extension.
            </param>
            <param name="onlyData">
            If set to <strong>true</strong>, only the data will be exported, ignoring the
            formatting options.
            </param>
            <param name="ignorePaging">
            If set to <strong>true</strong>, the whole grid data will be exported ignoring
            the defined paging options. Otherwise (set to <strong>false</strong>) only the current
            page data will be exported.
            </param>
        </member>
        <member name="M:Telerik.WebControls.GridTableView.ExportToWord2007">
            <summary>
            Exports the grid data in Microsoft Word 2007 ® format based on the selected <strong>ExportSettings</strong>.
            </summary>
            <seealso cref="T:Telerik.WebControls.GridExportSettings">GridExportSettings Class</seealso>
            <seealso cref="M:Telerik.WebControls.GridTableView.ExportToExcel">ExportToExcel Method</seealso>
            <seealso cref="M:Telerik.WebControls.GridTableView.ExportToWord">ExportToWord Method</seealso>
            <seealso cref="M:Telerik.WebControls.GridTableView.ExportToExcel2007">ExportToExcel2007 Method</seealso>
        </member>
        <member name="M:Telerik.WebControls.GridTableView.ExportToWord2007(System.String)">
            <summary>
            Exports the grid data in Microsoft Word 2007 ® format file with the given name.
            </summary>
            <seealso cref="T:Telerik.WebControls.GridExportSettings">GridExportSettings Class</seealso>
            <seealso cref="M:Telerik.WebControls.GridTableView.ExportToExcel">ExportToExcel Method</seealso>
            <seealso cref="M:Telerik.WebControls.GridTableView.ExportToWord">ExportToWord Method</seealso>
            <seealso cref="M:Telerik.WebControls.GridTableView.ExportToExcel2007">ExportToExcel2007 Method</seealso>
            <param name="fileName">
            The name of the file that will be used for the exported data. Do not include the
            file extension.
            </param>
        </member>
        <member name="M:Telerik.WebControls.GridTableView.ExportToWord2007(System.String,System.Boolean,System.Boolean)">
            <summary>
            Exports the grid data in Microsoft Word 2007 ® format with options to ignore
            formatting and paging.
            </summary>
            <seealso cref="T:Telerik.WebControls.GridExportSettings">GridExportSettings Class</seealso>
            <seealso cref="M:Telerik.WebControls.GridTableView.ExportToExcel">ExportToExcel Method</seealso>
            <seealso cref="M:Telerik.WebControls.GridTableView.ExportToWord">ExportToWord Method</seealso>
            <seealso cref="M:Telerik.WebControls.GridTableView.ExportToExcel2007">ExportToExcel2007 Method</seealso>
            <param name="fileName">
            The name of the file that will be used for the exported data. Do not include the
            file extension.
            </param>
            <param name="onlyData">
            If set to <strong>true</strong>, only the data will be exported, ignoring the
            formatting options.
            </param>
            <param name="ignorePaging">
            If set to <strong>true</strong>, the whole grid data will be exported ignoring
            the defined paging options. Otherwise (set to <strong>false</strong>) only the current
            page data will be exported.
            </param>
        </member>
        <member name="M:Telerik.WebControls.GridTableView.SetLevelRequiresBinding">
            <summary>For internal usage.</summary>
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.WebControls.GridTableView.PrepareExport">
            <exclude/>
            <excludetoc/>
            <summary>For internal usage.</summary>
        </member>
        <member name="M:Telerik.WebControls.GridTableView.ExtractValuesFromItem(System.Collections.IDictionary,Telerik.WebControls.GridEditableItem)">
            <summary>
                The passed IDictionary object (like Hashtable for example) will be filled with the
                names/values of the corresponding column data-fields and their values. Only
                instances of type <see cref="T:Telerik.WebControls.GridEditableColumn"/> support extracting values.
            </summary>
            <seealso cref="!:http://www.telerik.com/demos/aspnet/Grid/Examples/DataEditing/ExtractValues/DefaultCS.aspx">Using grid server-side API for extraction</seealso>
            <param name="newValues">the dictionary that will be filled</param>
            <param name="editedItem">the item to extract values from</param>
        </member>
        <member name="M:Telerik.WebControls.GridTableView.PerformUpdate(Telerik.WebControls.GridEditableItem)">
            <summary>
                Perform asynchronous update operation, using the DataSource control API and the
                Rebind method. Please, make sure you have specified the correct
                <strong>DataKeyNames</strong> for the <see cref="T:Telerik.WebControls.GridTableView"/>. When the
                asynchronous operation calls back, RadGrid will fire
                <see cref="E:Telerik.WebControls.RadGrid.ItemUpdated"/> event.
            </summary>
            <remarks>
            	<para>The following online example uses PerformUpdate method:</para>
            	<para>
            		<span id="Header1_ExampleLabel"><a href="http://www.telerik.com/demos/aspnet/Grid/Examples/AJAX/EditOnDblClick/DefaultCS.aspx">
                Edit on double-click</a></span></para>
            </remarks>
            <seealso cref="P:Telerik.WebControls.GridTableView.DataKeyNames">DataKeyNames Property</seealso>
            <seealso cref="M:Telerik.WebControls.GridTableView.PerformInsert">PerformInsert Method</seealso>
            <seealso cref="M:Telerik.WebControls.GridTableView.PerformDelete(Telerik.WebControls.GridEditableItem)">PerformDelete Method</seealso>
        </member>
        <member name="M:Telerik.WebControls.GridTableView.PerformUpdate(Telerik.WebControls.GridEditableItem,System.Boolean)">
            <summary>
                Perform asynchronous update operation, using the DataSource control API. Please
                make sure you have specified the correct <strong>DataKeyNames</strong> for the
                GridTableView. When the asynchronous operation calls back, RadGrid will fire
                <see cref="E:Telerik.WebControls.RadGrid.ItemUpdated"/> event. The boolean property defines if
                RadGrid will <see cref="M:Telerik.WebControls.GridTableView.Rebind"/> after the update.
            </summary> 
            <seealso cref="M:Telerik.WebControls.GridTableView.PerformInsert">PerformInsert Method</seealso>
            <seealso cref="M:Telerik.WebControls.GridTableView.PerformDelete(Telerik.WebControls.GridEditableItem)">PerformDelete Method</seealso>
            <param name="editedItem">the item that is in edit mode and should be updated</param>
            <param name="suppressRebind">set to true to prevent grid from binding after the update operation completes</param>
        </member>
        <member name="M:Telerik.WebControls.GridTableView.PerformInsert">
            <summary>
                Perform asynchronous insert of the new item, diplayed by RadGrid when in edit mode,
                using the DataSourceControl API, then <see cref="M:Telerik.WebControls.GridTableView.Rebind"/>. When the
                asynchronous operation calls back, RadGrid will fire
                <see cref="E:Telerik.WebControls.RadGrid.ItemInserted"/> event.
            </summary>
            <seealso cref="M:Telerik.WebControls.GridTableView.PerformUpdate(Telerik.WebControls.GridEditableItem)">PerformUpdate Method</seealso>
            <seealso cref="M:Telerik.WebControls.GridTableView.PerformDelete(Telerik.WebControls.GridEditableItem)">PerformDelete Method</seealso>
        </member>
        <member name="M:Telerik.WebControls.GridTableView.GetInsertItem">
            <summary>
            Get the item that appears when grid is in Insert Mode.
            </summary>
            <seealso cref="M:Telerik.WebControls.GridTableView.PerformInsert">PerformInsert Method</seealso>
            <returns>A reference to the newly inserted item for the respective GridTableView.</returns>
            <remarks>
            	<para>There is scenarios in which you need to make some changes with/depending on
                the inserted item.</para>
            	<para>If you want to predifine some controls values on item insertion, you should
                use the ItemCommand server-side event to access it:</para>
            	<pre>
            [C#]<br/>private void RadGrid1_ItemCommand(object source, Telerik.WebControls.GridCommandEventArgs e)<br/>{<br/>  if (e.CommandName == RadGrid.InitInsertCommandName)<br/>
              {<br/>    e.Canceled = true;<br/>
                e.Item.OwnerTableView.InsertItem();<br/>    GridEditableItem insertedItem = e.Item.OwnerTableView.GetInsertItem();<br/>
                GridEditFormItem editFormItem = insertedItem as GridEditFormItem; <br/><br/>    TextBox box = editFormItem.FindControl("txtEmployeeID") as TextBox;<br/>    box.Text = "11";<br/>  }<br/>}
                </pre>
            	<pre>
            		<br/>[VB.NET]
                </pre>
            	<pre>
            Private Sub RadGrid1_ItemCommand(ByVal source As Object, ByVal e As Telerik.WebControls.GridCommandEventArgs) Handles RadGrid1.ItemCommand<br/>         If (e.CommandName = RadGrid.InitInsertCommandName) Then<br/>
                        e.Canceled = True<br/>            e.Item.OwnerTableView.InsertItem()<br/>             Dim insertedItem As GridEditableItem = e.Item.OwnerTableView.GetInsertItem()<br/>
                         Dim editFormItem As GridEditFormItem = CType(insertedItem, GridEditFormItem)<br/><br/>             Dim box As TextBox = CType(MyUserControl.FindControl("insertedItem"), TextBox)<br/>            box.Text = "11"<br/>         End If<br/> End Sub
                </pre>
            	<para><span class="threadMessageBody" id="ctl00_ctl07_repeaterMessages_ctl00_lblMessageText">If you want to get access to
                the newly added row and its values to update in a custom data source, you can use
                the InsertCommand event:</span></para>
            	<para><span class="threadMessagebody">[C#]</span></para>
            	<pre>
            		<span class="threadMessagebody">protected void RadGrid1_InsertCommand(object source, GridCommandEventArgs e)  <br/> {  <br/>     GridDataInsertItem gridDataInsertItem =  <br/>         (GridDataInsertItem)(RadGrid1.MasterTableView.GetInsertItem());<br/>
                Hashtable ht = new Hashtable();  <br/>     gridDataInsertItem.ExtractValues(ht);  <br/>     //Loop through each "DictionaryEntry" in hash table and insert using key value <br/>     foreach (DictionaryEntry ent in ht)  <br/>
                 {  <br/>         //get the key values and insert to custom datasource. <br/>     } </span>
            		<span class="threadMessagebody"><br/>}</span>
            	</pre>
            	<para>[Visual Basic]</para>
            	<pre>
            Protected Sub RadGrid1_InsertCommand(ByVal source As Object, ByVal e As GridCommandEventArgs)<br/>    Dim gridDataInsertItem As GridDataInsertItem = CType(RadGrid1.MasterTableView.GetInsertItem,GridDataInsertItem)<br/>
                Dim ht As Hashtable = New Hashtable<br/>    gridDataInsertItem.ExtractValues(ht)<br/>    'Loop through each "DictionaryEntry" in hash table and insert using key value <br/>    For Each ent As DictionaryEntry In ht<br/>
                    'get the key values and insert to custom datasource. <br/>    Next<br/>End Sub
                </pre>
            </remarks>
        </member>
        <member name="M:Telerik.WebControls.GridTableView.PerformInsert(Telerik.WebControls.GridEditableItem)">
            <summary>
            Performs asynchronous insert operation, using the DataSourceControl API, then
            Rebinds. When the asynchronous operation calls back, RadGrid will fire
            <see cref="E:Telerik.WebControls.RadGrid.ItemInserted"/> event.
            </summary>
            <seealso cref="M:Telerik.WebControls.GridTableView.PerformUpdate(Telerik.WebControls.GridEditableItem)">PerformUpdate Method</seealso>
            <seealso cref="M:Telerik.WebControls.GridTableView.PerformDelete(Telerik.WebControls.GridEditableItem)">PerformDelete Method</seealso>
            <param name="editedItem">item to be inserted</param>
        </member>
        <member name="M:Telerik.WebControls.GridTableView.PerformInsert(Telerik.WebControls.GridEditableItem,System.Boolean)">
            <summary>
            Perform asynchronous insert operation, using the DataSource control API.
            When the asynchronous operation calls back, RadGrid will fire <see cref="E:Telerik.WebControls.RadGrid.ItemInserted"/> event.
            </summary> 
            <seealso cref="M:Telerik.WebControls.GridTableView.PerformUpdate(Telerik.WebControls.GridEditableItem)">PerformUpdate Method</seealso>
            <seealso cref="M:Telerik.WebControls.GridTableView.PerformDelete(Telerik.WebControls.GridEditableItem)">PerformDelete Method</seealso>
            <param name="editedItem">the item to be inserted</param>
            <param name="suppressRebind">True to prevent from binding after the insert operartion completes.</param>
        </member>
        <member name="M:Telerik.WebControls.GridTableView.PerformDelete(Telerik.WebControls.GridEditableItem)">
            <summary>
            Perform asynchronous delete operation, using the DataSourceControl API the Rebinds the grid. Please make sure you have specified the correct <strong>DataKeyNames</strong> for the GridTableView.
            When the asynchronous operation calls back, RadGrid will fire <see cref="E:Telerik.WebControls.RadGrid.ItemDeleted"/> event.
            </summary> 
            <seealso cref="P:Telerik.WebControls.GridTableView.DataKeyNames">DataKeyNames Property</seealso>
            <seealso cref="M:Telerik.WebControls.GridTableView.PerformUpdate(Telerik.WebControls.GridEditableItem)">PerformUpdate Method</seealso>
            <seealso cref="M:Telerik.WebControls.GridTableView.PerformInsert">PerformInsert Method</seealso>
            <param name="editedItem">The item that should be deleted</param>
        </member>
        <member name="M:Telerik.WebControls.GridTableView.PerformDelete(Telerik.WebControls.GridEditableItem,System.Boolean)">
            <summary>
            Perform delete operation, using the DataSourceControl API. Please make sure you have specified the correct <strong>DataKeyNames</strong> for the GridTableView.
            </summary>
            <seealso cref="P:Telerik.WebControls.GridTableView.DataKeyNames">DataKeyNames Property</seealso>
            <seealso cref="M:Telerik.WebControls.GridTableView.PerformUpdate(Telerik.WebControls.GridEditableItem)">PerformUpdate Method</seealso>
            <seealso cref="M:Telerik.WebControls.GridTableView.PerformInsert">PerformInsert Method</seealso>
            <param name="editedItem">The item that should be deleted</param>
            <param name="suppressRebind">Set to true to stop error from binding</param>
        </member>
        <member name="M:Telerik.WebControls.GridTableView.InsertItem">
            <summary>
                Places the GridTableView in insert mode, allowing user to insert a new data-item
                values. The <see cref="P:Telerik.WebControls.GridTableView.CurrentPageIndex"/> will be set to display the last
                page. You can use also the <see cref="P:Telerik.WebControls.GridTableView.IsItemInserted"/> to place the
                GridTableView in insert mode.
            </summary>
        </member>
        <member name="M:Telerik.WebControls.GridTableView.InsertItem(System.Object)">
            <summary>
                Places the GridTableView in insert mode, allowing the user to insert a new
                data-item values. The GridInsertItem created will be bound to values of the
                newDataItem object. The <see cref="P:Telerik.WebControls.GridTableView.CurrentPageIndex"/> will be set to display
                the last page. You can use also the <see cref="P:Telerik.WebControls.GridTableView.IsItemInserted"/> property to
                place the GridTableView in insert mode.
            </summary>
        </member>
        <member name="M:Telerik.WebControls.GridTableView.InsertItem(System.Collections.IDictionary)">
            <summary>
                Places the GridTableView in insert mode, allowing the user to insert a new
                data-item values. The GridInsertItem created will be bound to values found in
                newValues dictionary; The <see cref="P:Telerik.WebControls.GridTableView.CurrentPageIndex"/> will be set to
                display the last page. You can use also the <see cref="P:Telerik.WebControls.GridTableView.IsItemInserted"/> to
                place the GridTableView in insert mode.
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.OwnerID">
            <summary>Gets the ClientID of the RadGrid object that contains this instance.</summary>
            <value>
            The string representation of the ClientID object that contains the
            instance.
            </value>
            <seealso cref="!:OwnerGrid">OwnerGrid Property</seealso>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.DetailTables">
            <summary>
            	<para>Gets or sets the collection of detail table views for this
                <a href="RadGrid~Telerik.WebControls.GridTableView.html">GridTableView</a>.</para>
            </summary>
            <value>
            A collection of detail table views for this
            <strong>GridTableView</strong>.
            </value>
            <seealso cref="P:Telerik.WebControls.GridTableView.DataKeyValues">DataKeyValues Property</seealso>
            <seealso cref="P:Telerik.WebControls.GridTableView.DataKeyNames">DataKeyNames Property</seealso>
            <remarks>
                Adding or removing objects to the <strong>DetailTables</strong> collection changes
                the hierarchical structure. 
                <para>
                    Use <see cref="M:Telerik.WebControls.RadGrid.Rebind"/> after modifying the collection
                    programmatically.
                </para>
            	<para>This collection can also be altered unsing the environment designer.</para>
            </remarks>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.CurrentResetPageIndexAction">
            <summary>
            	<para>
                    Gets or sets a value that describes how <strong>RadGrid</strong> would respond
                    if the <see cref="P:Telerik.WebControls.GridTableView.CurrentPageIndex"/> is invalid when data-binding.
                </para>
            </summary>
            <remarks>
            	<para>
                    This property is not persisted in the ViewState. By deafult the value is
                    <see cref="F:Telerik.WebControls.GridResetPageIndexAction.SetPageIndexToFirst"/>.
                </para>
            </remarks>
            <seealso cref="T:Telerik.WebControls.GridResetPageIndexAction">GridResetPageIndexAction Enumeration</seealso>
            <value>
                A member of the <strong>GridResetPageIndexAction</strong> enumeration which
                describes how <strong>RadGrid</strong> would respond if the
                <strong>CurrentPageIndex</strong> is invalid when data-binding. By default its
                value is <see cref="F:Telerik.WebControls.GridResetPageIndexAction.SetPageIndexToFirst"/>
            </value>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.GridLines">
            <summary>
            Gets or sets a value indicating whether the border lines for grid cells will be
            displayed.
            </summary>
            <value>
                One of the
                <a href="RadGrid~Telerik.WebControls.GridTableViewBase~GridLines.html">GridLines</a>
                values. The default is <see cref="!:GridLines.Both"/>.
            </value>
            <remarks>
            	<para>Use the <strong>GridLines</strong> property to specify the gridline style for
                a <strong>GridTableView</strong> control. The following table lists the available
                styles.</para>
            	<para>
            		<list type="table">
            			<item>
            				<term>Style</term>
            				<description>Description</description>
            			</item>
            			<item>
            				<term><strong>GridLines.None</strong></term>
            				<description>No gridlines are displayed.</description>
            			</item>
            			<item>
            				<term><strong>GridLines.Horizontal</strong></term>
            				<description>Displays the horizontal gridlines only.</description>
            			</item>
            			<item>
            				<term><strong>GridLines.Vertical</strong></term>
            				<description>Displays the vertical gridlines only.</description>
            			</item>
            			<item>
            				<term><strong>GridLines.Both</strong></term>
            				<description>Displays both the horizontal and vertical
                            gridlines.</description>
            			</item>
            		</list>
            	</para>
            </remarks>
            <seealso cref="P:Telerik.WebControls.GridTableViewBase.CellPadding">CellPadding Property (Telerik.WebControls.GridTableViewBase)</seealso>
            <seealso cref="P:Telerik.WebControls.GridTableViewBase.CellSpacing">CellSpacing Property (Telerik.WebControls.GridTableViewBase)</seealso>
            <example>
            	<para>The following code snippet demonstrates how to use the
                <strong>GridLines</strong> property to hide the gridlines in a
                <strong>GridTableView</strong> control.</para>
            	<para>[ASPX/ASCX]</para>
            	<para>&lt;rad:RadGrid ID="RadGrid1" runat="server"
                <strong>GridLines="None"</strong>&gt;<br/>
                &lt;/radGrid:RadGrid&gt;</para>
            	<code lang="VB" title="[New Example]">
            RadGrid1.GridLines = GridLines.None
                </code>
            	<code lang="CS" title="[New Example]">
            RadGrid1.GridLines = GridLines.None;
                </code>
            </example>
            <seealso cref="P:Telerik.WebControls.GridTableView.HorizontalAlign">HorizontalAlign Property</seealso>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.HorizontalAlign">
            <summary>
            	<para>Gets or sets a value indicating the horizontal alignment of the grid
                table.</para>
            </summary>
            <value>
                One of the
                <a href="RadGrid~Telerik.WebControls.GridTableViewBase~HorizontalAlign.html">HorizontalAlign</a>
                values. The default is <see cref="!:HorizontalAlign.NotSet"/>.
            </value>
            <remarks>
            	<para>Use the <strong>HorizontalAlign</strong> property to specify the horizontal
                alignment of a <strong>GridTableView</strong> control within the page. The
                following table lists the different horizontal alignment styles.</para>
            	<para>
            		<list type="table">
            			<item>
            				<term>Alignment value</term>
            				<description>Description</description>
            			</item>
            			<item>
            				<term><strong>HorizontalAlign.NotSet</strong></term>
            				<description>The horizontal alignment of the <b>GridTableView</b>
                            control has not been set.</description>
            			</item>
            			<item>
            				<term><strong>HorizontalAlign.Left</strong></term>
            				<description>The <b>GridTableView</b> control is left-aligned on the
                            page.</description>
            			</item>
            			<item>
            				<term><strong>HorizontalAlign.Center</strong></term>
            				<description>The <b>GridTableView</b> control is centered on the
                            page.</description>
            			</item>
            			<item>
            				<term><strong>HorizontalAlign.Right</strong></term>
            				<description>The <b>GridTableView</b> control is right-aligned on the
                            page.</description>
            			</item>
            			<item>
            				<term><strong>HorizontalAlign.Justify</strong></term>
            				<description>The <b>GridTableView</b> control is aligned with both the
                            left and right margins of the page.</description>
            			</item>
            		</list>
            	</para>
            </remarks>
            <seealso cref="P:Telerik.WebControls.GridTableView.GridLines">GridLines Property</seealso>
            <example>
            	<para>The following code snippet demonstrates how to use the
                <strong>HorizontalAlign</strong> property to align a <strong>GridTableView</strong>
                control on the right side of a page.</para>
            	<para>[ASPX/ASCX]</para>
            	<para>&lt;rad:RadGrid ID="RadGrid1" runat="server"
                HorizontalAlign="Right"&gt;<br/>
                &lt;/rad:RadGrid&gt;</para>
            	<code lang="VB" title="[New Example]">
            RadGrid1.HorizontalAlign = HorizontalAlign.Right
                </code>
            	<code lang="CS" title="[New Example]">
            RadGrid1.HorizontalAlign = HorizontalAlign.Right;
                </code>
            </example>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.DataKeyValues">
            <summary>
            	<para>
                    Gets a collection of <strong>DataKeyValue</strong> objects that represent the
                    data key value of the corresponding item (specified with its
                    <see cref="!:ItemIndex"/>) and the <strong>DataKeyName</strong>
                    (case-sensitive!). The <strong>DataKeyName</strong> should be one of the
                    specified in the <see cref="P:Telerik.WebControls.GridTableView.DataKeyNames"/> array.
                </para>
            </summary>
            <example>
            	<code lang="CS" title="CS" description="The following code will display a message when an Item is updated. The message will show the Employee ID for the updated employee data.">
            protected void RadGrid1_ItemUpdated(object source, Telerik.WebControls.GridUpdatedEventArgs e)
               {
                    if (e.Exception != null)
                    {
                        e.KeepInEditMode = true;
                        e.ExceptionHandled = true;
                        Response.Write("Employee " + e.Item.OwnerTableView.DataKeyValues[e.Item.ItemIndex]["EmployeeID"] + " cannot be updated. Reason: " + e.Exception.Message);
                    }
                    else
                    {
                        Response.Write("Employee " + e.Item.OwnerTableView.DataKeyValues[e.Item.ItemIndex]["EmployeeID"] + " updated");
                    }
               }
                </code>
            	<code lang="CS" title="CS short" description="In brief:">
            int eID = (int)tableView.DataKeyValues[editedItem.ItemIndex]["EmployeeID"];
                </code>
            	<code lang="VB" title="VB short" description="In brief:">
            Dim eID as Integer = (CInt)tableView.DataKeyValues(editedItem.ItemIndex)("EmployeeID")
                </code>
            	<code lang="CS" title="VB" description="The following code will display a message when an Item is updated. The message will show the Employee ID for the updated employee data.">
            Protected Sub RadGrid1_ItemUpdated(ByVal source As Object, ByVal e As Telerik.WebControls.GridUpdatedEventArgs) Handles RadGrid1.ItemUpdated
               If Not e.Exception Is Nothing Then
                     e.KeepInEditMode = True
                     e.ExceptionHandled = True
                     Response.Write("Employee " + e.Item.OwnerTableView.DataKeyValues(e.Item.ItemIndex)("EmployeeID").ToString() + " cannot be updated. Reason: " + e.Exception.Message)
               Else
                     Response.Write("Employee " + e.Item.OwnerTableView.DataKeyValues(e.Item.ItemIndex)("EmployeeID").ToString() + " updated")
               End If
            End Sub
                </code>
            </example>
            <returns>data key name/value pair</returns>
            <value>
            A
            <a href="RadGrid~Telerik.WebControls.GridDataKeyArray.html">GridDataKeyArray</a> that
            contains the data key of each item in a <strong>GridTableView</strong> control.
            </value>
            <remarks>
            When the
            <a href="RadGrid~Telerik.WebControls.GridTableView~DataKeyNames.html">DataKeyNames</a>
            property is set, the <strong>GridTableView</strong> control automatically creates a
            <strong>DataKeyValue</strong> object for each item in the control. The
            <strong>DataKeyValue</strong> object contains the values of the field or fields
            specified in the <strong>DataKeyNames</strong> property. The
            <strong>DataKeyValue</strong> objects are then added to the control's
            <strong>DataKeysValue</strong> collection. Use the <strong>DataKeysValue</strong>
            property to retrieve the <strong>DataKeyValue</strong> object for a specific data item
            in the <strong>GridTableView</strong> control.
            </remarks>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.DataKeyNames">
            <summary>
            	<para>
                    Gets or sets an array of data-field names that will be used to populate the
                    <see cref="P:Telerik.WebControls.GridTableView.DataKeyValues"/> collection, when the
                    <a href="RadGrid~Telerik.WebControls.GridTableView.html">GridTableView</a>
                    control is databinding.
                </para>
            </summary>
            <remarks>
            	<para>Use the <strong>DataKeyNames</strong> property to specify the field or fields
                that represent the primary key of the data source.</para>
            	<para><strong>Note:</strong> Values set to this property are case-sensitive! The
                field names should be coma-separated.</para>
            	<para>
                    The data key names/values are stored in the <strong>ViewState</strong> so they
                    are available at any moment after grid have been data-bound, after postbacks,
                    etc. This collection is used when editing data, and for automatic relations
                    when binding an hiararchical grid (see
                    <see cref="P:Telerik.WebControls.GridTableView.ParentTableRelation"/>).
                </para>
            	<para>If the
                <a href="RadGrid~Telerik.WebControls.GridColumn~Visible.html">Visible</a>
                property of a column field is set to false, the column is not displayed in the
                <strong>GridTableView</strong> control and the data for the column does not make a
                round trip to the client. If you want the data for a column that is not visible to
                make a round trip, add the field name to the <strong>DataKeyNames</strong>
                property.</para>
            </remarks>
            <value>
            An array that contains the names of the primary key fields for the items
            displayed in a <strong>GridTableView</strong> control.
            </value>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.AdditionalDataFieldNames">
            <summary>
                Gets or sets values indicating <strong>DataFieldNames</strong> that should be
                sorted, grouped, etc and are not included as columns, in case the property
                <see cref="P:Telerik.WebControls.GridTableView.RetrieveAllDataFields"/> is <strong>false</strong>.
            </summary>
            <seealso cref="P:Telerik.WebControls.GridTableView.DataKeyValues">DataKeyValues Property</seealso>
            <seealso cref="P:Telerik.WebControls.GridTableView.DataKeyNames">DataKeyNames Property</seealso>
            <value>
            An array of DataFieldNames values that should be sorted, grouped, etc and are not
            included as columns.
            </value>
            <seealso cref="P:Telerik.WebControls.GridTableView.RetrieveAllDataFields">RetrieveAllDataFields Property</seealso>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.EnableNoRecordsTemplate">
            <summary>
                Gets or sets a value indicating whether <strong>RadGrid</strong> will show
                <see cref="P:Telerik.WebControls.GridTableView.NoRecordsTemplate"/> instead of the corresponding
                <see cref="T:Telerik.WebControls.GridTableView"/> if there is no items to display.
            </summary>
            <value>
            	<strong>true</strong> if <see cref="P:Telerik.WebControls.GridTableView.NoRecordsTemplate"/> usage is enabled;
                otherwise, <b>false</b>. The default value is <b>true</b>.
            </value>
            <seealso cref="P:Telerik.WebControls.GridTableView.NoRecordsTemplate">NoRecordsTemplate Property</seealso>
            <seealso cref="P:Telerik.WebControls.GridTableView.NoMasterRecordsText">NoMasterRecordsText Property</seealso>
            <seealso cref="P:Telerik.WebControls.GridTableView.NoDetailRecordsText">NoDetailRecordsText Property</seealso>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.NoRecordsTemplate">
            <summary>
            	<para>Gets or sets the template that will be displayed if a
                <a href="RadGrid~Telerik.WebControls.GridTableView.html">GridTableView</a>
                control is bound to a data source that does not contain any records.</para>
            </summary>
            <remarks>
            	<para>
                    You can set the text that will appear in the NoRecordsTemplate through
                    <see cref="P:Telerik.WebControls.GridTableView.NoMasterRecordsText">NoMasterRecordsText</see> and
                    <see cref="P:Telerik.WebControls.GridTableView.NoDetailRecordsText">NoDetailRecordsText</see> properties.
                </para>
            	<para>By default if <strong>Items.Count</strong> equals 0,
                <strong>GridTableView</strong> will render no records message.</para>
            	<para>If <strong>NoRecordsTemplate</strong> and
                <strong>NoMasterRecordsText/</strong><strong>NoDetailRecordsText</strong> are set,
                the <strong>NoRecordsTemplate</strong> property has priority.</para>
            </remarks>
            <value>
            	<para>A
                <a href="http://msdn2.microsoft.com/en-us/library/system.web.ui.itemplate.aspx">System.Web.UI.ITemplate</a>
                that contains the custom content for the empty data row. The default value is a
                null reference (<strong>Nothing</strong> in Visual Basic), which indicates that
                this property is not set.</para>
            </value>
            <example>
            	<para>The following example demonstrates how <strong>NoRecordsTemplate</strong> can
                be implemented declaratively:</para>
            	<para>[ASPX/ASCX]</para>
            	<para>&lt;rad:RadGrid ID="RadGrid1" runat="server"&gt;<br/>
                &lt;MasterTableView&gt;<br/>
                &lt;NoRecordsTemplate&gt;<br/>
                &lt;div style="text-align: center; height: 300px"&gt;<br/>
                &lt;asp:Label ForeColor="RoyalBlue" runat="server" ID="Label1"&gt;Currently there
                are no items in this folder.&lt;/asp:Label&gt;<br/>
                &lt;br /&gt;<br/>
                &lt;/div&gt;<br/>
                &lt;/NoRecordsTemplate&gt;<br/>
                &lt;/MasterTableView&gt;<br/>
                &lt;/rad:RadGrid&gt;</para>
            	<para>The following code snippet demonstrates how the NoRecordsTemplate can be
                implemented dynamically:</para>
            	<code lang="VB" title="[New Example]">
            RadGrid1.MasterTableView.NoRecordsTemplate = New NoRecordsTemplate()
              
            Public Class NoRecordsTemplate
                Implements ITemplate
                
                Public Sub New()
                End Sub
             
                Public Sub InstantiateIn(ByVal container As System.Web.UI.Control) Implements System.Web.UI.ITemplate.InstantiateIn
                    Dim lbl As Label = New Label()
                    lbl.ID = "Label1"
                    lbl.Text = "Currently there are no items in this folder."
                    lbl.ForeColor = System.Drawing.Color.RoyalBlue
                    container.Controls.Add(lbl)
                End Sub
            End Class
                </code>
            	<code lang="CS" title="[New Example]">
            RadGrid1.MasterTableView.NoRecordsTemplate = new NoRecordsTemplate();
             
            class NoRecordsTemplate: ITemplate
            {
                public NoRecordsTemplate()
                {
                }
                
                public void InstantiateIn(Control container)
                {
                    Label lbl = new Label();
                    lbl.ID = "Label1";
                    lbl.Text = "Currently there are no items in this folder.";
                    lbl.ForeColor = System.Drawing.Color.RoyalBlue;
                    container.Controls.Add(lbl);
                }
            }
                </code>
            </example>
            <notes>
            	<para>The
                <a href="RadGrid~Telerik.WebControls.GridTableView~EnableNoRecordsTemplate.html">
                EnableNoRecordsTemplate Property</a> should be set to <strong>true</strong> (its
                default value) in order to be displayed the
                <strong>NoRecordsTemplate</strong>.</para>
            </notes>
            <seealso cref="P:Telerik.WebControls.GridTableView.EnableNoRecordsTemplate">EnableNoRecordsTemplate Property</seealso>
            <seealso cref="P:Telerik.WebControls.GridTableView.NoMasterRecordsText">NoMasterRecordsText Property</seealso>
            <seealso cref="P:Telerik.WebControls.GridTableView.NoDetailRecordsText">NoDetailRecordsText Property</seealso>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.NoMasterRecordsText">
            <summary>
                Gets or sets the text that will be displayed in there is no
                <see cref="P:Telerik.WebControls.GridTableView.NoRecordsTemplate"/> defined and no records in the
                <strong>MasterTableView</strong>.
            </summary>
            <seealso cref="P:Telerik.WebControls.GridTableView.EnableNoRecordsTemplate">EnableNoRecordsTemplate Property</seealso>
            <seealso cref="P:Telerik.WebControls.GridTableView.NoRecordsTemplate">NoRecordsTemplate Property</seealso>
            <seealso cref="P:Telerik.WebControls.GridTableView.NoDetailRecordsText">NoDetailRecordsText Property</seealso>
            <value>
            The text to display in the empty data item. The default is an empty string ("")
            which indicates that this property is not set.
            </value>
            <remarks>
            The empty data row is displayed in a <strong>GridTableView</strong> control when
            the data source that is bound to the control does not contain any records. Use the
            <strong>NoMasterRecordsText</strong> and <strong>NoDetailRecordsText</strong> property
            to specify the text to display in the empty data item. Alternatively, you can define
            your own custom user interface (UI) for the empty data item by setting the
            <strong>NoRecordsTemplate</strong> property instead of this property.
            </remarks>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.NoDetailRecordsText">
            <summary>
                Gets or sets the text that will be displayed in there is no
                <see cref="P:Telerik.WebControls.GridTableView.NoRecordsTemplate"/> defined and no records in the Detail tables.
            </summary>
            <value>
            The text to display in the empty data item. The default is an empty string (""),
            which indicates that this property is not set.
            </value>
            <remarks>
            The empty data row is displayed in a <strong>GridTableView</strong> control when
            the data source that is bound to the control does not contain any records. Use the
            <strong>NoMasterRecordsText</strong> and <strong>NoDetailRecordsText</strong> property
            to specify the text to display in the empty data item. Alternatively, you can define
            your own custom user interface (UI) for the empty data item by setting the
            <strong>NoRecordsTemplate</strong> property instead of this property.
            </remarks>
            <seealso cref="P:Telerik.WebControls.GridTableView.EnableNoRecordsTemplate">EnableNoRecordsTemplate Property</seealso>
            <seealso cref="P:Telerik.WebControls.GridTableView.NoRecordsTemplate">NoRecordsTemplate Property</seealso>
            <seealso cref="P:Telerik.WebControls.GridTableView.NoMasterRecordsText">NoMasterRecordsText Property</seealso>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.RetrieveAllDataFields">
            <summary>
            	<para>Gets or sets a value indicating whether the <strong>GridTableView</strong>
                will extract all bindable properties from the <strong>DataSource</strong> when
                binding, to perform operations like sorting, grouping, etc on DataFields that are
                not included in the column declarations.</para>
            </summary>
            <remarks>
                You can also use the <see cref="P:Telerik.WebControls.GridTableView.AdditionalDataFieldNames"/> array to indicate
                RadGrid <strong>DataFieldNames</strong> that should be sorted, grouped, ect and are
                not included as columns.
            </remarks>
            <value>
            	<para><strong>true</strong>, if the <strong>GridTableView</strong> will extract all
                bindable properties from the <strong>DataSource</strong> when binding; otherwise,
                <strong>false</strong>. The default value is <strong>true.</strong></para>
            </value>
            <seealso cref="P:Telerik.WebControls.GridTableView.AdditionalDataFieldNames">AdditionalDataFieldNames Property</seealso>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.UseAllDataFields">
            <summary>
            	<para>Gets or sets a value indicating whether the <strong>GridTableView</strong>
                should use all retieved properties from the <strong>DataSource</strong> when
                binding, to perform operations like sorting, grouping, etc on DataFields that are
                not included in the column declarations.</para>
            </summary>
            <remarks>
                You can also use the <see cref="P:Telerik.WebControls.GridTableView.AdditionalDataFieldNames"/> array to indicate
                RadGrid <strong>DataFieldNames</strong> that should be sorted, grouped, ect and are
                not included as columns.
            </remarks>
            <value>
            	<para><strong>false</strong>, if the <strong>GridTableView</strong> will not use all
                bindable properties from the <strong>DataSource</strong> when binding; otherwise,
                <strong>true</strong>. The default value is <strong>false.</strong></para>
            </value>
            <seealso cref="P:Telerik.WebControls.GridTableView.AdditionalDataFieldNames">AdditionalDataFieldNames Property</seealso>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.RetrieveNullAsDBNull">
            <summary>
            	<para>Gets or sets a value indicating whether <strong>null</strong> values in the
                database will be retrieved as <strong>dbnull</strong> values.</para>
            </summary>
            <value>
            	<para><strong>true</strong> if the <strong>null</strong> values in the database
                will be retrieved as <strong>dbnull</strong> values; otherwise,
                <strong>false</strong>. The default is <strong>false</strong>.</para>
            </value>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.ParentTableRelation">
            <summary>
            Gets or sets the collection of data-field pairs that describe the relations in a
            hierarchical grid.
            </summary>
            <remarks>
                If you have specified the relations <strong>RadGrid</strong> will automatically
                filter the child data-source when when binding detail-tables. The specified
                <see cref="P:Telerik.WebControls.GridRelationFields.MasterKeyField"/> in each
                <see cref="T:Telerik.WebControls.GridRelationFields"/> in this collection should be a Key that is
                specified in the parent table's <see cref="P:Telerik.WebControls.GridTableView.DataKeyNames"/> array. Each
                DetailKeyField specfied should also be included in this
                <strong>GridTableView</strong>'s DataKeyNames array.
                <strong>MasterTableView</strong> does not need any
                <strong>ParentTableRelations</strong>.
            </remarks>
            <value>
            A <strong>GridTableViewRelation</strong> collection of data-field pairs that
            describe the relations in a hierarchical grid.
            </value>
            <seealso cref="T:Telerik.WebControls.GridTableViewRelation">GridTableViewRelation Class</seealso>
            <seealso cref="P:Telerik.WebControls.GridTableView.DataKeyValues">DataKeyValues Property</seealso>
            <seealso cref="P:Telerik.WebControls.GridTableView.DataKeyNames">DataKeyNames Property</seealso>
            <seealso cref="!:http://www.telerik.com/demos/aspnet/Grid/Examples/Hierarchy/ThreeLevel/DefaultCS.aspx">Hierarchy online example</seealso>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.SelfHierarchySettings">
            <summary>
            Gets a set the options for <strong>GridTableView</strong>'s self-hierarchy
            behavior.
            </summary>
            <seealso cref="T:Telerik.WebControls.GridSelfHierarchySettings">GridSelfHierarchySettings Class</seealso>
            <value>Options for <strong>GridTableView</strong>'s self-hierarchy behavior.</value>
            <seealso cref="!:http://www.telerik.com/demos/aspnet/Grid/Examples/Hierarchy/SelfReferencing/DefaultCS.aspx">Self-referencing hierarchy online example</seealso>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.CommandItemSettings">
            <summary>Gets a set the options for <strong>GridTableView</strong>'s command item.</summary>
            <value>The options for <strong>GridTableView</strong>'s command item.</value>
            <seealso cref="T:Telerik.WebControls.GridCommandItemSettings">GridCommandItemSettings Class</seealso>
            <seealso cref="P:Telerik.WebControls.GridTableView.CommandItemDisplay">CommandItemDisplay Property</seealso>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.DataSource">
            <summary>
            	<para>Gets or sets the object from which the data-bound control retrieves its list
                of data items.</para>
            </summary>
            <remarks>
            	<para>
                    Generally the <strong>DataSource</strong> object references
                    <see cref="P:Telerik.WebControls.RadGrid.DataSource"/>. Assign this property only if you need to
                    change the default behavior or <see cref="T:Telerik.WebControls.RadGrid"/>.
                </para>
            	<para>
            		<strong>RadGrid</strong> modifies this property when
                    <see cref="P:Telerik.WebControls.RadGrid.DataSource"/> is assigned.
                </para>
            	<para>On postback the <strong>DataSource</strong> property settings are not
                persisted due to performance reasons. Note, however, that you can save the grid
                <strong>DataSource</strong> in a <strong>Session/Application/Cache</strong>
                variable and then retrieve it from there after postback invocation. Respectively,
                you can get the changes made in the data source in a dataset object and then
                operate with them.</para>
            	<para>This property cannot be set by themes or style sheet themes.</para>
            </remarks>
            <value>
            An object that represents the data source from which the
            <strong>GridTableView</strong> control retrieves its data. The default is a null
            reference (<strong>Nothing</strong> in Visual Basic).
            </value>
            <seealso cref="P:Telerik.WebControls.GridTableView.DataSourceID">DataSourceID Property</seealso>
            <seealso cref="!:http://www.telerik.com/demos/aspnet/Grid/Examples/Programming/SimpleBinding/DefaultCS.aspx">Simple data-binding online example</seealso>
            <seealso cref="!:http://www.telerik.com/demos/aspnet/Grid/Examples/Programming/Binding/DefaultCS.aspx">Various data sources online example</seealso>
            <seealso cref="T:Telerik.WebControls.GridNeedDataSourceEventHandler">GridNeedDataSourceEventHandler Delegate</seealso>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.DataSourceID">
            <summary>
            Gets or sets the ID of the <strong>DataSource</strong> control used for
            population of this <strong>GridTableView</strong> data items.
            </summary>
            <example>
            	<para class="sourcecode">[ASPX/ASCX]<br/>
                &lt;rad:RadGrid ID="RadGrid1" runat="server"
                DataSourceID="SessionDataSource1"&gt;<br/>
                 ............<br/>
                &lt;/rad:RadGrid&gt;</para>
            </example>
            <value>
            	<para>The ID of a control that represents the data source from which the data-bound
                control retrieves its data. The default is String.Empty ("").</para>
            </value>
            <remarks><para>This property cannot be set by themes or style sheet themes.</para></remarks>
            <seealso cref="P:Telerik.WebControls.GridTableView.DataSource">DataSource Property</seealso>
            <seealso cref="T:Telerik.WebControls.GridNeedDataSourceEventHandler">GridNeedDataSourceEventHandler Delegate</seealso>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.ParentItem">
            <summary>
            Gets a reference to a <strong>GridItem</strong> that is a parent of this
            <strong>GridTableView</strong>, when this <strong>GridTableView</strong> represents a
            child table in a hierarchical structure.
            </summary>
            <value>A reference to the server control's parent control.</value>
            <remarks>
            Whenever a page is requested, a hierarchy of server controls on that page is
            built. This property allows you to determine the parent control of the current server
            control in that hierarchy, and to program against it.
            </remarks>
            <remarks>
            Whenever a page is requested, a hierarchy of server controls on that page is
            built. This property allows you to determine the parent control of the current server
            control in that hierarchy, and to program against it.
            </remarks>
            <seealso cref="T:Telerik.WebControls.GridItem">GridItem Class</seealso>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.FilterExpression">
            <summary><para>Gets or sets the filtering options for grid columns.</para></summary>
            <remarks>
            In the most common case, Telerik RadGrid checks all filtering options
            for each column, then prepares a filter expression and sets this property internally. 
            <para><strong>Note:</strong> You should be careful when setting this property as it may
            break the whole filtering functionality for your grid.</para>
            	<para>More info on the way, the expressions are created you can find
            <a href="http://msdn2.microsoft.com/en-US/library/system.data.datacolumn.expression(VS.80).aspx">
            here</a> (external link to MSDN library).</para>
            </remarks>
            <example>
            	<code lang="VB" title="Set FilterExpression" description="Set FilterExpression on initial page load">
            If (Not Page.IsPostBack) Then
                        RadGrid1.MasterTableView.FilterExpression = "([Country] LIKE '&lt;see cref="Germany"/&gt;') "
             
                        Dim column As GridColumn = RadGrid1.MasterTableView.GetColumnSafe("Country")
                        column.CurrentFilterFunction = GridKnownFunction.Contains
                        column.CurrentFilterValue = "Germany"
                    End If
                </code>
            	<code lang="CS" title="Set FilterExpression" description="Set FilterExpression on initial page load">
            if (!Page.IsPostBack) 
                    {
                        RadGrid1.MasterTableView.FilterExpression = "([Country] LIKE \'&lt;see cref="Germany"/&gt;\') ";
             
                        GridColumn column = RadGrid1.MasterTableView.GetColumnSafe("Country");
                        column.CurrentFilterFunction = GridKnownFunction.Contains;
                        column.CurrentFilterValue = "Germany";
                    }
                </code>
            </example>
            <seealso cref="!:grdApplyingDefaultFilterOnInitialLoad.html" cat="RadGrid Manual">Applying default filter on initial load</seealso>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.GroupsDefaultExpanded">
            <summary>
            Gets or sets a value indicating whether the groups will be expanded on grid load
            (<strong>true</strong> by default).
            </summary>
            <value>
            	<strong>true</strong>, if the groups will be expanded on grid load; otherwise,
            <strong>false</strong>. The default value is <strong>true</strong>.
            </value>
            <seealso cref="P:Telerik.WebControls.GridTableView.GroupLoadMode">GroupLoadMode Property</seealso>
            <seealso cref="P:Telerik.WebControls.GridTableView.GroupByExpressions">GroupByExpressions Property</seealso>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.HierarchyDefaultExpanded">
            <summary>
            Gets or sets a value indicating whether the hierarchy will be expanded by
            default.
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.RowIndicatorColumn">
            <summary>
            Gets a reference to the <see cref="P:Telerik.WebControls.GridTableView.RowIndicatorColumn"/> object, allowing
            you to customize its settings.
            </summary>
            <remarks>The property setter does nothing and should not be used. It works around a bug in the VS.NET designer.</remarks>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.ExpandCollapseColumn">
            <summary>
            Gets a reference to the <see cref="P:Telerik.WebControls.GridTableView.ExpandCollapseColumn"/> object, allowing
            you to customize its settings.
            </summary>
            <remarks>The property setter does nothing and should not be used. It works around a bug in the VS.NET designer.</remarks>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.HierarchyLoadMode">
            <summary>
            	<para>
                    Gets or sets a value indicating when the <strong>DataBind</strong> of the child
                    <strong>GridTableView</strong> will occur when working in hierarchy mode.
                    Accepts values from <see cref="T:Telerik.WebControls.GridChildLoadMode"/> enumeration. See the
                    remars for details.
                </para>
            </summary>
            <remarks>
            	<para>Changing this propery value impacts the performance the following way:</para>
            	<list type="bullet">
            		<item>In <strong>ServerBind</strong> mode - Roundtrip to the database only when
                    grid is bound. ViewState holds all detail tables data. Only detail table-views
                    of the expanded items are rendered. Postback to the server to expand an
                    item</item>
            		<item>In <strong>ServerOnDemand</strong> mode - Roundtrip to the database when
                    grid is bound and when item is expanded. ViewState holds data for only visible
                    Items (smallest possible). Only detail table-views of the expanded items are
                    rendered. Postback to the server to expand an item.</item>
            		<item>In <strong>Client</strong> mode - Roundtrip to the database only when
                    grid is bound. ViewState holds all detail tables data. All items are rendered -
                    even is not visible (not expanded). NO postback to the server to expand an item
                    - expand/collapse of hierarchy items is managed client-side.<br/>
            			<strong>Note:</strong> In order to use client-side hierarchy expand, you will
                    need to set also
                    <strong><see cref="!:RadGrid.ClientSettings.AllowExpandCollapse"/></strong>
                    to <strong>true</strong>.</item>
            	</list>
            </remarks>
            <value>The default value is <strong>ServerOnDemand</strong>.</value>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.GroupLoadMode">
            <summary>
            	<para>Specifies where the grouping will be handled. There are two options:</para>
            	<list type="bullet">
            		<item>Server-side - <strong>GridTableView.GroupLoadMode.Server</strong></item>
            		<item>Client-side -
            <strong>GridTableView.GroupLoadMode.Client</strong></item></list>
            </summary>
            <remarks>
            	<para><strong>GridTableView.GroupLoadMode.Server</strong></para>
            	<para>This is the default behavior. Groups are expanded after postback to the server
            for example:</para>
            	<div class="LanguageSpecific" style="DISPLAY: block" name="Code_VB">
            		<table class="CodeContainerTable" cellspacing="0" cellpadding="0" border="0">
            			<tbody>
            				<tr>
            					<td nowrap="nowrap">
            						<pre>
            							<code inline="true">
            &lt;MasterTableView GroupLoadMode=<font color="black"><font class="string">"Server"</font>&gt;</font>
            							</code>
            						</pre></td></tr></tbody></table></div>
            	<div class="LanguageSpecific" style="DISPLAY: block" name="Code_VB">
            		<strong>GridTableView.GroupLoadMode.Client</strong></div>
            	<div class="LanguageSpecific" style="DISPLAY: block" name="Code_VB">Groups will be
            expanded client-side and no postback will be performed.<br/>
            		<div class="LanguageSpecific" style="DISPLAY: block" name="Code_VB">
            			<table class="CodeContainerTable" cellspacing="0" cellpadding="0" border="0">
            				<tbody>
            					<tr>
            						<td nowrap="nowrap">
            							<pre>
            								<code>
            &lt;MasterTableView GroupLoadMode=<font color="black"><font class="string">"Client"</font>&gt;</font>
            								</code>
            							</pre></td></tr></tbody></table></div>
            and set the client setting <strong>AllowGroupExpandCollapse</strong> to
            <strong>true:</strong><br/>
            		<div class="LanguageSpecific" style="DISPLAY: block" name="Code_VB">
            			<table class="CodeContainerTable" cellspacing="0" cellpadding="0" border="0">
            				<tbody>
            					<tr>
            						<td nowrap="nowrap">
            							<pre>
            								<code>
            &lt;ClientSettings AllowGroupExpandCollapse=<font color="black"><font class="string">"True"</font>&gt;</font>
            								</code>
            							</pre></td></tr></tbody></table></div></div>
            </remarks>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.EditMode">
            <remarks>
            	<para>There are two possible values defined by the <strong>GridEditMode</strong>
                enumeration:</para>
            	<list type="bullet">
            		<item>InPlace</item>
            		<item>EditForms</item>
            	</list>
            	<para>To display the grid column editors inline when switching grid item in edit
                mode (see the screenshot below), you simply need to change the
                <strong>EditMode</strong> property to <strong>InPlace</strong>.</para>
            	<div class="LanguageSpecific" name="Code_VB">
            		<table class="CodeContainerTable" cellspacing="0" cellpadding="0" border="0">
            			<tbody>
            				<tr>
            					<td nowrap="nowrap">
            						<pre>
            							<code>
            &lt;rad:RadGrid id=<font class="string" color="black">"RadGrid1"</font> runat=<font class="string" color="black">"server"</font>&gt;<br/>&lt;MasterTableView AutoGenerateColumns=<font class="string" color="black">"True"</font> EditMode=<font color="black"><font class="string">"InPlace"</font> /&gt;<br/>&lt;/rad:RadGrid&gt;</font>
            							</code>
            						</pre>
            					</td>
            				</tr>
            			</tbody>
            		</table>
            	</div>
            	<para class=""><img alt="A row in edit mode" src="Images/grd_EditMode_markedup.png" border="0"/></para>
            	<para>To display the grid column editors in auto-generated form when switching grid
                item in edit mode (see the screenshot below), you simply need to change the
                MasterTableView <strong>EditMode</strong> property to
                <strong>EditForms</strong>.</para>
            	<div class="LanguageSpecific">
            		<table class="CodeContainerTable" cellspacing="0" cellpadding="0" border="0">
            			<tbody>
            				<tr>
            					<td nowrap="nowrap">
            						<pre>
            							<code>
            &lt;rad:RadGrid id=<font class="string" color="black">"RadGrid1"</font> runat=<font class="string" color="black">"server"</font>&gt;<br/>&lt;MasterTableView AutoGenerateColumns=<font class="string" color="black">"True"</font> EditMode=<font color="black"><font class="string">"EditForms"</font> /&gt;<br/>&lt;/rad:RadGrid&gt;</font>
            							</code>
            						</pre>
            					</td>
            				</tr>
            			</tbody>
            		</table>
            	</div><img alt="Edit in forms mode" src="images/grd_EditInForms_thumb.png" border="0"/>
            </remarks>
            <summary>
            	<para>FormsGets or sets a value indicating how a <strong>GridItem</strong> will
                look in edit mode.</para>
            </summary>
            <value>
            A value indicating how a <strong>GridItem</strong> will look in edit mode. The
            default is <strong>EditForms</strong>.
            </value>
            <seealso cref="T:Telerik.WebControls.GridEditMode">GridEditMode Enumeration</seealso>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.AllowMultiColumnSorting">
            <summary>
                Gets or sets the value indicating wheather more than one column can be sorted in a
                single <strong>GridTableView</strong>. The order is the same as the sequence of
                expressions in <see cref="P:Telerik.WebControls.GridTableView.SortExpressions"/>.
            </summary>
            <value>
            	<strong>true</strong>, if more than one column can be sorted in a single
            <strong>GridTableView</strong>; otherwise, <strong>false</strong>. The default value is
            <strong>false</strong>.
            </value>
            <seealso cref="P:Telerik.WebControls.GridTableView.AllowSorting">AllowSorting Property</seealso>
            <seealso cref="P:Telerik.WebControls.GridTableView.SortExpressions">SortExpressions Property</seealso>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.AllowNaturalSort">
            <summary>
            Gets or sets the value indicated whether the no-sort state when changing sort
            order will be allowed.
            </summary>
            <value>
            	<strong>true</strong>, if the no-sort state when changing sort order will be
            allowed; otherwise, <strong>false</strong>. The default value is
            <strong>true</strong>.
            </value>
            <seealso cref="P:Telerik.WebControls.GridTableView.SortExpressions">SortExpressions Property</seealso>
            <seealso cref="P:Telerik.WebControls.GridTableView.AllowSorting">AllowSorting Property</seealso>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.AllowSorting">
            <summary>
            	<para>Gets or sets a value indicating whether the sorting feature is
                enabled.</para>
            </summary>
            <value>
            	<para>
            		<strong>true</strong> if the sorting feature is enabled; otherwise,
                    <strong>false</strong>. The default is <see cref="P:Telerik.WebControls.RadGrid.AllowSorting"/>.
                </para>
            </value>
            <seealso cref="P:Telerik.WebControls.GridTableView.SortExpressions">SortExpressions Property</seealso>
            <seealso cref="P:Telerik.WebControls.GridTableView.AllowCustomSorting">AllowCustomSorting Property</seealso>
            <seealso cref="P:Telerik.WebControls.GridTableView.AllowMultiColumnSorting">AllowMultiColumnSorting Property</seealso>
            <remarks>
            	<para>When a data source control that supports sorting is bound to the
                <a href="RadGrid~Telerik.WebControls.GridTableView.html">GridTableView</a>
                control, the <strong>GridTableView</strong> control can take advantage of the data
                source control's capabilities and provide automatic sorting functionality.</para>
            	<para>To enable sorting, set the <strong>AllowSorting</strong> property to
                <strong>true</strong>. When sorting is enabled, the heading text for each column
                field with its
                <a href="RadGrid~Telerik.WebControls.GridTableView~SortExpressions.html">SortExpressions</a>
                property set is displayed as a link button.</para>
            	<para>Clicking the link button for a column causes the items in the
                <strong>GridTableView</strong> control to be sorted based on the sort expression.
                Typically, the sort expression is simply the name of the field displayed in the
                column, which causes the <strong>GridTableView</strong> control to sort with
                respect to that column. To sort by multiple fields, use a sort expression that
                contains a comma-separated list of field names. You can determine the sort
                expression that the <strong>GridTableView</strong> control is applying by using the
                SortExpressions property. Clicking a column's link button repeatedly toggles the
                sort direction between ascending and descending order.</para>
            	<para><strong>Note</strong> that if you want to sort the grid by a column different
                than a GridBoundColumn, you should set also its
                <a href="RadGrid~Telerik.WebControls.GridColumn~SortExpression.html">SortExpression</a>
                property to the desired data field name you want the column to be sorted by.</para>
            </remarks>
            <notes>
            	<para>Different data sources have different requirements for enabling their sorting
                capabilities. To determine the requirements, see the documentation for the specific
                data source.</para>
            	<para>The <strong>SortExpression</strong> property for an automatically generated
                columns field is automatically populated. If you define your own columns through
                the <a href="RadGrid~Telerik.WebControls.GridColumnCollection.html">Columns</a>
                collection, you must set the <strong>SortExpression</strong> property for each
                column; otherwise, the column will not display the link button in the
                header.</para>
            </notes>
            <seealso cref="P:Telerik.WebControls.GridTableView.AllowNaturalSort">AllowNaturalSort Property</seealso>
            <seealso cref="P:Telerik.WebControls.GridTableView.SortExpressions">SortExpressions Property</seealso>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.AllowFilteringByColumn">
            <summary>
            	<para>Gets or sets a value indicating whether the filtering by column feature is
                enabled.</para>
            </summary>
            <value>
            	<para>
            		<strong>true</strong> if the filtering by column feature is enabled; otherwise,
                    <strong>false</strong>. Default value is the value of
                    <see cref="P:Telerik.WebControls.RadGrid.AllowFilteringByColumn"/>.
                </para>
            </value>
            <remarks>
            	<para>
                    When the value is true, <strong>GridTableView</strong> will display the
                    filtering item, under the table's header item. The filtering can be controlled
                    based on a column through column properties:
                    <see cref="P:Telerik.WebControls.GridColumn.FilterListOptions"/> ,
                    <see cref="P:Telerik.WebControls.GridColumn.CurrentFilterFunction"/>,
                    <see cref="P:Telerik.WebControls.GridColumn.CurrentFilterValue"/>. The column
                    <see cref="M:Telerik.WebControls.GridColumn.SupportsFiltering"/> method is used to determine if
                    a column can be used with filtering. Generally, this function returns the value
                    set to AllowFiltering for a specific column. For example
                    <see cref="T:Telerik.WebControls.GridBoundColumn"/> will return the values of
                    <see cref="P:Telerik.WebControls.GridBoundColumn.AllowFiltering"/> property.
                </para>
            </remarks>
            <seealso cref="T:Telerik.WebControls.GridFilteringItem">GridFilteringItem Class</seealso>
            <seealso cref="!:http://www.telerik.com/demos/aspnet/Grid/Examples/GeneralFeatures/Filtering/DefaultCS.aspx">Basic filtering online example</seealso>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.AutoGenerateColumns">
            <summary>
            Gets or sets a value indicating whether Telerik RadGrid will
            automatically generate columns at runtime based on its
            <a href="RadGrid~Telerik.WebControls.GridTableView~DataSource.html">DataSource</a>.
            </summary>
            <value>
            	<para>
                    A value indicating whether Telerik RadGrid will automatically
                    generate columns at runtime based on its <strong>DataSource</strong>. The
                    default value is the value of <strong>RadGrid</strong>'s property
                    <see cref="P:Telerik.WebControls.RadGrid.AutoGenerateColumns"/>.
                </para>
            </value>
            <seealso cref="P:Telerik.WebControls.GridTableView.AutoGeneratedColumns">AutoGeneratedColumns Property</seealso>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.DetailTableIndex">
            <summary>For internal usage.</summary>
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.ChildSelectedItems">
            <summary>
            	<para>
                    Gets all items among the hierarchy of
                    <a href="RadGrid~Telerik.WebControls.GridTableView.html">GridTableView</a>
                    items that are selected. The selected items in a <strong>GridTableView</strong>
                    are cleared when <see cref="P:Telerik.WebControls.GridTableView.ParentItem"/> collapses and the
                    <strong>ParentItem</strong> becomes selected.
                </para>
            </summary>
            <value>
            A <strong>GridItemCollection</strong> of items among the hierarchy of
            <strong>GridTableView</strong> items that are selected.
            </value>
            <seealso cref="T:Telerik.WebControls.GridItemCollection">GridItemCollection Class</seealso>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.ChildEditItems">
            <summary>
            	<para>
                    Gets all items among the hierarchy of
                    <a href="RadGrid~Telerik.WebControls.GridTableView.html">GridTableView</a>
                    items that are in edit mode. The edit items in a <strong>GridTableView</strong>
                    are cleared when <see cref="P:Telerik.WebControls.GridTableView.ParentItem"/> collapses.
                </para>
            </summary>
            <value>A GridItemCollection of items that are in edit mode.</value>
            <seealso cref="T:Telerik.WebControls.GridItemCollection">GridItemCollection Class</seealso>
            <seealso cref="P:Telerik.WebControls.GridTableView.EditMode">EditMode Property</seealso>
            <seealso cref="P:Telerik.WebControls.GridTableView.EditFormSettings">EditFormSettings Property</seealso>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.EnableColumnsViewState">
            <summary>
            Gets or sets a value indicating whether all columns settings will be persisted in
            the ViewState or not.
            </summary>
            <value>
            	<strong>true</strong> if columns are kept in the view state; otherwise
            <strong>false</strong>. The default value is <strong>true</strong>.
            </value>
            <requirements>
                Set this property to false if you need to change dynamically the
                <see cref="P:Telerik.WebControls.GridTableView.Columns"/> structure of the <strong>RadGrid</strong>.
            </requirements>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.AllowCustomSorting">
            <summary>Gets or sets if the custom sorting feature is enabled.</summary>
            <remarks>
                With custom sorting turned on, RadGrid will display as Sorting Icons, will maintain
                the SortExpressions collection and so on, but it will not actually sort the Data.
                You should perform the custom sorting in the SortCommand event handler. You can
                also use the <see cref="M:Telerik.WebControls.GridSortExpressionCollection.GetSortString"/> method,
                which will return the sort expressions string in the same format as it wold be used
                by a DataView component.
            </remarks>
            <value>
            	<strong>true</strong>, if custom sorting feature is enabled; otherwise,
            <strong>false</strong>. The default value is <strong>false</strong>.
            </value>
            <seealso cref="P:Telerik.WebControls.GridTableView.AllowSorting">AllowSorting Property</seealso>
            <seealso cref="P:Telerik.WebControls.GridTableView.SortExpressions">SortExpressions Property</seealso>
            <seealso cref="T:Telerik.WebControls.GridSortCommandEventHandler">GridSortCommandEventHandler Delegate</seealso>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.AllowCustomPaging">
            <summary>Gets or sets if the custom paging feature is enabled.</summary>
            <value>
            	<strong>true</strong>, if the custom paging feature is enabled; otherwise,
                <strong>false</strong>. Default value is the value of
                <see cref="P:Telerik.WebControls.RadGrid.AllowCustomPaging"/>.
            </value>
            <seealso cref="P:Telerik.WebControls.GridTableView.AllowPaging">AllowPaging Property</seealso>
            <seealso cref="!:http://www.telerik.com/demos/aspnet/Grid/Examples/Programming/CustomPaging/DefaultCS.aspx">Custom paging online example</seealso>
            <remarks>
                There are cases in which you may want to fetch only a fixed number of records and
                perform operations over this specified set of data. Telerik RadGrid allows such
                data manipulation through the custom paging mechanism integrated in the control.
                The main steps you need to undertake are: 
                <list type="bullet">
            		<item>Set <b>AllowPaging = true</b> and <b>AllowCustomPaging = true</b> for
                    your grid instance</item>
            		<item>Implement code logic which to extract merely a fixed number of records
                    from the grid source and present them in the grid structure</item>
            		<item>The total number of records in the grid source should be defined through
                    the <b>VirtualItemCount</b> property of the MasterTableView/GridTableView
                    instance. Thus the grid "understands" that the data source contains the
                    specified number of records and it should fetch merely part of them at a time
                    to execute requested operation.</item>
            	</list>Another available option for custom paging support is through the
                ObjectDataSource control custom paging feature:<br/>
            	<a href="http://www.telerik.com/help/radgrid/v4_Net2/?grdCustomPagingThroughObjectDataSourcePopulation.html">
                Custom paging with ObjectDataSource grid content generator</a>
            </remarks>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.AllowPaging">
            <summary><para>Gets or sets a value indicating whether the paging feature is enabled.</para></summary>
            <value>
            	<para>
            		<strong>true</strong> if the paging feature is enabled; otherwise,
                    <strong>false</strong>. The default is <see cref="P:Telerik.WebControls.RadGrid.AllowPaging"/>.
                </para>
            </value>
            <seealso cref="P:Telerik.WebControls.GridTableView.PageCount">PageCount Property</seealso>
            <seealso cref="P:Telerik.WebControls.GridTableView.PageSize">PageSize Property</seealso>
            <seealso cref="P:Telerik.WebControls.GridTableView.PagingManager">PagingManager Property</seealso>
            <seealso cref="P:Telerik.WebControls.GridTableView.PagerStyle">PagerStyle Property</seealso>
            <seealso cref="P:Telerik.WebControls.GridTableView.RenderPagerStyle">RenderPagerStyle Property</seealso>
            <seealso cref="P:Telerik.WebControls.GridTableView.PagerTemplate">PagerTemplate Property</seealso>
            <seealso cref="P:Telerik.WebControls.GridTableView.CurrentPageIndex">CurrentPageIndex Property</seealso>
            <seealso cref="P:Telerik.WebControls.GridTableView.CurrentResetPageIndexAction">CurrentResetPageIndexAction Property</seealso>
            <remarks>
            	<para>Instead of displaying all the records in the data source at the same time,
                the <a href="RadGrid~Telerik.WebControls.GridTableView.html">GridTableView</a>
                control can automatically break the records up into pages. If the data source
                supports the paging capability, the <strong>GridTableView</strong> control can take
                advantage of that and provide built-in paging functionality. The paging feature can
                be used with any data source object that supports the
                <em>System.Collections.ICollection</em> interface or a data source that supports
                paging capability.</para>
            	<para>To enable the paging feature, set the <strong>AllowPaging</strong> property
                to <strong>true</strong>. By default, the <strong>GridTableView</strong> control
                displays 10 records on a page at a time. You can change the number of records
                displayed on a page by setting the
                <a href="RadGrid~Telerik.WebControls.GridTableView~PageSize.html">PageSize</a>
                property. To determine the total number of pages required to display the data
                source contents, use the
                <a href="RadGrid~Telerik.WebControls.GridTableView~PageCount.html">PageCount</a>
                property. You can determine the index of the currently displayed page by using the
                <a href="RadGrid~Telerik.WebControls.GridTableView~CurrentPageIndex.html">CurrentPageIndex</a>
                property.</para>
            	<para>When paging is enabled, an additional row called the pager item is
                automatically displayed in the <strong>GridTableView</strong> control. The pager
                row contains controls that allow the user to navigate to the other pages. You can
                control the settings of the pager row (such as the pager display mode, the number
                of page links to display at a time, and the pager control's text labels) by using
                the
                <a href="RadGrid~Telerik.WebControls.GridTableView~PagerStyle.html">PagerStyle</a>
                properties. The pager row can be displayed at the top, bottom, or both the top and
                bottom of the control by setting the
                <a href="RadGrid~Telerik.WebControls.GridPagerStyle~Position.html">Position</a>
                property. You can also select from one of six built-in pager display modes by
                setting the <a href="RadGrid~Telerik.WebControls.GridPagerMode.html">Mode</a>
                property.</para>
            	<para>The <strong>GridTableView</strong> control also allows you to define a custom
                template for the pager row. For more information on creating a custom pager row
                template, see
                <a href="RadGrid~Telerik.WebControls.GridTableView~PagerTemplate.html">PagerTemplate</a>.</para>
            	<para>The <strong>GridTableView</strong> control provides an event that you can use
                to perform a custom action when paging occurs.</para>
            	<para>
            		<list type="table">
            			<item>
            				<term>Event</term>
            				<description>Description</description>
            			</item>
            			<item>
            				<term>
            					<see cref="!:PageIndexChanged"/>
            				</term>
            				<description>Occurs when one of the pager buttons is clicked, but after
                            the <b>GridTableView</b> control handles the paging operation. This
                            event is commonly used when you need to perform a task after the user
                            navigates to a different page in the control.</description>
            			</item>
            		</list>
            	</para>
            </remarks>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.CanRetrieveAllData">
            <summary><para>Gets or sets a value indicating whether Telerik RadGrid should retrieve all data and ignore server paging in case of filtering or grouping.</para></summary>
            <value>
            	<para>
            		<strong>true</strong> (default) if the retrieve all data feature is enabled; otherwise,
                    <strong>false</strong>.
                </para>
            </value>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.PageSize">
            <summary>
            	<para>
                    Specify the maximum number of items that would appear in a page, when paging is
                    enabled by <see cref="P:Telerik.WebControls.GridTableView.AllowPaging"/> or
                    <see cref="P:Telerik.WebControls.GridTableView.AllowCustomPaging"/> property. Default value is the value of
                    <see cref="P:Telerik.WebControls.RadGrid.PageSize"/>.
                </para>
            </summary>
            <value>The number of records to display on a single page. The default is 10.</value>
            <exception cref="T:System.ArgumentOutOfRangeException" caption="ArgumentOutOfRangeException">The PageSize property is set to a value less than 1.</exception>
            <remarks>
            When the paging feature is enabled (by setting the
            <a href="RadGrid~Telerik.WebControls.GridTableView~AllowPaging.html">AllowPaging</a>
            property to true), use the <strong>PageSize</strong> property to specify the number of
            records to display on a single page.
            </remarks>
            <value><para>The number of records to display on a single page. The default is 10.</para></value>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.AllowAutomaticUpdates">
            <summary>
            Gets or sets a value indicating whether Telerik RadGrid will perform
            automatic updates, i.e. using the <strong>DataSource</strong> controls
            functionality.
            </summary>
            <value>
            	<strong>true</strong>, if Telerik RadGrid will perform automatic
            updates; otherwise, <strong>false</strong>. The default value is
            <strong>false</strong>.
            </value>
            <seealso cref="!:http://www.telerik.com/demos/aspnet/Grid/Examples/DataEditing/AllEditableColumns/DefaultCS.aspx">Automatic operations online example</seealso>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.AllowAutomaticInserts">
            <summary>
            Gets or sets a value indicating whether Telerik RadGrid will perform
            automatic inserts, i.e. using the <strong>DataSource</strong> controls
            functionality.
            </summary>
            <value>
            	<strong>true</strong>, if the Telerik RadGrid will perform automatic
            inserts; otherwise, <strong>false</strong>. The default value is
            <strong>false</strong>.
            </value>
            <seealso cref="!:http://www.telerik.com/demos/aspnet/Grid/Examples/DataEditing/AllEditableColumns/DefaultCS.aspx">Automatic operations online example</seealso>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.AllowAutomaticDeletes">
            <summary>
            Gets or sets a value indicating whether Telerik RadGrid will perform
            automatic deletes, i.e. using the <strong>DataSource</strong> controls
            functionality.
            </summary>
            <value>
            	<strong>true</strong>, if Telerik RadGrid will perform automatic
            deletes; otherwise, <strong>false</strong>. The default value is
            <strong>false</strong>.
            </value>
            <seealso cref="!:http://www.telerik.com/demos/aspnet/Grid/Examples/DataEditing/AllEditableColumns/DefaultCS.aspx">Automatic operations online example</seealso>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.Columns">
            <summary>
            	<para>Gets a collection of
                <a href="RadGrid~Telerik.WebControls.GridColumn.html">GridColumn</a> objects
                that represent the column fields in a
                <a href="RadGrid~Telerik.WebControls.GridTableView.html">GridTableView</a>
                control.</para>
            </summary>
            <value>
            A
            <a href="RadGrid~Telerik.WebControls.GridColumnCollection.html">GridColumnCollection</a>
            that contains all the column fields in the <strong>GridTableView</strong>
            control.
            </value>
            <remarks>
            	<para>A column field represents a column in a <strong>GridTableView</strong>
                control. The <strong>Columns</strong> property (collection) is used to store all
                the explicitly declared column fields that get rendered in the GridTableView
                control. You can also use the <strong>Columns</strong> collection to
                programmatically manage the collection of column fields.</para>
            	<para>The column fields are displayed in the <strong>GridTableView</strong> control
                in the order that the column fields appear in the <strong>Columns</strong>
                collection.</para>
            	<para>
                    To get a list of all columns rendered in the current instance use
                    <see cref="P:Telerik.WebControls.GridTableView.RenderColumns"/>
            	</para>
            	<para>Although you can programmatically add column fields to the
                <strong>Columns</strong> collection, it is easier to list the column fields
                declaratively in the <strong>GridTableView</strong> control and then use the
                <a href="RadGrid~Telerik.WebControls.GridColumn~Visible.html">Visible</a>
                property of each column field to show or hide each column field.</para>
            	<para>If the <strong>Visible</strong> property of a column field is set to false,
                the column is not displayed in the <strong>GridTableView</strong> control and the
                data for the column does not make a round trip to the client. If you want the data
                for a column that is not visible to make a round trip, add the field name to the
                <a href="RadGrid~Telerik.WebControls.GridTableView~DataKeyNames.html">DataKeyNames</a>
                property.</para>
            	<para>This property can be managed programmatically or by Property Builder (IDE
                designer).</para>
            </remarks>
            <notes>
            Explicitly declared column fields can be used in combination with automatically
            generated column fields. When both are used, explicitly declared column fields are
            rendered first, followed by the automatically generated column fields. Automatically
            generated column fields are not added to the <strong>Columns</strong>
            collection.
            </notes>
            <seealso cref="T:Telerik.WebControls.GridColumnCollection">GridColumnCollection Class</seealso>
            <seealso cref="T:Telerik.WebControls.GridColumn">GridColumn Class</seealso>
            <seealso cref="!:http://www.telerik.com/demos/aspnet/Grid/Examples/GeneralFeatures/ColumnTypes/DefaultCS.aspx">Column types online example</seealso>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.PageCount">
            <summary>
            	<para>Gets the number of pages required to display the records of the data source
                in a <a href="RadGrid~Telerik.WebControls.GridTableView.html">GridTableView</a>
                control.</para>
            </summary>
            <value>The number of pages in a <strong>GridTableView</strong> control.</value>
            <remarks>
            When the paging feature is enabled (by setting the
            <a href="RadGrid~Telerik.WebControls.GridTableView~AllowPaging.html">AllowPaging
            Property</a> to <strong>true</strong>), use the <strong>PageCount</strong> property to
            determine the total number of pages required to display the records in the data source.
            This value is calculated by dividing the total number of records in the data source by
            the number of records displayed in a page (as specified by the
            <a href="RadGrid~Telerik.WebControls.GridTableView~PageSize.html">PageSize</a>
            property) and rounding up.
            </remarks>
            <seealso cref="P:Telerik.WebControls.GridTableView.AllowPaging">AllowPaging Property</seealso>
            <seealso cref="P:Telerik.WebControls.GridTableView.AllowCustomPaging">AllowCustomPaging Property</seealso>
            <seealso cref="P:Telerik.WebControls.GridTableView.PageSize">PageSize Property</seealso>
            <seealso cref="P:Telerik.WebControls.GridTableView.PagingManager">PagingManager Property</seealso>
            <seealso cref="P:Telerik.WebControls.GridTableView.PagerStyle">PagerStyle Property</seealso>
            <seealso cref="P:Telerik.WebControls.GridTableView.PagerTemplate">PagerTemplate Property</seealso>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.DataSourceCount">
            <summary>Gets the number of pages if paging is enabled.</summary>
            <value>The number of pages if paging is enabled.</value>
            <seealso cref="P:Telerik.WebControls.GridTableView.AllowPaging">AllowPaging Property</seealso>
            <seealso cref="P:Telerik.WebControls.GridTableView.AllowCustomPaging">AllowCustomPaging Property</seealso>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.ResolvedDataSourceView">
            <summary>
                Gets a DataView object that represents the data sent to the
                <see cref="T:Telerik.WebControls.GridTableView"/> to be displayed.
            </summary>
            <value>A result DataView object of all grid operations.</value>
            <remarks>
                ResolvedDataSourceView is available only in <see cref="!:ItemDataBound"/> event
                handler i.e. when the grid is bound.
            </remarks>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.PagingManager">
            <summary>
            Gets a Paging object that is the result of paging settings and runtime paging
            state of the grid.
            </summary>
            <value>
            A
            <a href="RadGrid~Telerik.WebControls.GridPagingManager.html">GridPagingManager</a>
            object that corresponds to the Paging object.
            </value>
            <remarks>
            	<strong>Note</strong> that changes made to this object would <u>not</u> have
            effect on the structure of the grid.
            </remarks>
            <seealso cref="P:Telerik.WebControls.GridTableView.AllowPaging">AllowPaging Property</seealso>
            <seealso cref="P:Telerik.WebControls.GridTableView.PageSize">PageSize Property</seealso>
            <seealso cref="P:Telerik.WebControls.GridTableView.PageCount">PageCount Property</seealso>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.SortExpressions">
            <summary>
            Gets a collection of sort expressions for this table view instance, associated
            with the column or columns being sorted.
            </summary>
            <remarks>
            	<para>
                    Modifying the <strong>SortExpressions</strong> collection will result in change
                    of the order of appearance of items in the table view. If
                    <see cref="P:Telerik.WebControls.GridTableView.AllowMultiColumnSorting"/> is set to false this collection can
                    only contain one item. Adding other <see cref="T:Telerik.WebControls.GridSortExpression"/> in
                    the collection in this case will cause existing expression to be deleted or if
                    GridSortExpression with the same same
                    <see cref="P:Telerik.WebControls.GridSortExpression.FieldName"/> exist its
                    <see cref="P:Telerik.WebControls.GridSortExpression.SortOrder"/> will be changed.
                </para>
            	<para>This property's value is preserved in the ViewState.</para>
            </remarks>
            <seealso cref="T:Telerik.WebControls.GridSortExpressionCollection">GridSortExpressionCollection Class</seealso>
            <seealso cref="P:Telerik.WebControls.GridTableView.AllowSorting">AllowSorting Property</seealso>
            <seealso cref="P:Telerik.WebControls.GridTableView.AllowCustomSorting">AllowCustomSorting Property</seealso>
            <seealso cref="P:Telerik.WebControls.GridTableView.AllowMultiColumnSorting">AllowMultiColumnSorting Property</seealso>
            <value>
            The collection of sort expressions associated with the column or columns being
            sorted.
            </value>
            <seealso cref="!:http://www.telerik.com/demos/aspnet/Grid/Examples/Programming/Sort/DefaultCS.aspx">Advanced sorting online example</seealso>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.GroupByExpressions">
            <summary>
                Adding <see cref="T:Telerik.WebControls.GridGroupByExpression"/> to this collection will cause the
                current table-view to display items sorted and devided in groups separated by
                <see cref="T:Telerik.WebControls.GridGroupHeaderItem"/>s, that display common group and aggregate
                field values. See <see cref="P:Telerik.WebControls.GridGroupByExpression.Expression"/> on details of
                expressions syntax.
            </summary>
            <remarks>
            	<strong>Note</strong> that the correctness of the expressions in the collection is
                checked when DataBind occures. Then if an expression in not correct or a
                combination of expressions is erroneous a <see cref="T:Telerik.WebControls.GridGroupByException"/>
                would be thrown on <see cref="M:Telerik.WebControls.GridTableView.DataBind"/>. This property's value is preserved
                in the ViewState.
            </remarks>
            <value>
            A GroupByExpressionCollection of values that will cause the current table-view to
            display items sorted and devided in groups separated by
            <strong>GridGroupHeaderItem</strong>s, that display common group and aggregate field
            values.
            </value>
            <seealso cref="!:http://www.telerik.com/demos/aspnet/Grid/Examples/GroupBy/Expressions/DefaultCS.aspx">Group-By expressions online example</seealso>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.AutoGeneratedColumns">
            <seealso cref="P:Telerik.WebControls.GridTableView.RenderColumns"/>
            <seealso cref="P:Telerik.WebControls.GridTableView.Columns"/>
            <seealso cref="P:Telerik.WebControls.GridTableView.RenderColumns"/>
            <seealso cref="P:Telerik.WebControls.GridTableView.Columns"/>
            <summary>
                Get an array of automatically generated columns. This array is available when
                <see cref="P:Telerik.WebControls.RadGrid.AutoGenerateColumns"/> is set to true. Autogenerated
                columns appear always after <see cref="P:Telerik.WebControls.GridTableView.Columns"/> when rendering.
            </summary>
            <value>An array of automatically generated columns.</value>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.EditFormSettings">
            <summary>
            Gets a value defining the setting that will be applied when an Item is in edit
            mode and the <see cref="P:Telerik.WebControls.GridTableView.EditMode"/> property is set to
            <strong>EditForms</strong>.
            </summary>
            <example>
            	<para><font face="Courier New">[ASPX/ASCX]</font></para>
            	<para><font face="Courier New">&lt;MasterTableView&gt;<br/>
                &lt;<font style="BACKGROUND-COLOR: #edb078" color="white">EditFormSettings</font>
                CaptionFormatString='&lt;img src=<font class="string" color="black">"img/editRowBg.gif"</font> alt=<font class="string" color="black">""</font>
                /&gt;</font><font face="Courier New"><font color="black"><font class="comment">'&gt;</font><br/>
                &lt;FormMainTableStyle GridLines=<font class="string">"None"</font>
                CellSpacing=<font class="string">"0"</font>
                CellPadding=<font class="string">"3"</font>
                Width=<font class="string">"100%"</font>
                CssClass=<font class="string">"none"</font>/&gt;<br/>
                &lt;FormTableStyle CssClass=<font class="string">"EditRow"</font>
                CellSpacing=<font class="string">"0"</font>
                BorderColor=<font class="string">"#c4c0b5"</font>
                CellPadding=<font class="string">"2"</font>
                Width=<font class="string">"100%"</font>/&gt;<br/>
                &lt;FormStyle Width=<font class="string">"100%"</font>
                BackColor=<font class="string">"#ffffe1"</font></font>&gt;&lt;/FormStyle&gt;<br/>
                &lt;/<font style="BACKGROUND-COLOR: #edb078" color="white">EditFormSettings</font>&gt;</font></para>
            </example>
            <seealso cref="T:Telerik.WebControls.GridEditFormSettings">GridEditFormSettings Class</seealso>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.DataSourcePersistenceMode">
            <summary>
            Use this property to determine how <strong>DataSource</strong> of the
            <strong>GridTableView</strong> will be persisted on <strong>PostBack</strong>.
            </summary>
            <remarks>
            	<para>
                    Some operations in Telerik RadGrid, like groupings or hierarchical
                    views expand/collapse, require that the
                    <strong>DataSourcePersistenceMode</strong> is set to
                    <see cref="F:Telerik.WebControls.GridDataSourcePersistenceMode.ViewState"/>.
                </para>
            	<para>
                    If no data is persisted for items in Telerik RadGrid
                    (<strong>NoPersistence</strong> mode) then the state of items is lost on
                    postback. Generally, datasource persistence optimization should be used if the
                    small size/speed of a page, showing Telerik RadGrid, is crucial to
                    the application.<br/>
                    If the value of this property is
                    <see cref="F:Telerik.WebControls.GridDataSourcePersistenceMode.NoPersistence"/>, RadGrid will
                    call <strong>NeedDataSource</strong> and will bind after each post back, to
                    restore its items.
                </para>
            	<para><strong>RadGrid</strong> manages the state of the following features with
                <strong>NoPersistence</strong> mode:</para>
            	<list type="bullet">
            		<item>indexes of selected items</item>
            		<item>indexes of edited items</item>
            		<item>group-by expressions</item>
            		<item>sort expressions</item>
            		<item>style properties (but not if any style is applied on a single cell or row
                    in ItemDataBound event)</item>
            		<item>column order</item>
            		<item>other column properties</item>
            		<item>hierarchy structure</item>
            	</list>
            	<para>RadGrid does NOT manage the state in NoPersistence mode for the
                following:</para>
            	<list type="bullet">
            		<item>custom edit forms (user control or form template)</item>
            		<item>filtering</item>
            	</list>
            </remarks>
            <value>
            Returns <strong>ViewState</strong> if Telerik RadGrid will persist
            the <strong>DataSource</strong> in its <strong>ViewState</strong>, otherwise
            <strong>NoPersistence</strong>. The default value is <strong>ViewState</strong>.
            </value>
            <seealso cref="T:Telerik.WebControls.GridDataSourcePersistenceMode">GridDataSourcePersistenceMode Enumeration</seealso>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.Caption">
            <summary>
            	<para>Gets or sets a string that specifies a brief description of a
                <a href="RadGrid~Telerik.WebControls.GridTableView.html">GridTableView</a>.
                Related to Telerik RadGrid accessibility compliance.</para>
            </summary>
            <value>
            A string that represents the text to render in an HTML caption element in a
            <strong>GridTableView</strong> control. The default value is an empty string
            ("").
            </value>
            <remarks>
            	<para>Use the <strong>Caption</strong> property to specify the text to render in an
                HTML caption element in a <strong>GridTableView</strong> control. The text that you
                specify provides assistive technology devices with a description of the table that
                can be used to make the control more accessible.</para>
            </remarks>
            <seealso cref="P:Telerik.WebControls.GridTableView.Summary">Summary Property</seealso>
            <example>
            	<pre>
            The following example demonstrates how to style the Caption of a MasterTableView and detail GridTableView.
            </pre>
            	<pre>
            &lt;head runat="server"&gt;<br/>    &lt;title&gt;Untitled Page&lt;/title&gt;<br/>    &lt;style type="text/css"&gt;<br/>
            		<font color="red">.MasterTable_Default caption</font><br/>            {<br/>             color: red;<br/>            }   
                </pre>
            	<pre>
            		<font color="red">.DetailTable_Default caption<br/></font>            {<br/>             color: blue;<br/>            }<br/>
            		<br/>    &lt;/style&gt;<br/>&lt;/head&gt;<br/>&lt;body&gt;<br/>&lt;form id="form1" runat="server"&gt;<br/>&lt;div&gt;<br/>&lt;rad:RadGrid runat="server" ID="RadGrid1" DataSourceID="SqlDataSource1" AllowPaging="true"<br/>AllowMultiRowEdit="true" OnItemCommand="RadGrid1_ItemCommand" &gt;<br/>&lt;MasterTableView EditMode="EditForms" DataKeyNames="CustomerID" <font color="red">Caption="Master Caption"</font> CommandItemDisplay="Top"&gt;<br/> 
            &lt;Columns&gt;<br/>&lt;rad:GridEditCommandColumn&gt;<br/>&lt;/rad:GridEditCommandColumn&gt;<br/>&lt;/Columns&gt;<br/>&lt;DetailTables&gt;<br/>&lt;rad:GridTableView DataKeyNames="OrderID" DataSourceID="SqlDataSource2" <font color="red">Caption="Detail Caption" CssClass="DetailTable_Default"</font>&gt;<br/>&lt;ParentTableRelation&gt;<br/>&lt;rad:GridRelationFields DetailKeyField="CustomerID" MasterKeyField="CustomerID" /&gt;<br/>&lt;/ParentTableRelation&gt;<br/>&lt;/rad:GridTableView&gt;<br/>&lt;/DetailTables&gt;<br/>&lt;/MasterTableView&gt;<br/>&lt;/rad:RadGrid&gt;<br/>&lt;asp:SqlDataSource ID="SqlDataSource1" runat="server" ConnectionString="&lt;/%$ ConnectionStrings:NorthwindConnectionString2/%&gt;"<br/>SelectCommand="SELECT [CustomerID], [CompanyName], [ContactName], [ContactTitle] FROM [Customers]"&gt;<br/>&lt;/asp:SqlDataSource&gt;<br/>&lt;asp:SqlDataSource ID="SqlDataSource2" runat="server" ConnectionString="&lt;/%$ ConnectionStrings:NorthwindConnectionString2/%&gt;"<br/>SelectCommand="SELECT [OrderID], [CustomerID], [ShipCountry] FROM [Orders] WHERE ([CustomerID] = @CustomerID)"&gt;<br/>&lt;SelectParameters&gt;<br/>&lt;asp:Parameter Name="CustomerID" Type="String" /&gt;<br/>&lt;/SelectParameters&gt;<br/>&lt;/asp:SqlDataSource&gt;<br/>&lt;/div&gt;<br/>&lt;/form&gt;<br/>&lt;/body&gt;
            </pre>
            </example>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.Summary">
            <summary>Gets or sets the 'summary' attribute for the respective table.</summary>
            <remarks>
            This attribute provides a summary of the table's purpose and structure for user
            agents rendering to non-visual media such as speech and Braille. This property is a
            part of Telerik RadGrid accessibility features.
            </remarks>
            <value>
            A string representation of the 'summary' attribute for the respective
            table.
            </value>
            <seealso cref="P:Telerik.WebControls.GridTableView.Caption">Caption Property</seealso>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.Dir">
            <summary>
            	<para>Gets or sets the text direction. This property is related to Telerik RadGrid support
            for Right-To-Left lanugages. It has two possible vales defined by
            <see cref="T:Telerik.WebControls.GridTableTextDirection"/> enumeration:</para>
            	<list type="bullet">
            		<item>LTR - left-to-right text</item>
            		<item>RTL - right-to-left text</item></list>
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.Frame">
            <remarks>
            	<para>The frame attribute for a table specifies which sides of the frame surrounding
            the table will be visible. Possible values:</para>
            	<list type="bullet">
            		<item><strong>void</strong>: No sides. <strong>This is the default
            value</strong>.</item>
            		<item><strong>above</strong>: The top side only.</item>
            		<item><strong>below</strong>: The bottom side only.</item>
            		<item><strong>hsides</strong>: The top and bottom sides only.</item>
            		<item><strong>vsides</strong>: The right and left sides only.</item>
            		<item><strong>lhs</strong>: The left-hand side only.</item>
            		<item><strong>rhs</strong>: The right-hand side only.</item>
            		<item><strong>box</strong>: All four sides.</item>
            		<item><strong>border</strong>: All four sides</item></list>
            </remarks>
            <summary>Gets or sets a value specifying the frame table attribute.</summary>
            <value>
            A
            <a href="RadGrid~Telerik.WebControls.GridTableFrame.html">GridTableFrame</a> value,
            specifying the frame table attribute.
            </value>
            <seealso cref="T:Telerik.WebControls.GridTableFrame">GridTableFrame Enumeration</seealso>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.TableLayout">
            <seealso cref="T:Telerik.WebControls.GridTableLayout">GridTableLayout Enumeration</seealso>
            <value>
            	<para>
                    A
                    <a href="RadGrid~Telerik.WebControls.GridTableLayout.html">GridTableLayout</a>
                    value, indicating the table layout type. The default value is
                    <see cref="F:Telerik.WebControls.GridTableLayout.Fixed"/>.
                </para>
            </value>
            <summary>Gets or sets a string that indicates whether the table layout is fixed.</summary>
            <remarks>
            	<para>
                    The value of the TableLayout property is a <strong>string</strong> that
                    specifies or receives one of the following <strong>GridTableLayout</strong>
                    enumeration values: 
                    <list type="table">
            			<item>
            				<term><span class="clsDefValue">Auto</span></term>
            				<description>Column width is set by the widest unbreakable content in
                            the column cells.</description>
            			</item>
            			<item>
            				<term><span class="clsLiteral">Fixed</span></term>
            				<description>
                                Default. Table and column widths are set either by the sum of the
                                widths on the <see cref="P:Telerik.WebControls.GridTableView.Columns"/> objects or, if these are
                                not specified, by the width of the first row of cells. If no width
                                is specified for the table, it renders by default with width=100%.
                            </description>
            			</item>
            		</list>
            	</para>
            </remarks>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.ItemStyle">
            <summary>
            	<para>Gets a reference to the
                <a href="RadGrid~Telerik.WebControls.GridTableItemStyle.html">GridTableItemStyle</a>
                object that allows you to set the appearance of items in a
                <a href="RadGrid~Telerik.WebControls.GridTableView.html">GridTableView</a>
                control.</para>
            </summary>
            <value>
                A reference to the <strong>GridTableItemStyle</strong> that represents the style of
                data items in a <strong>GridTableView</strong> control. If style is not altered (is
                default) <see cref="P:Telerik.WebControls.RadGrid.ItemStyle"/> is used.
            </value>
            <seealso cref="P:Telerik.WebControls.GridTableView.AlternatingItemStyle">AlternatingItemStyle Property</seealso>
            <seealso cref="P:Telerik.WebControls.GridTableView.CommandItemStyle">CommandItemStyle Property</seealso>
            <seealso cref="P:Telerik.WebControls.GridTableView.FooterStyle">FooterStyle Property</seealso>
            <seealso cref="P:Telerik.WebControls.GridTableView.HeaderStyle">HeaderStyle Property</seealso>
            <seealso cref="P:Telerik.WebControls.GridTableView.SelectedItemStyle">SelectedItemStyle Property</seealso>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.RenderItemStyle">
            <summary>Gets the rendering style of an Item.</summary>
            <value>
                A reference to the <strong>GridTableItemStyle</strong> that represents the
                rendering style of the item. If <see cref="P:Telerik.WebControls.GridTableView.ItemStyle"/> is not specified the
                return value is OwnerGrid.<see cref="P:Telerik.WebControls.RadGrid.ItemStyle"/>.
            </value>
            <seealso cref="T:Telerik.WebControls.GridTableItemStyle">GridTableItemStyle Class</seealso>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.GroupHeaderItemStyle">
            <summary>Manage visual style of the group header items.</summary>
            <value>
                A reference to the <strong>GridTableItemStyle</strong> that represents the style of
                the group header items. If style is not altered (is default)
                <see cref="P:Telerik.WebControls.RadGrid.GroupHeaderItemStyle"/> is used.
            </value>
            <seealso cref="T:Telerik.WebControls.GridTableItemStyle">GridTableItemStyle Class</seealso>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.RenderGroupHeaderItemStyle">
            <summary>Gets the rendering style of the group header items.</summary>
            <value>
                A reference to the <strong>GridTableItemStyle</strong> that represents the
                rendering style of the group header items. If
                <see cref="P:Telerik.WebControls.GridTableView.GroupHeaderItemStyle"/> is not specified the return value is
                OwnerGrid.<see cref="P:Telerik.WebControls.RadGrid.GroupHeaderItemStyle"/>.
            </value>
            <seealso cref="T:Telerik.WebControls.GridTableItemStyle">GridTableItemStyle Class</seealso>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.AlternatingItemStyle">
            <summary>
            	<para>Gets a reference to the
                <a href="RadGrid~Telerik.WebControls.GridTableItemStyle.html">GridTableItemStyle</a>
                object that allows you to set the appearance of alternating items in a
                <a href="RadGrid~Telerik.WebControls.GridTableView.html">GridTableView</a>
                control.</para>
            </summary>
            <value>
                A reference to the <strong>GridTableItemStyle</strong> that represents the style of
                alternating data items in a <strong>GridTableView</strong> control. If style is not
                altered (is default) <see cref="P:Telerik.WebControls.RadGrid.AlternatingItemStyle"/> is used.
            </value>
            <remarks>
            	<para>Use the <strong>AlternatingItemStyle</strong> property to control the
                appearance of alternating items in a <strong>GridTableView</strong> control. When
                this property is set, the items are displayed alternating between the
                <a href="RadGrid~Telerik.WebControls.GridTableView~ItemStyle.html">ItemStyle</a>
                settings and the <strong>AlternatingItemStyle</strong> settings. This property is
                read-only; however, you can set the properties of the
                <strong>GridTableItemStyle</strong> object it returns. The properties can be set
                declaratively using one of the following methods:</para>
            	<list type="bullet">
            		<item>Place an attribute in the opening tag of the
                    <strong>GridTableView</strong> control in the form
                    <strong>Property-Subproperty</strong>, where <strong>Subproperty</strong> is a
                    property of the <strong>GridTableItemStyle</strong> object (for example,
                    AlternatingItemStyle-ForeColor).</item>
            		<item>Nest an &lt;AlternatingItemStyle&gt; element between the opening and
                    closing tags of the GridTableView control.</item>
            	</list>
            	<para>The properties can also be set programmatically in the form
                <strong>Property.Subproperty</strong> (for example,
                AlternatingItemStyle.ForeColor). Common settings usually include a custom
                background color, foreground color, and font properties.</para>
            </remarks>
            <seealso cref="T:Telerik.WebControls.GridTableItemStyle">GridTableItemStyle Class</seealso>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.RenderAlternatingItemStyle">
            <summary>Gets the rendering style of the AlternatingItem.</summary>
            <seealso cref="T:Telerik.WebControls.GridTableItemStyle">GridTableItemStyle Class</seealso>
            <value>
                A reference to the <strong>GridTableItemStyle</strong> that represents the
                rendering style of the AlternatingItem. If <see cref="P:Telerik.WebControls.GridTableView.AlternatingItemStyle"/>
                is not specified the return value is
                OwnerGrid.<see cref="P:Telerik.WebControls.RadGrid.AlternatingItemStyle"/>.
            </value>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.EditItemStyle">
            <summary>
            	<para>Gets a reference to the
                <a href="RadGrid~Telerik.WebControls.GridTableItemStyle.html">GridTableItemStyle</a>
                object that allows you to set the appearance of the item selected for editing in a
                <a href="RadGrid~Telerik.WebControls.GridTableView.html">GridTableView</a>
                control.</para>
            </summary>
            <value>
            	<para>
                    A reference to the <strong>GridTableItemStyle</strong> that represents the
                    style of the row being edited in a GridTableView control. If style is not
                    altered (is default) <see cref="P:Telerik.WebControls.RadGrid.EditItemStyle"/> is used.
                </para>
            </value>
            <remarks>
            	<para>Use the <strong>EditItemStyle</strong> property to control the appearance of
                the item in edit mode. This property is read-only; however, you can set the
                properties of the <strong>GridTableItemStyle</strong> object it returns. The
                properties can be set declaratively using one of the following methods:</para>
            	<list type="bullet">
            		<item>Place an attribute in the opening tag of the
                    <strong>GridTableView</strong> control in the form
                    <strong>Property-Subproperty</strong>, where <strong>Subproperty</strong> is a
                    property of the <strong>GridTableItemStyle</strong> object (for example,
                    <strong>EditItemStyle-ForeColor</strong>).</item>
            		<item>Nest an &lt;<strong>EditItemStyle</strong>&gt; element between the
                    opening and closing tags of the <strong>GridTableView</strong> control.</item>
            	</list>
            	<para>The properties can also be set programmatically in the form
                <strong>Property.Subproperty</strong> (for example,
                <strong>EditItemStyle.ForeColor</strong>). Common settings usually include a custom
                background color, foreground color, and font properties.</para>
            </remarks>
            <seealso cref="P:Telerik.WebControls.GridTableView.ItemStyle">ItemStyle Property</seealso>
            <seealso cref="P:Telerik.WebControls.GridTableView.GroupHeaderItemStyle">GroupHeaderItemStyle Property</seealso>
            <seealso cref="P:Telerik.WebControls.GridTableView.AlternatingItemStyle">AlternatingItemStyle Property</seealso>
            <seealso cref="P:Telerik.WebControls.GridTableView.PagerStyle">PagerStyle Property</seealso>
            <seealso cref="P:Telerik.WebControls.GridTableView.HeaderStyle">HeaderStyle Property</seealso>
            <seealso cref="P:Telerik.WebControls.GridTableView.FilterItemStyle">FilterItemStyle Property</seealso>
            <seealso cref="P:Telerik.WebControls.GridTableView.CommandItemStyle">CommandItemStyle Property</seealso>
            <seealso cref="P:Telerik.WebControls.GridTableView.FooterStyle">FooterStyle Property</seealso>
            <seealso cref="P:Telerik.WebControls.GridTableView.SelectedItemStyle">SelectedItemStyle Property</seealso>
            <seealso cref="T:Telerik.WebControls.GridTableItemStyle">GridTableItemStyle Class</seealso>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.RenderEditItemStyle">
            <summary>Gets the rendering style of an edit Item.</summary>
            <value>
                A reference to the <strong>GridTableItemStyle</strong> that represents the
                rendering style of an edit item. If <see cref="P:Telerik.WebControls.GridTableView.EditItemStyle"/> is not
                specified the return value is OwnerGrid.<see cref="P:Telerik.WebControls.RadGrid.EditItemStyle"/>.
            </value>
            <seealso cref="T:Telerik.WebControls.GridTableItemStyle">GridTableItemStyle Class</seealso>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.PagerStyle">
            <summary>
            Gets a reference to the
            <a href="RadGrid~Telerik.WebControls.GridPagerStyle.html">GridPagerStyle</a> object
            that allows you to set the appearance of the pager item in a
            <a href="RadGrid~Telerik.WebControls.GridTableView.html">GridTableView</a>
            control.
            </summary>
            <value>
                A reference to the <strong>GridPagerStyle</strong> that represents the style of the
                pager item in a <strong>GridTableView</strong> control. If style is not altered (is
                default) <see cref="P:Telerik.WebControls.RadGrid.PagerStyle"/> is used.
            </value>
            <remarks>
            	<para>Use the <strong>PagerStyle</strong> property to control the appearance of the
                pager item in a <strong>GridTableView</strong> control. The pager item is displayed
                when the paging feature is enabled (by setting the <strong>AllowPaging</strong>
                property to <strong>true</strong>) and contains the controls that allow the user to
                navigate to the different pages in the control. This property is read-only;
                however, you can set the properties of the GridPagerStyle object it returns. The
                properties can be set declaratively using one of the following methods:</para>
            	<list type="bullet">
            		<item>Place an attribute in the opening tag of the
                    <strong>GridTableView</strong> control in the form
                    <strong>Property-Subproperty</strong>, where <strong>Subproperty</strong> is a
                    property of the <strong>GridPagerStyle</strong> object (for example,
                    <strong>PagerStyle-ForeColor</strong>).</item>
            		<item>Nest a <strong>&lt;PagerStyle&gt;</strong> element between the opening
                    and closing tags of the <strong>GridTableView</strong> control.</item>
            	</list>
            	<para>The properties can also be set programmatically in the form
                <strong>Property.Subproperty</strong> (for example,
                <strong>PagerStyle.ForeColor</strong>). Common settings usually include a custom
                background color, foreground color, and font properties.</para>
            </remarks>
            <seealso cref="P:Telerik.WebControls.GridTableView.ItemStyle">ItemStyle Property</seealso>
            <seealso cref="P:Telerik.WebControls.GridTableView.AlternatingItemStyle">AlternatingItemStyle Property</seealso>
            <seealso cref="P:Telerik.WebControls.GridTableView.HeaderStyle">HeaderStyle Property</seealso>
            <seealso cref="P:Telerik.WebControls.GridTableView.FooterStyle">FooterStyle Property</seealso>
            <seealso cref="P:Telerik.WebControls.GridTableView.SelectedItemStyle">SelectedItemStyle Property</seealso>
            <seealso cref="T:Telerik.WebControls.GridTableItemStyle">GridTableItemStyle Class</seealso>
            <seealso cref="!:http://www.telerik.com/demos/aspnet/Grid/Examples/Styles/HeaderFooterPagerStyles/DefaultCS.aspx">Styling Header, Footer and Pager items online example</seealso>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.RenderPagerStyle">
            <summary>Gets the rendering style of the Pager item.</summary>
            <value>
                A reference to the GridTableItemStyle that represents the rendering style of the
                pager item. If <see cref="P:Telerik.WebControls.GridTableView.PagerStyle"/> is not specified the return value is
                OwnerGrid.<see cref="P:Telerik.WebControls.RadGrid.PagerStyle"/>.
            </value>
            <seealso cref="T:Telerik.WebControls.GridTableItemStyle">GridTableItemStyle Class</seealso>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.HeaderStyle">
            <summary>
            	<para>Gets a reference to the
                <a href="RadGrid~Telerik.WebControls.GridTableItemStyle.html">GridTableItemStyle</a>
                object that allows you to set the appearance of the header item in a
                <a href="RadGrid~Telerik.WebControls.GridTableView.html">GridTableView</a>
                control.</para>
            </summary>
            <value>
            	<para>
                    A reference to the <strong>GridTableItemStyle</strong> that represents the
                    style of the header row in a <strong>GridTableView</strong> control. If style
                    is not altered (is default) <see cref="P:Telerik.WebControls.RadGrid.HeaderStyle"/> is used.
                </para>
            </value>
            <remarks>
            	<para>Use the <strong>HeaderStyle</strong> property to control the appearance of
                the header item in a <strong>GridTableView</strong> control. This property is
                read-only; however, you can set the properties of the
                <strong>GridTableItemStyle</strong> object it returns. The properties can be set
                declaratively using one of the following methods:</para>
            	<list type="bullet">
            		<item>Place an attribute in the opening tag of the
                    <strong>GridTableView</strong> control in the form
                    <strong>Property-Subproperty</strong>, where <strong>Subproperty</strong> is a
                    property of the GridTableItemStyle object (for example,
                    <strong>HeaderStyle-ForeColor</strong>).</item>
            		<item>Nest a <strong>&lt;HeaderStyle&gt;</strong> element between the opening
                    and closing tags of the GridTableView control.</item>
            	</list>
            	<para>The properties can also be set programmatically in the form
                <strong>Property.Subproperty</strong> (for example,
                <strong>HeaderStyle.ForeColor</strong>). Common settings usually include a custom
                background color, foreground color, and font properties.</para>
            </remarks>
            <seealso cref="P:Telerik.WebControls.GridTableView.ItemStyle">ItemStyle Property</seealso>
            <seealso cref="P:Telerik.WebControls.GridTableView.AlternatingItemStyle">AlternatingItemStyle Property</seealso>
            <seealso cref="P:Telerik.WebControls.GridTableView.EditItemStyle">EditItemStyle Property</seealso>
            <seealso cref="P:Telerik.WebControls.GridTableView.FooterStyle">FooterStyle Property</seealso>
            <seealso cref="P:Telerik.WebControls.GridTableView.SelectedItemStyle">SelectedItemStyle Property</seealso>
            <seealso cref="T:Telerik.WebControls.GridTableItemStyle">GridTableItemStyle Class</seealso>
            <seealso cref="!:http://www.telerik.com/demos/aspnet/Grid/Examples/Styles/HeaderFooterPagerStyles/DefaultCS.aspx">Styling Header, Footer and Pager items online example</seealso>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.RenderHeaderStyle">
            <summary>Gets the rendering style of a GridHeaderItem.</summary>
            <value>
                A reference to the GridTableItemStyle that represents the rendering style of the
                GridHeaderItem. If <see cref="P:Telerik.WebControls.GridTableView.HeaderStyle"/> is not specified the return value
                is OwnerGrid.<see cref="P:Telerik.WebControls.RadGrid.HeaderStyle"/>.
            </value>
            <seealso cref="T:Telerik.WebControls.GridTableItemStyle">GridTableItemStyle Class</seealso>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.FilterItemStyle">
            <summary>
            Gets a reference to the
            <a href="RadGrid~Telerik.WebControls.GridTableItemStyle.html">GridTableItemStyle</a>
            object that allows you to set the appearance of the filter item in a
            <a href="RadGrid~Telerik.WebControls.GridTableView.html">GridTableView</a>
            control.
            </summary>
            <value>
            A reference to the <strong>GridTableItemStyle</strong> that represents the style
            of the filter item.
            </value>
            <seealso cref="T:Telerik.WebControls.GridTableItemStyle">GridTableItemStyle Class</seealso>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.RenderFilterItemStyle">
            <summary>Gets the rendering style of a FilterItem.</summary>
            <value>
                A reference to the <strong>GridTableItemStyle</strong> that represents the
                rendering style of a FilterItem. If <see cref="P:Telerik.WebControls.GridTableView.FilterItemStyle"/> is not
                specified the return value is OwnerGrid.<see cref="P:Telerik.WebControls.RadGrid.FilterItemStyle"/>
            </value>
            <seealso cref="T:Telerik.WebControls.GridTableItemStyle">GridTableItemStyle Class</seealso>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.CommandItemStyle">
            <summary>
            Gets a referenct to the
            <a href="RadGrid~Telerik.WebControls.GridTableItemStyle.html">GridTableItemStyle</a>
            object that allows you to set the appearance of the command item in a
            <a href="RadGrid~Telerik.WebControls.GridTableView.html">GridTableView</a>
            control.
            </summary>
            <value>
            A reference to the <strong>GridTableItemStyle</strong> that represents the style
            of the command item.
            </value>
            <seealso cref="T:Telerik.WebControls.GridTableItemStyle">GridTableItemStyle Class</seealso>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.RenderCommandItemStyle">
            <summary>Gets the rendering style of a CommandItem.</summary>
            <value>
                A reference to the <strong>GridTableItemStyle</strong> that represents the
                rendering style of a CommandItem. If <see cref="P:Telerik.WebControls.GridTableView.CommandItemStyle"/> is not
                specified the return value is
                OwnerGrid.<see cref="P:Telerik.WebControls.RadGrid.CommandItemStyle"/>.
            </value>
            <seealso cref="T:Telerik.WebControls.GridTableItemStyle">GridTableItemStyle Class</seealso>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.RenderActiveItemStyle">
            <summary>Gets the rendering style of an ActiveItem.</summary>
            <value>
            A reference to the <strong>GridTableItemStyle</strong> that represents the
            rendering style of an ActiveItem.
            </value>
            <seealso cref="T:Telerik.WebControls.GridTableItemStyle">GridTableItemStyle Class</seealso>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.FooterStyle">
            <summary>Manage visual style of the footer item.</summary>
            <value>
                A reference to the <strong>GridTableItemStyle</strong> that represents the style of
                the footer item. If style is not altered (is default)
                <see cref="P:Telerik.WebControls.RadGrid.FooterStyle"/> is used.
            </value>
            <seealso cref="T:Telerik.WebControls.GridTableItemStyle">GridTableItemStyle Class</seealso>
            <seealso cref="!:http://www.telerik.com/demos/aspnet/Grid/Examples/Styles/HeaderFooterPagerStyles/DefaultCS.aspx ">Styling Header, Footer and Pager items online example</seealso>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.RenderFooterStyle">
            <summary>Gets the rendering style of an FooterItem.</summary>
            <value>
                A reference to the <strong>GridTableItemStyle</strong> that represents the
                rendering style of an FooterItem. If <see cref="P:Telerik.WebControls.GridTableView.FooterStyle"/> is not
                specified the return value is OwnerGrid.<see cref="P:Telerik.WebControls.RadGrid.FooterStyle"/>.
            </value>
            <seealso cref="T:Telerik.WebControls.GridTableItemStyle">GridTableItemStyle Class</seealso>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.SelectedItemStyle">
            <summary>
            Gets a reference to the
            <a onclick="javascript:navigateToHelp2Keyword('frlrfSystemWebUIWebControlsStyleClassTopic','System.Web.UI.WebControls.Style')" href="#">Style</a> object that allows you to set the appearance of the selected item
               in a <a href="RadGrid~Telerik.WebControls.GridTableView.html">GridTableView</a>
               control.
            </summary>
            <value>
            	<para>
                    A reference to the <strong>Style</strong> object that represents the style of
                    the selected item in a <strong>GridTableView</strong> control. If style is not
                    altered (is default) <see cref="P:Telerik.WebControls.RadGrid.SelectedItemStyle"/> is used.
                </para>
            </value>
            <remarks>
            	<para>Use the <strong>SelectedItemStyle</strong> property to control the appearance
                of the selected item in a GridTableView control. This property is read-only;
                however, you can set the properties of the <strong>Style</strong> object it
                returns. The properties can be set declaratively using one of the following
                methods:</para>
            	<list type="bullet">
            		<item>Place an attribute in the opening tag of the
                    <strong>GridTableView</strong> control in the form
                    <strong>Property-Subproperty</strong>, where <strong>Subproperty</strong> is a
                    property of the <strong>Style</strong> object (for example,
                    <strong>SelectedItemStyle-ForeColor</strong>).</item>
            		<item>Nest a <strong>&lt;SelectedRowStyle&gt;</strong> element between the
                    opening and closing tags of the <strong>GridTableView</strong> control.</item>
            	</list>
            	<para>The properties can also be set programmatically in the form
                <strong>Property.Subproperty</strong> (for example,
                <strong>SelectedItemStyle.ForeColor</strong>). Common settings usually include a
                custom background color, foreground color, and font properties.</para>
            </remarks>
            <example>
            	<para>The following code example demonstrates how to use the
                <strong>SelectedItemStyle</strong> property to define a custom style for the
                selected item in a <strong>GridTableView</strong> control.</para>
            	<para>[ASPX/ASCX]</para>
            	<para>&lt;rad:RadGrid ID="RadGrid1" runat="server"&gt;<br/>
                ..........<br/>
                &lt;SelectedItemStyle BackColor="#FFE0C0" /&gt;<br/>
                &lt;/rad:RadGrid&gt;</para>
            	<code lang="VB" title="[New Example]">
            RadGrid1.SelectedItemStyle.BackColor = System.Drawing.Color.Azure
                </code>
            	<code lang="CS" title="[New Example]">
            RadGrid1.SelectedItemStyle.BackColor = System.Drawing.Color.Azure;
                </code>
            </example>
            <seealso cref="P:Telerik.WebControls.GridTableView.ItemStyle">ItemStyle Property</seealso>
            <seealso cref="P:Telerik.WebControls.GridTableView.AlternatingItemStyle">AlternatingItemStyle Property</seealso>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.Name">
            <summary>
            Gets or sets the name of the
            <a href="RadGrid~Telerik.WebControls.GridTableView.html">GridTableView</a>.
            </summary>
            <value>
            The string representation of the Name of the <strong>GridTableView</strong> it is
            assigned to. The default is String.Empty ("").
            </value>
            <remarks>
            The <strong>Name</strong> property can be used distinguish different
            <strong>GridTableView</strong> instances. Often used to set different settings for
            different views conditionally.
            </remarks>
            <example>
            	<para>The following example demonstrates different action on</para>
            	<para>[ASPX/ASCX]</para>&lt;script type="text/javascript" &gt;<br/>
                function OnRowDblClick(index)<br/>
                {<br/>
                 if(this.Name == "MasterTableView")<br/>
                 {<br/>
                 alert("Cliecked row with index " + index + " of the MasterTableView");<br/>
                 }<br/>
                 if(this.Name == "DetailTableView1")<br/>
                 {<br/>
                 alert("Clicked row with index " + index + " of the first detail table");<br/>
                 }<br/>
                 if(this.Name == "DetailTableView2")<br/>
                 {<br/>
                 alert("Clicked row with index " + index + " of the second detail table");<br/>
                 }<br/>
                }<br/>
                &lt;/script&gt;<br/>
            	<br/>
                &lt;rad:RadGrid ID="RadGrid1" runat="server" &gt;<br/>
                 &lt;MasterTableView Name="MasterTableView"&gt;<br/>
                 &lt;DetailTables&gt;<br/>
                 &lt;rad:GridTableView Name="DetailTableView1" &gt;<br/>
                 &lt;/rad:GridTableView&gt;<br/>
                 &lt;rad:GridTableView Name="DetailTableView2"&gt;<br/>
                 &lt;/rad:GridTableView&gt;<br/>
                 &lt;/DetailTables&gt;<br/>
                 &lt;/MasterTableView&gt;<br/>
                 &lt;ClientSettings&gt;<br/>
                 &lt;ClientEvents OnRowDblClick="OnRowDblClick"&gt;&lt;/ClientEvents&gt;<br/>
                 &lt;/ClientSettings&gt;<br/>
                &lt;/rad:RadGrid&gt;
            </example>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.ShowHeader">
            <summary>
                Gets or sets a value indicating if the <see cref="T:Telerik.WebControls.GridHeaderItem"/> will be
                shown in the current <strong>GridTableView</strong>.
            </summary>
            <value>
            	<strong>true</strong>, if the <strong>GridHeaderItem</strong> will be shown in
            the current <strong>GridTableView</strong>; otherwise, <strong>false</strong>. The
            default value is <strong>true</strong>.
            </value>
            <seealso cref="P:Telerik.WebControls.GridTableView.ShowFooter">ShowFooter Property</seealso>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.ShowFooter">
            <summary>
                Gets or sets a value indicating if the <see cref="T:Telerik.WebControls.GridFooterItem"/> will be
                shown in the current <strong>GridTableView</strong>.
            </summary>
            <value>
            	<strong>true</strong>, if the <strong>GridFooterItem</strong> will be shown in
            the current <strong>GridTableView</strong>; otherwise, <strong>false</strong>. The
            default value is <strong>false</strong>.
            </value>
            <seealso cref="P:Telerik.WebControls.GridTableView.ShowHeader">ShowHeader Property</seealso>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.RenderColumns">
            <summary>
            Gets an array of all columns that are used when rendering the grid
            instance.
            </summary>
            <value>An array of all columns that are used when rendering the grid instance.</value>
            <remarks>
                Modifying the array would <u>not</u> affect rendering as it is regenerated before
                each data-bind. To modify the list of columns available use
                <see cref="P:Telerik.WebControls.GridTableView.Columns"/> property.
            </remarks>
            <seealso cref="P:Telerik.WebControls.GridTableView.Columns">Columns Property</seealso>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.ItemsHierarchy">
            <summary>
            	<para>
                    Gets a collection of all data items of a grid table view and items that belong
                    to child tables of the <strong>GridTableView</strong> if the hierarchy is
                    expanded. The items are collected depth-first. The property
                    <see cref="P:Telerik.WebControls.RadGrid.Items"/> actually referres to
                    <strong>ItemsHierarchy</strong> of<br/>
            		<see cref="P:Telerik.WebControls.RadGrid.MasterTableView"/>. This property can be used to
                    traverse all<br/>
                    DataItems items in the hiearchy of a <strong>GridTableView</strong>.
                </para>
            </summary>
            <value>
            A <strong>GridDataItemCollection</strong> of all data items of a grid table view
            and items that belong to child tables of the <strong>GridTableView</strong> if the
            hierarchy is expanded.
            </value>
            <seealso cref="T:Telerik.WebControls.GridDataItem">GridDataItem Class</seealso>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.Items">
            <summary>
            	<para>Gets a collection of GridDataItem objects that represent the data items in a
                <a href="RadGrid~Telerik.WebControls.GridDataItem.html">GridDataItem</a>
                control.</para>
            </summary>
            <remarks>
            The <strong>Items</strong> property (collection) is used to store the data items
            in a <strong>GridTableView</strong> control. The <strong>GridTableView</strong> control
            automatically populates the Items collection by creating a
            <strong>GridDataItem</strong> object for each record in the data source and then adding
            each object to the collection. This property is commonly used to access a specific item
            in the control or to iterate though the entire collection of items.
            </remarks>
            <value>
            A <strong>GridDataItemCollection</strong> that contains all the data items in a
            <strong>GridTableView</strong> control
            </value>
            <seealso cref="T:Telerik.WebControls.GridDataItem">GridDataItem Class</seealso>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.VirtualItemCount">
            <seealso cref="P:Telerik.WebControls.GridTableView.AllowCustomPaging">AllowCustomPaging Property</seealso>
            <commentsfrom cref="P:Telerik.WebControls.RadGrid.VirtualItemCount" filter=""/>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.CurrentPageIndex">
            <summary>
            Gets or sets a value indicating the index of the currently active page in case
            paging is enabled (<see cref="P:Telerik.WebControls.RadGrid.AllowPaging"/> is
            <strong>true</strong>).
            </summary>
            <value>The index of the currently active page in case paging is enabled.</value>
            <seealso cref="P:Telerik.WebControls.GridTableView.AllowCustomPaging">AllowCustomPaging Property</seealso>
            <seealso cref="P:Telerik.WebControls.GridTableView.AllowPaging">AllowPaging Property</seealso>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.ShowHeadersWhenNoRecords">
            <summary>
            If set to true (the default)
            <a href="RadGrid~Telerik.WebControls.GridNoRecordsItem.html">GridNoRecordsItem</a>
            is used to display no records template. This item is the only one displayed in the
            <strong>GridTableView</strong> in this case.
            </summary>
            <seealso cref="P:Telerik.WebControls.GridTableView.NoRecordsTemplate">NoRecordsTemplate Property</seealso>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.HasDetailTables">
            <summary>
            Gets a value indicating if the <strong>GridTableView</strong> instance has
            children (Detail) tables.
            </summary>
            <value>
            	<strong>true</strong>, if the <strong>GridTableView</strong> instance has
            children (Detail) tables; otherwise, <strong>false</strong>.
            </value>
            <seealso cref="P:Telerik.WebControls.GridTableView.DetailTables">DetailTables Property</seealso>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.ID">
            <summary>
            Gets or sets the programmatic identifier assigned to the current
            <a href="RadGrid~Telerik.WebControls.GridTableView.html">GridTableView</a>.
            </summary>
            <remarks>
            	<para>This property is set automatically by <strong>RadGrid</strong> object that
                owns this instance.</para>
            </remarks>
            <value>The programmatic identifier assigned to the control.</value>
            <notes>
            Only combinations of alphanumeric characters and the underscore character ( _ )
            are valid values for this property. Including spaces or other invalid characters will
            cause an ASP.NET page parser error.
            </notes>
            <seealso cref="P:Telerik.WebControls.GridTableView.OwnerID">OwnerID Property</seealso>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.RequiresBinding">
            <summary>
            Gets or sets a value indicating whether <strong>RadGrid</strong> will be built on
            PreRender unless it was built before that. This property is supposed for
            Telerik RadGrid internal usage, yet you can set it with care.
            </summary>
            <value>
            	<strong>true</strong>, if the <strong>RadGrid</strong> will be built on
            PreRender; otherwise, <strong>false</strong>.
            </value>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.HierarchyIndex">
            <summary>
            The unique hierarchy index of the current table view, generated when it is
            binding.
            </summary>
            <value>The hierarchy index of the current table view.</value>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.ItemsCreated">
            <summary>
            Indicates whether the items have been created, generally by data-binding.
            </summary>
            <value>
            	<strong>true</strong>, if the items have beed created; otherwise,
            <strong>false</strong>.
            </value>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.UID">
            <summary>
            This property is used internally by <strong>RadGrid</strong> and it is not
            intended to be used directly from your code.
            </summary>
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.PagerTemplate">
            <summary>
            	<para>Gets or sets the custom content for the pager item in a
                <a href="RadGrid~Telerik.WebControls.GridTableView.html">GridTableView</a>
                control.</para>
            </summary>
            <value>
            A
            <a href="http://msdn2.microsoft.com/en-us/library/system.web.ui.itemplate.aspx">System.Web.UI.ITemplate</a>
            that contains the custom content for the pager item. The default value is null, which
            indicates that this property is not set.
            </value>
            <remarks>
            If this template is set, <strong>RadGrid</strong> will not create the default
            pager controls.
            </remarks>
            <seealso cref="P:Telerik.WebControls.GridTableView.AllowPaging">AllowPaging Property</seealso>
            <seealso cref="P:Telerik.WebControls.GridTableView.PagingManager">PagingManager Property</seealso>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.CommandItemTemplate">
            <summary>
            	<para>Gets or sets the template that will be instantiated in the CommandItem. If
                this template is set, <strong>RadGrid</strong> will not create the default
                CommandItem controls.</para>
            </summary>
            <value>
            A
            <a href="http://msdn2.microsoft.com/en-us/library/system.web.ui.itemplate.aspx">System.Web.UI.ITemplate</a>
            object that contains the custom content for the pager item. The default value is null,
            which indicates that this property is not set.
            </value>
            <seealso cref="T:Telerik.WebControls.GridCommandItem">GridCommandItem Class</seealso>
            <seealso cref="P:Telerik.WebControls.GridTableView.CommandItemSettings">CommandItemSettings Property</seealso>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.IsItemInserted">
            <summary>
            Gets or sets a value indicating if the <strong>GridTableView</strong> is
            currently in insert mode.
            </summary>
            <value>
            	<strong>true</strong>, if the <strong>GridTableView</strong> is currently in
            insert mode; otherwise, <strong>false</strong>.
            </value>
            <remarks>
                The ItemInserted property indicates if the <strong>GridTableView</strong> is
                currently in insert mode. After setting it you should call the
                <see cref="M:Telerik.WebControls.GridTableView.Rebind"/> method. You can also use the
                <see cref="M:Telerik.WebControls.GridTableView.InsertItem"/> method, that will also reposition the grid to show
                the last page, where the newly inserted item is generally displayed.
            </remarks>
        </member>
        <member name="P:Telerik.WebControls.GridTableView.CommandItemDisplay">
            <summary>
            	<para>Gets or sets the default position of the GridCommandItem as defined by the
            <see cref="T:Telerik.WebControls.GridCommandItemDisplay"/>. The possible values are:</para>
            	<list type="bullet">
            		<item>None - this is the default value - the command item will not be rendered</item>
            		<item>Top - the command item will be rendered on the top of the grid</item>
            		<item>Bottom - the command item will be rendered on the bottom of the grid</item>
            		<item>TopAndBottom - the command item will be rendered both on top and bottom of the
            grid.</item></list>
            </summary>
            <value>
            A
            <a href="RadGrid~Telerik.WebControls.GridCommandItemDisplay.html">GridCommandItemDisplay</a>
            proprty which define the default position of the
            <a href="RadGrid~Telerik.WebControls.GridCommandItem.html">GridCommandItem</a>.
            </value>
            <seealso cref="T:Telerik.WebControls.GridCommandItemDisplay">GridCommandItemDisplay Enumeration</seealso>
        </member>
        <member name="T:Telerik.WebControls.GridRelationFields">
            <summary>
            corresponding fields from a master-detail relation
            </summary>
        </member>
        <member name="T:Telerik.WebControls.GridTableViewRelation">
            <summary>
                <para>
                  A collection that stores <see cref="T:Telerik.WebControls.GridRelationFields"/> objects.
               </para>
            </summary>
            <seealso cref="T:Telerik.WebControls.GridTableViewRelation"/>
        </member>
        <member name="M:Telerik.WebControls.GridTableViewRelation.#ctor">
            <summary>
                <para>
                  Initializes a new instance of <see cref="T:Telerik.WebControls.GridTableViewRelation"/>.
               </para>
            </summary>
        </member>
        <member name="M:Telerik.WebControls.GridTableViewRelation.#ctor(Telerik.WebControls.GridTableViewRelation)">
            <summary>
                <para>
                  Initializes a new instance of <see cref="T:Telerik.WebControls.GridTableViewRelation"/> based on another <see cref="T:Telerik.WebControls.GridTableViewRelation"/>.
               </para>
            </summary>
            <param name="value">
                  A <see cref="T:Telerik.WebControls.GridTableViewRelation"/> from which the contents are copied
            </param>
        </member>
        <member name="M:Telerik.WebControls.GridTableViewRelation.#ctor(Telerik.WebControls.GridRelationFields[])">
            <summary>
                <para>
                  Initializes a new instance of <see cref="T:Telerik.WebControls.GridTableViewRelation"/> containing any array of <see cref="T:Telerik.WebControls.GridRelationFields"/> objects.
               </para>
            </summary>
            <param name="value">
                  A array of <see cref="T:Telerik.WebControls.GridRelationFields"/> objects with which to intialize the collection
            </param>
        </member>
        <member name="M:Telerik.WebControls.GridTableViewRelation.Add(Telerik.WebControls.GridRelationFields)">
            <summary>
               <para>Adds a <see cref="T:Telerik.WebControls.GridRelationFields"/> with the specified value to the 
               <see cref="T:Telerik.WebControls.GridTableViewRelation"/> .</para>
            </summary>
            <param name="value">The <see cref="T:Telerik.WebControls.GridRelationFields"/> to add.</param>
            <returns>
               <para>The index at which the new element was inserted.</para>
            </returns>
            <seealso cref="M:Telerik.WebControls.GridTableViewRelation.AddRange(Telerik.WebControls.GridRelationFields[])"/>
        </member>
        <member name="M:Telerik.WebControls.GridTableViewRelation.AddRange(Telerik.WebControls.GridRelationFields[])">
            <summary>
            <para>Copies the elements of an array to the end of the <see cref="T:Telerik.WebControls.GridTableViewRelation"/>.</para>
            </summary>
            <param name="value">
               An array of type <see cref="T:Telerik.WebControls.GridRelationFields"/> containing the objects to add to the collection.
            </param>
            <returns>
              <para>None.</para>
            </returns>
            <seealso cref="M:Telerik.WebControls.GridTableViewRelation.Add(Telerik.WebControls.GridRelationFields)"/>
        </member>
        <member name="M:Telerik.WebControls.GridTableViewRelation.AddRange(Telerik.WebControls.GridTableViewRelation)">
            <summary>
                <para>
                  Adds the contents of another <see cref="T:Telerik.WebControls.GridTableViewRelation"/> to the end of the collection.
               </para>
            </summary>
            <param name="value">
               A <see cref="T:Telerik.WebControls.GridTableViewRelation"/> containing the objects to add to the collection.
            </param>
            <returns>
              <para>None.</para>
            </returns>
            <seealso cref="M:Telerik.WebControls.GridTableViewRelation.Add(Telerik.WebControls.GridRelationFields)"/>
        </member>
        <member name="M:Telerik.WebControls.GridTableViewRelation.Contains(Telerik.WebControls.GridRelationFields)">
            <summary>
            <para>Gets a value indicating whether the 
               <see cref="T:Telerik.WebControls.GridTableViewRelation"/> contains the specified <see cref="T:Telerik.WebControls.GridRelationFields"/>.</para>
            </summary>
            <param name="value">The <see cref="T:Telerik.WebControls.GridRelationFields"/> to locate.</param>
            <returns>
            <para><see langword="true"/> if the <see cref="T:Telerik.WebControls.GridRelationFields"/> is contained in the collection; 
              otherwise, <see langword="false"/>.</para>
            </returns>
            <seealso cref="M:Telerik.WebControls.GridTableViewRelation.IndexOf(Telerik.WebControls.GridRelationFields)"/>
        </member>
        <member name="M:Telerik.WebControls.GridTableViewRelation.CopyTo(Telerik.WebControls.GridRelationFields[],System.Int32)">
            <summary>
            <para>Copies the <see cref="T:Telerik.WebControls.GridTableViewRelation"/> values to a one-dimensional <see cref="T:System.Array"/> instance at the 
               specified index.</para>
            </summary>
            <param name="array"><para>The one-dimensional <see cref="T:System.Array"/> that is the destination of the values copied from <see cref="T:Telerik.WebControls.GridTableViewRelation"/> .</para></param>
            <param name="index">The index in <paramref name="array"/> where copying begins.</param>
            <returns>
              <para>None.</para>
            </returns>
            <exception cref="T:System.ArgumentException"><para><paramref name="array"/> is multidimensional.</para> <para>-or-</para> <para>The number of elements in the <see cref="T:Telerik.WebControls.GridTableViewRelation"/> is greater than the available space between <paramref name="arrayIndex"/> and the end of <paramref name="array"/>.</para></exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="array"/> is <see langword="null"/>. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is less than <paramref name="array"/>'s lowbound. </exception>
            <seealso cref="T:System.Array"/>
        </member>
        <member name="M:Telerik.WebControls.GridTableViewRelation.IndexOf(Telerik.WebControls.GridRelationFields)">
            <summary>
               <para>Returns the index of a <see cref="T:Telerik.WebControls.GridRelationFields"/> in 
                  the <see cref="T:Telerik.WebControls.GridTableViewRelation"/> .</para>
            </summary>
            <param name="value">The <see cref="T:Telerik.WebControls.GridRelationFields"/> to locate.</param>
            <returns>
            <para>The index of the <see cref="T:Telerik.WebControls.GridRelationFields"/> of <paramref name="value"/> in the 
            <see cref="T:Telerik.WebControls.GridTableViewRelation"/>, if found; otherwise, -1.</para>
            </returns>
            <seealso cref="M:Telerik.WebControls.GridTableViewRelation.Contains(Telerik.WebControls.GridRelationFields)"/>
        </member>
        <member name="M:Telerik.WebControls.GridTableViewRelation.Insert(System.Int32,Telerik.WebControls.GridRelationFields)">
            <summary>
            <para>Inserts a <see cref="T:Telerik.WebControls.GridRelationFields"/> into the <see cref="T:Telerik.WebControls.GridTableViewRelation"/> at the specified index.</para>
            </summary>
            <param name="index">The zero-based index where <paramref name="value"/> should be inserted.</param>
            <param name=" value">The <see cref="T:Telerik.WebControls.GridRelationFields"/> to insert.</param>
            <returns><para>None.</para></returns>
            <seealso cref="M:Telerik.WebControls.GridTableViewRelation.Add(Telerik.WebControls.GridRelationFields)"/>
        </member>
        <member name="M:Telerik.WebControls.GridTableViewRelation.GetEnumerator">
            <summary>
               <para>Returns an enumerator that can iterate through 
                  the <see cref="T:Telerik.WebControls.GridTableViewRelation"/> .</para>
            </summary>
            <returns><para>None.</para></returns>
            <seealso cref="T:System.Collections.IEnumerator"/>
        </member>
        <member name="M:Telerik.WebControls.GridTableViewRelation.Remove(Telerik.WebControls.GridRelationFields)">
            <summary>
               <para> Removes a specific <see cref="T:Telerik.WebControls.GridRelationFields"/> from the 
               <see cref="T:Telerik.WebControls.GridTableViewRelation"/> .</para>
            </summary>
            <param name="value">The <see cref="T:Telerik.WebControls.GridRelationFields"/> to remove from the <see cref="T:Telerik.WebControls.GridTableViewRelation"/> .</param>
            <returns><para>None.</para></returns>
            <exception cref="T:System.ArgumentException"><paramref name="value"/> is not found in the Collection. </exception>
        </member>
        <member name="P:Telerik.WebControls.GridTableViewRelation.Item(System.Int32)">
            <summary>
            <para>Represents the entry at the specified index of the <see cref="T:Telerik.WebControls.GridRelationFields"/>.</para>
            </summary>
            <param name="index"><para>The zero-based index of the entry to locate in the collection.</para></param>
            <value>
               <para> The entry at the specified index of the collection.</para>
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is outside the valid range of indexes for the collection.</exception>
        </member>
        <member name="T:Telerik.WebControls.GridValidationSettings">
            <summary>
            Container of misc. grouping settings of RadGrid control
            </summary>
        </member>
        <member name="T:Telerik.WebControls.GridGroupByExpression">
            <summary>
                Expression similar to SQL's "Select Group By" clause that is used by
                <strong>GridTableView</strong> to group items
                (<see cref="P:Telerik.WebControls.GridTableView.GroupByExpressions"/>. Expressions can be defined by
                assigning <see cref="P:Telerik.WebControls.GridGroupByExpression.Expression">Expression</see> property and/or managing the
                items in <see cref="P:Telerik.WebControls.GridGroupByExpression.SelectFields"/> or
                <see cref="P:Telerik.WebControls.GridGroupByExpression.GroupByFields"/> collections.
            </summary>
            <remarks>
                If you use <see cref="P:Telerik.WebControls.GridGroupByExpression.Expression"/> property to assign
                group by expression as string then the expression is parsed and
                <see cref="P:Telerik.WebControls.GridGroupByExpression.SelectFields"/> and
                <see cref="P:Telerik.WebControls.GridGroupByExpression.GroupByFields"/> are created. If the
                expression syntax is incorrect a <see cref="T:Telerik.WebControls.GridGroupByException"/> would be
                thrown. You can use <see cref="T:Telerik.WebControls.GridGroupByField"/>'s properties to set
                expression's fields appearance format strings, etc. See
                <see cref="P:Telerik.WebControls.GridGroupByExpression.Expression"/> property for details about the expression syntax.
            </remarks>
        </member>
        <member name="M:Telerik.WebControls.GridGroupByExpression.#ctor(Telerik.WebControls.GridColumn)">
            <summary>Constructs a new GroupByExpression from a grid GridColumn.</summary>
            <remarks>
            If the column does not have a valud <see cref="P:Telerik.WebControls.GridColumn.GroupByExpression"/> string assigned this 
            constructor will throw <see cref="T:Telerik.WebControls.GridGroupByException"/>. Column should be <see cref="P:Telerik.WebControls.GridColumn.Groupable"/>
            The following properties will be copied from the corresponding column's properties:
            <list>
            		<item>
            		Column's data-format-string depending on the type of the column. For example 
            		<see cref="P:Telerik.WebControls.GridBoundColumn.DataFormatString"/></item> will be copied to 
            		<see cref="P:Telerik.WebControls.GridGroupByField.FormatString"/>.
            	<item>
            		Column's <see cref="P:Telerik.WebControls.GridColumn.HeaderText"/> will be copied to <see cref="P:Telerik.WebControls.GridGroupByField.HeaderText"/>
            		</item>
            	</list>
            </remarks>
            <param name="column">
            the column (and its <strong>DataField</strong> respectively) that will be used
            for grouping Telerik RadGrid
            </param>
        </member>
        <member name="M:Telerik.WebControls.GridGroupByExpression.Parse(System.String)">
            <summary>Calls GridGroupByExpression(expression)</summary>
        </member>
        <member name="M:Telerik.WebControls.GridGroupByExpression.ToString">
            <summary>The same as the <see cref="P:Telerik.WebControls.GridGroupByExpression.Expression"/> property</summary>
            <returns>the string representation of the expression.</returns>
        </member>
        <member name="M:Telerik.WebControls.GridGroupByExpression.IsSame(Telerik.WebControls.GridGroupByExpression)">
            <summary>
            Compares the current expression against the expression set as parameter and check
            if both expressions contain field with the same name.
            </summary>
            <returns>
            	<strong>true</strong> if both expressions contain field with the same name,
            otherwise false.
            </returns>
            <param name="expression">expression to check against this expression</param>
        </member>
        <member name="M:Telerik.WebControls.GridGroupByExpression.ContainsSameGroupByField(Telerik.WebControls.GridGroupByExpression)">
            <summary>Checks if the given expression contains same Group-By field as this one.</summary>
            <returns>
            true if the expression already contains this GroupByField, otherwise
            false.
            </returns>
            <remarks>
            Use this function to determine if two expressions seem to produce the same set of results
            </remarks>
            <param name="expression">Expression to check</param>
        </member>
        <member name="P:Telerik.WebControls.GridGroupByExpression.SelectFields">
            <summary>
            Gets a collection of SelectField objects (field names, aggregates etc.) that form
            the "Select" clause. Standing on the left side of the "Group By" clause.
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridGroupByExpression.GroupByFields">
            <summary>
                Gets a collection of <see cref="!:GroupByField"/> objects that form the grouping
                clause. Standing on the right side of the "Group By" clause
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridGroupByExpression.Expression">
            <summary>String representation of the GroupBy expression.</summary>
            <remarks>
            	<para>Expression syntax:</para>
            	<para>fieldname[ alias]|aggregate(fieldname)[ alias][, ...] Group By fieldname[
                sort][, ...]</para>
            	<list type="bullet">
            		<item>
            			<strong>fieldname</strong>: the name of any field from the
                        <see cref="P:Telerik.WebControls.RadGrid.DataSource"/>
            		</item>
            		<item><strong>alias</strong>: alas string. This cannot contain blanks or other
                    reserved symbols like ',', '.' etc.</item>
            		<item>
            			<strong>aggregate</strong>: any of - <em>min</em>, <em>max</em>,
                        <em>sum</em>, <em>count</em>, <em>last</em>, <em>first</em> etc (the same
                        as in <see cref="T:Telerik.WebControls.GridAggregateFunction"/> enumeration )
                    </item>
            		<item><strong>sort</strong>: <em>asc</em> or <em>desc</em> - the sort order of
                    the grouped items</item>
            	</list>
            </remarks>
            <example>
            	<code lang="CS" description="Here is a sample expression:">
            Country, City, count(Country) Items, ContactName Group By Country, City desc
                </code>
            	<code lang="VB" title="[New Example]" description="Here is a sample expression:">
            Country, City, count(Country) Items, ContactName Group By Country, City desc
                </code>
            </example>
        </member>
        <member name="P:Telerik.WebControls.GridGroupByExpression.Index">
            <summary>
                Gets the index of the expression if added in a
                <see cref="T:Telerik.WebControls.GridGroupByExpressionCollection"/>
            </summary>
            <value>
                integer, representing the index of the collection ni
                <see cref="T:Telerik.WebControls.GridGroupByExpressionCollection"/>.
            </value>
        </member>
        <member name="T:Telerik.WebControls.GridGroupByExpressionCollection">
            <summary>
            Collection that stores group by expressions <seealso cref="T:Telerik.WebControls.GridGroupByExpression"/>
            </summary>
        </member>
        <member name="M:Telerik.WebControls.GridGroupByExpressionCollection.#ctor">
            <summary>
            <para>
             Initializes a new instance of <see cref="T:Telerik.WebControls.GridGroupByExpressionCollection"/>.
            </para>
            </summary>
        </member>
        <member name="M:Telerik.WebControls.GridGroupByExpressionCollection.#ctor(Telerik.WebControls.GridGroupByExpressionCollection)">
            <summary>
                <para>
                  Initializes a new instance of <see cref="T:Telerik.WebControls.GridGroupByExpressionCollection"/> based on another <see cref="T:Telerik.WebControls.GridGroupByExpressionCollection"/>.
               </para>
            </summary>
            <param name="value">
                  A <see cref="T:Telerik.WebControls.GridGroupByExpressionCollection"/> from which the contents are copied
            </param>
        </member>
        <member name="M:Telerik.WebControls.GridGroupByExpressionCollection.#ctor(Telerik.WebControls.GridGroupByExpression[])">
            <summary>
                <para>
                  Initializes a new instance of <see cref="T:Telerik.WebControls.GridGroupByExpressionCollection"/> containing any array of <see cref="T:Telerik.WebControls.GridGroupByExpression"/> objects.
               </para>
            </summary>
            <param name="value">
                  An array of <see cref="T:Telerik.WebControls.GridGroupByExpression"/> objects with which to intialize the collection
            </param>
        </member>
        <member name="M:Telerik.WebControls.GridGroupByExpressionCollection.Add(Telerik.WebControls.GridGroupByExpression)">
            <summary>
               <para>Adds a <see cref="T:Telerik.WebControls.GridGroupByExpression"/> with the specified value to the 
               <see cref="T:Telerik.WebControls.GridGroupByExpressionCollection"/> .</para>
            </summary>
            <param name="value">The <see cref="T:Telerik.WebControls.GridGroupByExpression"/> to add.</param>
            <returns>
               <para>The index at which the new element was inserted.</para>
            </returns>
            <seealso cref="M:Telerik.WebControls.GridGroupByExpressionCollection.AddRange(Telerik.WebControls.GridGroupByExpression[])"/>
        </member>
        <member name="M:Telerik.WebControls.GridGroupByExpressionCollection.Add(System.String)">
            <summary>
               <para>Parses value and adds a <see cref="T:Telerik.WebControls.GridGroupByExpression"/> to the
               <see cref="T:Telerik.WebControls.GridGroupByExpressionCollection"/> .</para>
            </summary>
            <param name="value">The <see cref="T:Telerik.WebControls.GridGroupByExpression"/> string representation to add.</param>
            <returns>
               <para>The index at which the new element was inserted.</para>
            </returns>
            <seealso cref="M:Telerik.WebControls.GridGroupByExpressionCollection.AddRange(Telerik.WebControls.GridGroupByExpression[])"/>
        </member>
        <member name="M:Telerik.WebControls.GridGroupByExpressionCollection.AddRange(Telerik.WebControls.GridGroupByExpression[])">
            <summary>
            <para>Copies the elements of an array to the end of the <see cref="T:Telerik.WebControls.GridGroupByExpressionCollection"/>.</para>
            </summary>
            <param name="value">
               An array of type <see cref="T:Telerik.WebControls.GridGroupByExpression"/> containing the objects to add to the collection.
            </param>
            <returns>
              <para>None.</para>
            </returns>
            <seealso cref="M:Telerik.WebControls.GridGroupByExpressionCollection.Add(Telerik.WebControls.GridGroupByExpression)"/>
        </member>
        <member name="M:Telerik.WebControls.GridGroupByExpressionCollection.AddRange(Telerik.WebControls.GridGroupByExpressionCollection)">
            <summary>
                <para>
                  Adds the contents of another <see cref="T:Telerik.WebControls.GridGroupByExpressionCollection"/> to the end of the collection.
               </para>
            </summary>
            <param name="value">
               A <see cref="T:Telerik.WebControls.GridGroupByExpressionCollection"/> containing the objects to add to the collection.
            </param>
            <returns>
              <para>None.</para>
            </returns>
            <seealso cref="M:Telerik.WebControls.GridGroupByExpressionCollection.Add(Telerik.WebControls.GridGroupByExpression)"/>
        </member>
        <member name="M:Telerik.WebControls.GridGroupByExpressionCollection.Contains(Telerik.WebControls.GridGroupByExpression)">
            <summary>
            <para>Gets a value indicating whether the 
               <see cref="T:Telerik.WebControls.GridGroupByExpressionCollection"/> contains the specified <see cref="T:Telerik.WebControls.GridGroupByExpression"/>.</para>
            </summary>
            <param name="value">The <see cref="T:Telerik.WebControls.GridGroupByExpression"/> to locate.</param>
            <returns>
            <para><see langword="true"/> if the <see cref="T:Telerik.WebControls.GridGroupByExpression"/> is contained in the collection; 
              otherwise, <see langword="false"/>.</para>
            </returns>
            <seealso cref="M:Telerik.WebControls.GridGroupByExpressionCollection.IndexOf(Telerik.WebControls.GridGroupByExpression)"/>
        </member>
        <member name="M:Telerik.WebControls.GridGroupByExpressionCollection.CopyTo(Telerik.WebControls.GridGroupByExpression[],System.Int32)">
            <summary>
            <para>Copies the <see cref="T:Telerik.WebControls.GridGroupByExpressionCollection"/> values to a one-dimensional <see cref="T:System.Array"/> instance at the 
               specified index.</para>
            </summary>
            <param name="array"><para>The one-dimensional <see cref="T:System.Array"/> that is the destination of the values copied from <see cref="T:Telerik.WebControls.GridGroupByExpressionCollection"/> .</para></param>
            <param name="index">The index in <paramref name="array"/> where copying begins.</param>
            <returns>
              <para>None.</para>
            </returns>
            <exception cref="T:System.ArgumentException"><para><paramref name="array"/> is multidimensional.</para> <para>-or-</para> <para>The number of elements in the <see cref="T:Telerik.WebControls.GridGroupByExpressionCollection"/> is greater than the available space between <paramref name="array"/> and the end of <paramref name="array"/>.</para></exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="array"/> is <see langword="null"/>. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="array"/> is less than <paramref name="array"/>"s lowbound. </exception>
            <seealso cref="T:System.Array"/>
        </member>
        <member name="M:Telerik.WebControls.GridGroupByExpressionCollection.IndexOf(Telerik.WebControls.GridGroupByExpression)">
            <summary>
               <para>Returns the index of a <see cref="T:Telerik.WebControls.GridGroupByExpression"/> in 
                  the <see cref="T:Telerik.WebControls.GridGroupByExpressionCollection"/> .</para>
            </summary>
            <param name="value">The <see cref="T:Telerik.WebControls.GridGroupByExpression"/> to locate.</param>
            <returns>
            <para>The index of the <see cref="T:Telerik.WebControls.GridGroupByExpression"/> of <paramref name="value"/> in the 
            <see cref="T:Telerik.WebControls.GridGroupByExpressionCollection"/>, if found; otherwise, -1.</para>
            </returns>
            <seealso cref="M:Telerik.WebControls.GridGroupByExpressionCollection.Contains(Telerik.WebControls.GridGroupByExpression)"/>
        </member>
        <member name="M:Telerik.WebControls.GridGroupByExpressionCollection.Insert(System.Int32,Telerik.WebControls.GridGroupByExpression)">
            <summary>
            <para>Inserts a <see cref="T:Telerik.WebControls.GridGroupByExpression"/> into the <see cref="T:Telerik.WebControls.GridGroupByExpressionCollection"/> at the specified index.</para>
            </summary>
            <param name="index">The zero-based index where <paramref name="value"/> should be inserted.</param>
            <param name=" value">The <see cref="T:Telerik.WebControls.GridGroupByExpression"/> to insert.</param>
            <returns><para>None.</para></returns>
            <seealso cref="M:Telerik.WebControls.GridGroupByExpressionCollection.Add(Telerik.WebControls.GridGroupByExpression)"/>
        </member>
        <member name="M:Telerik.WebControls.GridGroupByExpressionCollection.GetEnumerator">
            <summary>
               <para>Returns an enumerator that can iterate through 
                  the <see cref="T:Telerik.WebControls.GridGroupByExpressionCollection"/> .</para>
            </summary>
            <returns><para>None.</para></returns>
            <seealso cref="T:System.Collections.IEnumerator"/>
        </member>
        <member name="M:Telerik.WebControls.GridGroupByExpressionCollection.Remove(Telerik.WebControls.GridGroupByExpression)">
            <summary>
               <para> Removes a specific <see cref="T:Telerik.WebControls.GridGroupByExpression"/> from the 
               <see cref="T:Telerik.WebControls.GridGroupByExpressionCollection"/> .</para>
            </summary>
            <param name="value">The <see cref="T:Telerik.WebControls.GridGroupByExpression"/> to remove from the <see cref="T:Telerik.WebControls.GridGroupByExpressionCollection"/> .</param>
            <returns><para>None.</para></returns>
            <exception cref="T:System.ArgumentException"><paramref name="value"/> is not found in the Collection. </exception>
        </member>
        <member name="P:Telerik.WebControls.GridGroupByExpressionCollection.Item(System.Int32)">
            <summary>
            <para>Represents the entry at the specified index of the <see cref="T:Telerik.WebControls.GridGroupByExpression"/>.</para>
            </summary>
            <param name="index"><para>The zero-based index of the entry to locate in the collection.</para></param>
            <value>
               <para> The entry at the specified index of the collection.</para>
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is outside the valid range of indexes for the collection.</exception>
        </member>
        <member name="T:Telerik.WebControls.GridRebindReason">
            <summary>Enumeration which holds the internally recognized values for rebind reason</summary>
        </member>
        <member name="F:Telerik.WebControls.GridRebindReason.InitialLoad">
            <summary>The NeedDataSource event is raised on initial load</summary>
        </member>
        <member name="F:Telerik.WebControls.GridRebindReason.DetailTableBinding">
            <summary>
            The NeedDataSource event is raised to bind the detail tables in hierarchical
            grid
            </summary>
        </member>
        <member name="F:Telerik.WebControls.GridRebindReason.ExplicitRebind">
            <summary>
            The NeedDataSource event is raised from explicit call to the Rebind()
            method
            </summary>
        </member>
        <member name="F:Telerik.WebControls.GridRebindReason.PostBackEvent">
            <summary>
            The NeedDataSource event is raised due to postback event causing implicit
            rebind
            </summary>
        </member>
        <member name="F:Telerik.WebControls.GridRebindReason.PostbackViewStateNotPersisted">
            <summary>
            The NeedDataSource event is raised prior to postback events because of
            EnableViewState = false setting. The difference in the grid lifecycle in this mode is
            explained
            <a href="http://www.telerik.com/help/aspnet/grid/?grdEventSequence.html">here</a>.
            </summary>
        </member>
        <member name="T:Telerik.WebControls.GridNeedDataSourceEventArgs">
            <summary>
            Summary description for NeedDataSourceEvent.
            </summary>
        </member>
        <member name="P:Telerik.WebControls.GridNeedDataSourceEventArgs.IsFromDetailTable">
            <summary>
            Boolean property which specifies whether the GridTableView instance passed in the
            NeedDataSource handler is the MasterTableView or detail table.
            </summary>
            <value>boolean</value>
            <example>
            	<code lang="CS" title="C#">
            protected void RadGrid1_NeedDataSource(object source, Telerik.WebControls.GridNeedDataSourceEventArgs e)
            {
               if (!e.IsFromDetailTable)
               {
                  //MasterTableView referenced here
               }
               else
               {
                  //detail table view referenced here
               }
            }
                </code>
            	<code lang="VB" title="VB.NET">
            Private Sub RadGrid1_NeedDataSource(ByVal source As Object, ByVal e As GridNeedDataSourceEventArgs) Handles RadGrid1.NeedDataSource
               If Not e.IsFromDetailTable Then
                 'MasterTableView referenced here
               Else             
                 'detail table referenced here
               End If
            End Sub
                </code>
            </example>
            <remarks>
            Meaningful in scenarios when hierarchy is bound inside the NeedDataSource handler
            only
            </remarks>
        </member>
        <member name="P:Telerik.WebControls.GridNeedDataSourceEventArgs.RebindReason">
            <summary>
            Determines what the rebind reason is which causes the NeedDataSource event to be
            raised
            </summary>
        </member>
        <member name="T:Telerik.WebControls.GridDataBindingHandler">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="T:Telerik.WebControls.RadGrid">
            <summary>
            RadGrid control class.
            </summary>
            <seealso cref="T:Telerik.WebControls.GridTableView"/>
            <remarks>
            Set properties of RadGrid as default for the corresponding properties of grid's 
            table views <seealso cref="T:Telerik.WebControls.GridTableView"/>.
            The best approach to bind RadGrid is to handle its <see cref="E:Telerik.WebControls.RadGrid.NeedDataSource"/> event and set the DataSource property 
            there. This way RadGrid will handle automatically operations like paging, sorting, grouping, etc.
            The main table-view can be accessed through <see cref="P:Telerik.WebControls.RadGrid.MasterTableView"/> property.
            The group panel and its items can be accessed using GroupPanel property. Note that the group items can be modified only 
            through the <see cref="P:Telerik.WebControls.GridTableView.GroupByExpressions"/> properties of each GridTableView.
            Hierarchical grid structure can be implemented adding GridTableView objects to <see cref="P:Telerik.WebControls.GridTableView.DetailTables"/> and handling 
            <see cref="E:Telerik.WebControls.RadGrid.DetailTableDataBind"/> event, where you should set the DataSource of each bound detail table filtered
            according to the <see cref="P:Telerik.WebControls.GridTableView.ParentItem"/> property key values.
            The <see cref="P:Telerik.WebControls.RadGrid.Columns"/> of RadGrid property is a reference to the columns of the MasterTableView and is present in RadGrid for 
            compatibility with the DataGrid server control.
            </remarks>
        </member>
        <member name="F:Telerik.WebControls.RadGrid.CancelCommandName">
            <summary>Represents the <b>Cancel</b> command name. This field is read-only.</summary>
            <remarks>
            Use the <b>CancelCommandName</b> field to represent the "Cancel" command name.
            This command cancels the edit operation and RadGrid returns to normal mode.
            </remarks>
            <example>
            	<para>The example below demonstrates how to use the Cancel command within an
                EditItemTemplate.</para>
            	<pre>
            &lt;rad:GridTemplateColumn UniqueName="TemplateColumn"&gt;
            </pre>
            	<pre>
                &lt;EditItemTemplate&gt;
            </pre>
            	<pre>
                    &lt;asp:LinkButton runat="server" ID="Cancel" Text="Cancel Edit" <font color="red">CommandName="Cancel"</font>&gt;
            </pre>
            	<pre>
                    &lt;/asp:LinkButton&gt;
            </pre>
            	<pre>
                &lt;/EditItemTemplate&gt;
            </pre>
            	<pre>
            &lt;/rad:GridTemplateColumn&gt;
            </pre>
            </example>
        </member>
        <member name="F:Telerik.WebControls.RadGrid.DeleteCommandName">
            <summary>Represents the "Delete" command name. This field is read-only.</summary>
            <remarks>
            Use the <b>DeleteCommandName</b> field to represent the "Delete" command
            name.
            </remarks>
            <example>
            	<para>The example below demonstrates how to use the Delete command within an
                ItemTemplate.</para>
            	<pre>
            &lt;rad:GridTemplateColumn UniqueName="TemplateColumn"&gt;
            </pre>
            	<pre>
                &lt;ItemTemplate&gt;
            </pre>
            	<pre>
                    &lt;asp:LinkButton runat="server" ID="Delete" Text="Delete" <font color="red">CommandName="Delete"</font>&gt;
            </pre>
            	<pre>
                    &lt;/asp:LinkButton&gt;
            </pre>
            	<pre>
                &lt;/ItemTemplate&gt;
            </pre>
            	<pre>
            &lt;/rad:GridTemplateColumn&gt;
            </pre>
            </example>
        </member>
        <member name="F:Telerik.WebControls.RadGrid.EditCommandName">
            <summary>Represents the "Edit" command name. This field is read-only.</summary>
            <remarks>
            Use the <b>EditCommandName</b> field to represent the "Edit" command name. This
            command enters RadGrid in edit mode.
            </remarks>
            <example>
            	<para>The example below demonstrates how to use the "Edit" command within an
                ItemTemplate.</para>
            	<pre>
            &lt;rad:GridTemplateColumn UniqueName="TemplateColumn"&gt;
            </pre>
            	<pre>
                &lt;ItemTemplate&gt;
            </pre>
            	<pre>
                    &lt;asp:LinkButton runat="server" ID="Edit" Text="Edit" <font color="red">CommandName="Edit"</font>&gt;
                </pre>
            	<pre>
                    &lt;/asp:LinkButton&gt;
            </pre>
            	<pre>
                &lt;/ItemTemplate&gt;
            </pre>
            	<pre>
            &lt;/rad:GridTemplateColumn&gt;
            </pre>
            </example>
        </member>
        <member name="F:Telerik.WebControls.RadGrid.InitInsertCommandName">
            <summary>Represents the "InitInsert" command name. This field is read-only.</summary>
            <example>
            	<para>The example below demonstrates how to use the InitInsert command within an
                CommandItemTemplate.</para>
            	<pre>
                &lt;CommandItemTemplate&gt;
            </pre>
            	<pre>
                    &lt;asp:LinkButton runat="server" ID="AddNew" Text="Add new record" <font color="red">CommandName="InitInsert"</font>&gt;
            </pre>
            	<pre>
                    &lt;/asp:LinkButton&gt;
            </pre>
            	<pre>
                &lt;/CommandItemTemplate&gt;
            </pre>
            </example>
            <remarks>
            Use the <strong>InitInsertCommandName</strong> field to represent the
            "InitInsert" command name. This command enters RadGrid in edit mode and lets the user
            enter the data for a new record.
            </remarks>
        </member>
        <member name="F:Telerik.WebControls.RadGrid.PerformInsertCommandName">
            <summary>Represents the "PerformInsert" command name. This field is read-only.</summary>
            <remarks>
            Use the <strong>PerformInsertCommandName</strong> field to represent the
            "PerformInsert" command name. This command enters the new record into the
            database.
            </remarks>
        </member>
        <member name="F:Telerik.WebControls.RadGrid.RebindGridCommandName">
            <summary>
            Represents the "RebindGrid" command name. This field is read-only. Forces
            <strong>RadGrid.Rebind</strong>
            </summary>
            <remarks>
            Use the <strong>RebindGridCommandName</strong> field to force rebinding the
            grid.
            </remarks>
        </member>
        <member name="F:Telerik.WebControls.RadGrid.UpdateCommandName">
            <example>
            	<para>The example below demonstrates how to use the Update command within an
                EditItemTemplate.</para>
            	<pre>
            &lt;rad:GridTemplateColumn UniqueName="TemplateColumn"&gt;
                </pre>
            	<pre>
                &lt;EditItemTemplate&gt;
                </pre>
            	<pre>
                    &lt;asp:LinkButton runat="server" ID="Update" Text="Update" <font color="red">CommandName="Update"</font>&gt;
                </pre>
            	<pre>
                    &lt;/asp:LinkButton&gt;
                </pre>
            	<pre>
                &lt;/EditItemTemplate&gt;
                </pre>
            	<pre>
            &lt;/rad:GridTemplateColumn&gt;
            </pre>
            </example>
            <summary>Represents the "Update" command name. This field is read-only.</summary>
            <remarks>
            Use the <b>UpdateCommandName</b> field to represent the "Update" command
            name.
            </remarks>
        </member>
        <member name="F:Telerik.WebControls.RadGrid.UpdateEditedCommandName">
            <summary>
            Represents the "UpdateEdited" command name. Updates all items that are in edit
            mode. This field is read-only.
            </summary>
            <example>
            	<para>The example below demonstrates how to use the UpdateEdited command within an
                CommandItemTemplate.</para>
            	<pre>
                &lt;CommandItemTemplate&gt;
            </pre>
            	<pre>
                    &lt;asp:LinkButton runat="server" ID="UpdateEdited" Text="Update Edited" <font color="red">CommandName="UpdateEdited"</font>&gt;
            </pre>
            	<pre>
                    &lt;/asp:LinkButton&gt;
            </pre>
            	<pre>
                &lt;/CommandItemTemplate&gt;
            </pre>
            </example>
            <remarks>
            Use the <b>UpdateCommandName</b> field to represent the "Update" command
            name.
            </remarks>
        </member>
        <member name="F:Telerik.WebControls.RadGrid.DeleteSelectedCommandName">
            <summary>Represents the "DeleteSelected" command name. This field is read-only.</summary>
            <remarks>
            Use the <strong>DeleteSelectedCommandName</strong> field to represent the
            "DeleteSelected" command name.
            </remarks>
            <example>
            	<para>The example below demonstrates how to use the DeleteSelected command within
                an CommandItemTemplate.</para>
            	<pre>
                &lt;CommandItemTemplate&gt;
            </pre>
            	<pre>
                    &lt;asp:LinkButton runat="server" ID="DeleteSelected" Text="Delete Selected" <font color="red">CommandName="DeleteSelected"</font>&gt;
                </pre>
            	<pre>
                    &lt;/asp:LinkButton&gt;
            </pre>
            	<pre>
                &lt;/CommandItemTemplate&gt;
            </pre>
            </example>
        </member>
        <member name="M:Telerik.WebControls.RadGrid.#ctor">
            <summary>
            Constructs a new instance of RadGrid
            </summary>
        </member>
        <member name="M:Telerik.WebControls.RadGrid.DataBind">
            <summary>
            	<para>Data-bind %<strong>MasterTableView</strong>% and its detail
                %<strong>GridTableView</strong>%s. Prior to calling <strong>DataBind</strong>, the
                %<strong>DataSource</strong>% property should be assigned.</para>
            </summary>
            <seealso cref="!:grdSimpleDatabinding.html" cat="Manual">Simple Data-binding</seealso>
            <remarks>
            	<para>You should have in mind, that in case you are using simple data binding (i.e.
                when you are not using <strong>NeedDataSource</strong> event) the correct approach
                is to call the <b>DataBind()</b> method on the first page load when
                <b>!Page.IsPostBack</b> and after handling some event (sort event for
                example).</para>
            	<para>You will need to assign <strong>DataSource</strong> and rebind the grid after
                each operation (paging, sorting, editing, etc.) - this copies exactly MS
                <b>DataGrid</b> behavior.</para>
            	<para>
                    We recommend using the <see cref="M:Telerik.WebControls.RadGrid.Rebind"/> method instead and handling
                    the <see cref="E:Telerik.WebControls.RadGrid.NeedDataSource"/> event.
                </para>
            </remarks>
        </member>
        <member name="M:Telerik.WebControls.RadGrid.RaisePostDataChangedEvent">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.WebControls.RadGrid.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.WebControls.RadGrid.RaisePostBackEvent(System.String)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.WebControls.RadGrid.CreateTableView">
            <summary>
            This method is used by RadGrid internally. Please do not use.
            </summary>
        </member>
        <member name="M:Telerik.WebControls.RadGrid.Rebind">
            <summary>
            Forces RadGrid to fire
            <a href="RadGrid~Telerik.WebControls.RadGrid~NeedDataSource_EV.html">NeedDataSource</a>
            event then calls
            <a href="RadGrid~Telerik.WebControls.GridTableView~DataBind.html">DataBind</a>
            	<!--DXMETADATA end -->
            </summary>
        </member>
        <member name="M:Telerik.WebControls.RadGrid.AsyncRedirect(System.String)">
            <summary>
            Performs a redirection to another page defined with a relative path using an AJAX
            request.
            </summary>
            <example>
            	<code lang="VB" title="AsyncRequest(string) VB">
            RadGrid1.AsyncRedirect("~/Default.aspx")
                </code>
            	<code lang="CS" title="AsyncRequest(string) CS">
            RadGrid1.AsyncRedirect("~/Default.aspx");
                </code>
            </example>
            <exclude/>
            <excludetoc/>
            <param name="location">
            The URL where you want to redirect to. This URL should be a relative path. For
            absolute paths consider using
            <a href="RadGridNet2~Telerik.WebControls.RadGrid~AsyncRedirect(string,%20bool).html">AsyncRedirect(string,
            bool) Method</a> instead.
            </param>
        </member>
        <member name="M:Telerik.WebControls.RadGrid.AsyncRedirect(System.String,System.Boolean)">
            <summary>
            Performs a redirection to another page using an AJAX request. The boolean
            parameter defines if the path is absolute or relative.
            </summary>
            <example>
            	<code lang="VB" title="VB" description="Setting an absolute path:">
            RadGrid1.AsyncRedirect("http://localhost/MySite/Default.aspx", true)
            </code>
            	<code lang="CS" title="CS" description="Setting an absolute path:">
            RadGrid1.AsyncRedirect("http://localhost/MySite/Default.aspx", true);
            </code>
            </example>
            <param name="location">
            The URL where you want to redirect to. This URL should be a relative path. For
            absolute paths consider using
            <a href="RadGridNet2~Telerik.WebControls.RadGrid~AsyncRedirect(string,%20bool).html">AsyncRedirect(string,
            bool) Method</a> instead.
            </param>
            <param name="isAbsolute">
            Defines if the specified path is absolute or relative (<strong>true</strong> for
            absolute and <strong>false</strong> for relative).
            </param>
        </member>
        <member name="M:Telerik.WebControls.RadGrid.SetStyleClasses">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.WebControls.RadGrid.GetSkinFolderName">
            <summary>Returns the path of the used skin, relative to the application root.</summary>
            <remarks>
            	<para>Returns the path of the used skin, relative to the application root. The name of
            the skin is set using the <see cref="P:Telerik.WebControls.RadGrid.Skin"/> property. All skins reside in a
            folder named as the name of the skin.<br/>
            The method returns the path to the skin in this form (<em>Default</em> is the name of
            the skin as defined by the Skin property):</para>
            	<para><em>~/RadControls/Grid/Skins/Default</em></para>
            </remarks>
        </member>
        <member name="E:Telerik.WebControls.RadGrid.CancelCommand">
            <summary>
            	<para>Occurs when the Cancel button is clicked for an item in the
                Telerik RadGrid control.</para>
            </summary>
            <remarks>
            	<para>The CancelCommand event is raised when the Cancel button is clicked for an
                item in the Telerik RadGrid control.</para>
            </remarks>
            <example>
            	<br/>
                The following code example demonstrates how to specify and code a handler for the
                CancelCommand event to cancel edits made to an item in the
                Telerik RadGrid control.
                <code lang="VB" title="VB">
            &lt;%@ Page Language="VB" <see cref="!:&gt; &lt;"/>@ Register Assembly="RadGrid.Net2" Namespace="Telerik.WebControls" TagPrefix="rad" %&gt;
             
            &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
             
            &lt;script runat="server"&gt;
             
                Protected Sub RadGrid1_CancelCommand(ByVal source As Object, ByVal e As Telerik.WebControls.GridCommandEventArgs)
                    Response.Write("Cancel")
                End Sub
             
            &lt;/script&gt;
             
            &lt;html xmlns="http://www.w3.org/1999/xhtml" &gt;
            &lt;head runat="server"&gt;
                &lt;title&gt;Untitled Page&lt;/title&gt;
            &lt;/head&gt;
            &lt;body&gt;
                &lt;form id="form1" runat="server"&gt;
                &lt;div&gt;
                    &lt;rad:RadGrid
                        DataSourceID="SqlDataSource1"
                        ID="RadGrid1" 
                        runat="server" OnCancelCommand="RadGrid1_CancelCommand" &gt;
                        &lt;MasterTableView&gt;
                            &lt;Columns&gt;
                                &lt;rad:GridEditCommandColumn&gt;
                                &lt;/rad:GridEditCommandColumn&gt;
                            &lt;/Columns&gt;
                        &lt;/MasterTableView&gt;
                    &lt;/rad:RadGrid&gt; 
                    &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;
                    &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;
                    &lt;!-- expression to retrieve the connection string value   --&gt;
                    &lt;!-- from the Web.config file.                            --&gt;        
                    &lt;asp:SqlDataSource 
                        ID="SqlDataSource1" 
                        runat="server"
                        ConnectionString="&lt;<see cref="!:NorthwindConnectionString">$ ConnectionStrings</see>&gt;"
                        SelectCommand="SELECT TOP 5 [CustomerID], [ContactName], [CompanyName] FROM [Customers]"&gt;
                    &lt;/asp:SqlDataSource&gt;
                &lt;/div&gt;
                &lt;/form&gt;
            &lt;/body&gt;
            &lt;/html&gt;
                </code>
            </example>
        </member>
        <member name="E:Telerik.WebControls.RadGrid.CreateColumnEditor">
            <summary>
            Fires when each editable column creates its column editor, prior to initializing its controls in the cells of the grid
            </summary>
        </member>
        <member name="E:Telerik.WebControls.RadGrid.NeedDataSource">
            <summary>
            	<para>Fires when the grid is about to be bound and the data source must be assigned
                (is null/Nothing).</para>
            </summary>
            <remarks>
            	<para>
                    Using this event eliminates the need for calling <see cref="M:Telerik.WebControls.RadGrid.DataBind"/>
                    when the grid content should be refreshed, due to a structural change.<br/>
                    For example if Edit command bubbles, grid will automatically rebind and display
                    the item in edit mode, with no additional code.
                </para>
            	<para>Note that when you use <strong>NeedDataSource</strong> you need to assign
                manually the DataSource property only once in the event handler!</para>
            	<para><strong>Important:</strong> You should never call <strong>Rebind()</strong>
                method in <strong>NeedDataSource</strong> event handler or
                <strong>DataBind</strong>() for <font style="BACKGROUND-COLOR: #ffffff">the grid
                <u>at any stage</u> of the page lifecycle</font>!</para>
            	<para>For more information related to Advanced Data Binding (i.e. with
                NeedDataSource) see the following <a href="grdAdvancedDataBinding.html">Data
                binding</a> article.</para>
            </remarks>
        </member>
        <member name="E:Telerik.WebControls.RadGrid.ItemEvent">
            <summary>
            Fires when various item events occur - for example, before Pager item is
            initialized, before EditForm is initialized, etc.
            </summary>
        </member>
        <member name="E:Telerik.WebControls.RadGrid.DetailTableDataBind">
            <summary>
            Fires when a detail-table in the hierarchy is about to be bound. You should only assign the DataSource property of the detail table to a
            data-source properly filtered to display ony child records related to the parent item.
            </summary>
            <remarks>
            You can find the instance of the detail table in the event argument (e). You can
            find the parent item using e.DetailTable.ParentItem property. For more information see
            <a href="grdBindingHierarchicalGrids.html">Hierarchical Binding</a>
            </remarks>
        </member>
        <member name="E:Telerik.WebControls.RadGrid.DeleteCommand">
            <summary>
            Occurs when the Delete button is clicked for an item in the
            Telerik RadGrid control.
            </summary>
            <remarks>
            	<para>The DeleteCommand event is raised when the Delete button is clicked for an
                item in the Telerik RadGrid control.</para>
            	<para>A typical handler for the DeleteCommand event removes the selected item from
                the data source.</para>
            </remarks>
            <example>
                The following code example demonstrates how to specify and code a handler for the
                CancelCommand event to cancel a Telerik RadGrid control.
                <code lang="VB" title="VB">
            &lt;%@ Page Language="VB" <see cref="!:&gt; &lt;"/>@ Register Assembly="RadGrid.Net2" Namespace="Telerik.WebControls" TagPrefix="rad" %&gt;
             
            &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
             
            &lt;script runat="server"&gt;
             
                Protected Sub RadGrid1_DeleteCommand(ByVal source As Object, ByVal e As Telerik.WebControls.GridCommandEventArgs)
                    Response.Write("Delete")
                End Sub
            &lt;/script&gt;
             
            &lt;html xmlns="http://www.w3.org/1999/xhtml" &gt;
            &lt;head runat="server"&gt;
                &lt;title&gt;Untitled Page&lt;/title&gt;
            &lt;/head&gt;
            &lt;body&gt;
                &lt;form id="form1" runat="server"&gt;
                &lt;div&gt;
                    &lt;rad:RadGrid
                        DataSourceID="SqlDataSource1"
                        ID="RadGrid1" 
                        runat="server" OnDeleteCommand="RadGrid1_DeleteCommand"  &gt;
                        &lt;MasterTableView&gt;
                            &lt;Columns&gt;
                                &lt;rad:GridButtonColumn Text="Delete" CommandName="Delete" UniqueName="Delete"&gt;&lt;/rad:GridButtonColumn&gt;
                            &lt;/Columns&gt;
                        &lt;/MasterTableView&gt;
                    &lt;/rad:RadGrid&gt; 
                    &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;
                    &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;
                    &lt;!-- expression to retrieve the connection string value   --&gt;
                    &lt;!-- from the Web.config file.                            --&gt;        
                    &lt;asp:SqlDataSource 
                        ID="SqlDataSource1" 
                        runat="server"
                        ConnectionString="&lt;<see cref="!:NorthwindConnectionString">$ ConnectionStrings</see>&gt;"
                        SelectCommand="SELECT TOP 5 [CustomerID], [ContactName], [CompanyName] FROM [Customers]"&gt;
                    &lt;/asp:SqlDataSource&gt;
                &lt;/div&gt;
                &lt;/form&gt;
            &lt;/body&gt;
            &lt;/html&gt;
                </code>
            </example>
        </member>
        <member name="E:Telerik.WebControls.RadGrid.EditCommand">
            <summary>
            Occurs when the Edit button is clicked for an item in the
            Telerik RadGrid control.
            </summary>
            <remarks>
            	<para>The EditCommand event is raised when the Edit button is clicked for an item
                in the Telerik RadGrid control.</para>
            	<para>A typical handler for the EditCommand event edites the selected item from the
                data source.</para>
            </remarks>
            <example>
                The following code example demonstrates how to specify and code a handler for the
                EditCommand event to edit a Telerik RadGrid control. 
                <code lang="VB" title="VB">
            &lt;%@ Page Language="VB" &lt;see cref="&gt; &lt;"/&gt;@ Register Assembly="RadGrid.Net2" Namespace="Telerik.WebControls" TagPrefix="rad" %&gt;
             
            &lt;!DOCTYPE html Public "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
             
            &lt;script runat="server"&gt;
             
                Protected Sub RadGrid1_EditCommand(ByVal source As Object, ByVal e As Telerik.WebControls.GridCommandEventArgs)
                    Response.Write("Edit")
                End Sub
            &lt;/script&gt;
             
            &lt;html xmlns="http://www.w3.org/1999/xhtml" &gt;
            &lt;head runat="server"&gt;
                &lt;title&gt;Untitled Page&lt;/title&gt;
            &lt;/head&gt;
            &lt;body&gt;
                &lt;form id="form1" runat="server"&gt;
                &lt;div&gt;
                    &lt;rad:RadGrid
                        DataSourceID="SqlDataSource1"
                        ID="RadGrid1" 
                        runat="server" OnEditCommand="RadGrid1_EditCommand"  &gt;
                        &lt;MasterTableView&gt;
                            &lt;Columns&gt;
                                &lt;rad:GridEditCommandColumn&gt;
                                &lt;/rad:GridEditCommandColumn&gt;
                            &lt;/Columns&gt;
                        &lt;/MasterTableView&gt;
                    &lt;/rad:RadGrid&gt; 
                    &lt;!-- This example uses Microsoft SQL Server And connects  --&gt;
                    &lt;!-- To the Northwind sample database. Use an ASP.NET     --&gt;
                    &lt;!-- expression To retrieve the connection String value   --&gt;
                    &lt;!-- from the Web.config file.                            --&gt;        
                    &lt;asp:SqlDataSource 
                        ID="SqlDataSource1" 
                        runat="server"
                        ConnectionString="&lt;&lt;see cref="NorthwindConnectionString"&gt;$ ConnectionStrings&lt;/see&gt;&gt;"
                        SelectCommand="SELECT TOP 5 [CustomerID], [ContactName], [CompanyName] FROM [Customers]"&gt;
                    &lt;/asp:SqlDataSource&gt;
                &lt;/div&gt;
                &lt;/form&gt;
            &lt;/body&gt;
            &lt;/html&gt;
                </code>
            	<code lang="CS" title="C#">
            &lt;%@ Page Language="C#" /&gt;@ Register Assembly="RadGrid.Net2" Namespace="Telerik.WebControls" TagPrefix="rad" %&gt;
             
            &lt;!DOCTYPE html Public "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
             
            &lt;script runat="server"&gt;
             
                protected void RadGrid1_EditCommand(object source, Telerik.WebControls.GridCommandEventArgs e)
            {
                Response.Write("Edit");
            }
            &lt;/script&gt;
             
            &lt;html xmlns="http://www.w3.org/1999/xhtml" &gt;
            &lt;head runat="server"&gt;
                &lt;title&gt;Untitled Page&lt;/title&gt;
            &lt;/head&gt;
            &lt;body&gt;
                &lt;form id="form1" runat="server"&gt;
                &lt;div&gt;
                    &lt;rad:RadGrid
                        DataSourceID="SqlDataSource1"
                        ID="RadGrid1" 
                        runat="server" OnEditCommand="RadGrid1_EditCommand"  &gt;
                        &lt;MasterTableView&gt;
                            &lt;Columns&gt;
                                &lt;rad:GridEditCommandColumn&gt;
                                &lt;/rad:GridEditCommandColumn&gt;
                            &lt;/Columns&gt;
                        &lt;/MasterTableView&gt;
                    &lt;/rad:RadGrid&gt; 
                    &lt;!-- This example uses Microsoft SQL Server And connects  --&gt;
                    &lt;!-- To the Northwind sample database. Use an ASP.NET     --&gt;
                    &lt;!-- expression To retrieve the connection String value   --&gt;
                    &lt;!-- from the Web.config file.                            --&gt;        
                    &lt;asp:SqlDataSource 
                        ID="SqlDataSource1" 
                        runat="server"
                        ConnectionString="&lt;&lt;see cref="NorthwindConnectionString"&gt;$ ConnectionStrings&lt;/see&gt;&gt;"
                        SelectCommand="SELECT TOP 5 [CustomerID], [ContactName], [CompanyName] FROM [Customers]"&gt;
                    &lt;/asp:SqlDataSource&gt;
                &lt;/div&gt;
                &lt;/form&gt;
            &lt;/body&gt;
            &lt;/html&gt;
                </code>
            </example>
        </member>
        <member name="E:Telerik.WebControls.RadGrid.ItemCommand">
            <summary>
            	<para>Occurs when a button is clicked in a Telerik RadGrid
                control.</para>
            </summary>
            <remarks>
            	<para>The ItemCommand event is raised when a button is clicked in the
                Telerik RadGrid control. This allows you to provide an event-handling
                method that performs a custom routine whenever this event occurs.</para>
            	<para>Buttons within a Telerik RadGrid control can also invoke some of
                the built-in functionality of the control. Fires if any control inside
                Telerik RadGrid rises a bubble event. This can be a command button
                (like Edit, Update button, Expand/Collapse of an items) The command arguemtn
                carries a reference to the item which rised the event, the command name and
                argument object.</para>
            	<para>A GridCommandEventArgs object is passed to the event-handling method, which
                allows you to determine the command name and command argument of the button
                clicked.</para>
            </remarks>
            <example>
                The following code example demonstrates how to use the ItemCommand event to add the
                name of a customer from a Telerik RadGrid control to a ListBox control when a
                item's Add button is clicked. 
                <code lang="VB" title="VB">
            &lt;%@ Page Language="VB" <see cref="!:&gt; &lt;"/>@ Register Assembly="RadGrid.Net2" Namespace="Telerik.WebControls" TagPrefix="rad" %&gt;
             
            &lt;!DOCTYPE html Public "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
             
            &lt;script runat="server"&gt;
             
             
               
            Protected Sub RadGrid1_ItemCreated(ByVal sender As Object, ByVal e As Telerik.WebControls.GridItemEventArgs)
                    If e.Item.ItemType = GridItemType.AlternatingItem Or e.Item.ItemType = GridItemType.Item Then
                        Dim item As Telerik.WebControls.GridDataItem
                        item = e.Item
                        Dim LinkButton1 As LinkButton
                        LinkButton1 = item("LinkColumn").FindControl("LinkButton1")
                        LinkButton1.CommandArgument = e.Item.ItemIndex.ToString()
                    End If
                End Sub
             
                Protected Sub RadGrid1_ItemCommand(ByVal source As Object, ByVal e As Telerik.WebControls.GridCommandEventArgs)
                    ' If multiple buttons are used in a Telerik RadGrid control, use the
                    ' CommandName property to determine which button was clicked.
                    If e.CommandName = "Add" Then
                
                        ' Convert the row index stored in the CommandArgument
                        ' property to an Integer.
                        Dim index As Integer = Convert.ToInt32(e.CommandArgument)
                        
                        ' Retrieve the item that contains the button clicked 
                        ' by the user from the Items collection.
                        Dim item As Telerik.WebControls.GridDataItem = RadGrid1.Items(index)
                        
                        ' Create a new ListItem object for the customer in the item.     
                        Dim nitem As New ListItem()
                        nitem.Text = Server.HtmlDecode(item("CustomerID").Text)
                        
                        ' If the customer is not already in the ListBox, add the ListItem 
                        ' object to the Items collection of the ListBox control. 
                        If Not CustomersListBox.Items.Contains(nitem) Then
                  
                            CustomersListBox.Items.Add(nitem)
                    
                        End If
                  
                    End If
                End Sub
             
            &lt;/script&gt;
             
            &lt;html xmlns="http://www.w3.org/1999/xhtml" &gt;
            &lt;head id="Head1" runat="server"&gt;
               &lt;title&gt;Untitled Page&lt;/title&gt;
            &lt;/head&gt;
            &lt;body&gt;
               &lt;form id="form1" runat="server"&gt;
               &lt;div&gt;
                   &lt;rad:RadGrid
                       DataSourceID="SqlDataSource1"
                       ID="RadGrid1"
                       runat="server" OnItemCreated="RadGrid1_ItemCreated" OnItemCommand="RadGrid1_ItemCommand"&gt;
                       &lt;MasterTableView&gt;
                           &lt;Columns&gt;
                               &lt;rad:GridTemplateColumn
                                   UniqueName= "LinkColumn"
                                    HeaderText="LinkColumn"&gt;
                                   &lt;ItemTemplate&gt;
                                       &lt;asp:LinkButton CommandName="Add" Text="click" ID="LinkButton1" runat="server"&gt;LinkButton&lt;/asp:LinkButton&gt;
                                   &lt;/ItemTemplate&gt;
                               &lt;/rad:GridTemplateColumn&gt;
                           &lt;/Columns&gt;
                       &lt;/MasterTableView&gt;
                   &lt;/rad:RadGrid&gt;
                   &lt;asp:listbox id="CustomersListBox" runat="server"/&gt;
                   &lt;!-- This example uses Microsoft SQL Server And connects  --&gt;
                   &lt;!-- To the Northwind sample database. Use an ASP.NET     --&gt;
                   &lt;!-- expression To retrieve the connection String value   --&gt;
                   &lt;!-- from the Web.config file.                            --&gt;        
                   &lt;asp:SqlDataSource
                       ID="SqlDataSource1"
                       runat="server" 
                       ConnectionString="&lt;<see cref="!:NorthwindConnectionString">$ ConnectionStrings</see>&gt;"
                       SelectCommand="SELECT TOP 5 [CustomerID], [ContactName], [CompanyName] FROM [Customers]"&gt;
                   &lt;/asp:SqlDataSource&gt;
               &lt;/div&gt;
               &lt;/form&gt;
            &lt;/body&gt;
            &lt;/html&gt;
                </code>
            	<code lang="CS" title="C#">
            &lt;%@ Page Language="C#" <see cref="!:&gt; &lt;"/>@ Register Assembly="RadGrid.Net2" Namespace="Telerik.WebControls" TagPrefix="rad" %&gt;
             
            &lt;!DOCTYPE html Public "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
             
            &lt;script runat="server"&gt;
             
             
               
            protected void RadGrid1_ItemCreated(object sender, Telerik.WebControls.GridItemEventArgs e)
            {
               if (e.Item.ItemType == GridItemType.AlternatingItem | e.Item.ItemType == GridItemType.Item)
               {
                   Telerik.WebControls.GridDataItem item;
                   item = e.Item as GridDataItem;
                   LinkButton LinkButton1;
                   LinkButton1 = item["LinkColumn"].FindControl("LinkButton1") as LinkButton;
                   LinkButton1.CommandArgument = e.Item.ItemIndex.ToString();
               }
            }
             
            protected void RadGrid1_ItemCommand(object source, Telerik.WebControls.GridCommandEventArgs e)
            {
               // If multiple buttons are used in a Telerik RadGrid control, use the
               // CommandName property to determine which button was clicked.
               if (e.CommandName == "Add")
               {
             
                   // Convert the row index stored in the CommandArgument
                   // property to an Integer.
                   int index = Convert.ToInt32(e.CommandArgument);
             
                   // Retrieve the item that contains the button clicked
                   // by the user from the Items collection.
                   Telerik.WebControls.GridDataItem item = RadGrid1.Items[index];
             
                   // Create a new ListItem object for the customer in the item.     
                   ListItem nitem = new ListItem();
                   nitem.Text = Server.HtmlDecode(item["CustomerID"].Text);
             
                   // If the customer is not already in the ListBox, add the ListItem
                   // object to the Items collection of the ListBox control.
                   if (!CustomersListBox.Items.Contains(nitem))
                   {
             
                       CustomersListBox.Items.Add(nitem);
             
                   }
             
               }
            }
             
            &lt;/script&gt;
             
            &lt;html xmlns="http://www.w3.org/1999/xhtml" &gt;
            &lt;head id="Head1" runat="server"&gt;
               &lt;title&gt;Untitled Page&lt;/title&gt;
            &lt;/head&gt;
            &lt;body&gt;
               &lt;form id="form1" runat="server"&gt;
               &lt;div&gt;
                   &lt;rad:RadGrid
                       DataSourceID="SqlDataSource1"
                       ID="RadGrid1"
                       runat="server" OnItemCreated="RadGrid1_ItemCreated" OnItemCommand="RadGrid1_ItemCommand"&gt;
                       &lt;MasterTableView&gt;
                           &lt;Columns&gt;
                               &lt;rad:GridTemplateColumn
                                   UniqueName= "LinkColumn"
                                    HeaderText="LinkColumn"&gt;
                                   &lt;ItemTemplate&gt;
                                       &lt;asp:LinkButton CommandName="Add" Text="click" ID="LinkButton1" runat="server"&gt;LinkButton&lt;/asp:LinkButton&gt;
                                   &lt;/ItemTemplate&gt;
                               &lt;/rad:GridTemplateColumn&gt;
                           &lt;/Columns&gt;
                       &lt;/MasterTableView&gt;
                   &lt;/rad:RadGrid&gt;
                   &lt;asp:listbox id="CustomersListBox" runat="server"/&gt;
                   &lt;!-- This example uses Microsoft SQL Server And connects  --&gt;
                   &lt;!-- To the Northwind sample database. Use an ASP.NET     --&gt;
                   &lt;!-- expression To retrieve the connection String value   --&gt;
                   &lt;!-- from the Web.config file.                            --&gt;        
                   &lt;asp:SqlDataSource
                       ID="SqlDataSource1"
                       runat="server" 
                       ConnectionString="&lt;<see cref="!:NorthwindConnectionString">$ ConnectionStrings</see>&gt;"
                       SelectCommand="SELECT TOP 5 [CustomerID], [ContactName], [CompanyName] FROM [Customers]"&gt;
                   &lt;/asp:SqlDataSource&gt;
               &lt;/div&gt;
               &lt;/form&gt;
            &lt;/body&gt;
            &lt;/html&gt;
                </code>
            </example>
        </member>
        <member name="E:Telerik.WebControls.RadGrid.ItemCreated">
            <summary>
            	<para>Occurs when a item is created in a Telerik RadGrid
                control.</para>
            </summary>
            <remarks>
            	<para>Before the Telerik RadGrid control can be rendered, a GridItem
                object must be created for each row in the control. The ItemCreated event is raised
                when each row in the Telerik RadGrid control is created. This allows
                you to provide an event-handling method that performs a custom routine, such as
                adding custom content to a item, whenever this event occurs.</para>
            	<para>A GridItemEventArgs object is passed to the event-handling method, which
                allows you to access the properties of the row being created. You can determine
                which item type (header item, data pager item, and so on) is being bound by using
                the Item.ItemType property.</para>
            	<para><strong>Note</strong> that the changes made to the item control and its
                children at this stage does not persist into the ViewState.</para>
            </remarks>
            <example>
                The following code example demonstrates how to use the ItemCreated event to store
                the index of the item being created in the CommandArgument property of a LinkButton
                control contained in the item. This allows you to determine the index of the item
                that contains the LinkButton control when the user clicked the button.
                <code lang="VB" title="VB">
            &lt;%@ Page Language="VB" <see cref="!:&gt; &lt;"/>@ Register Assembly="RadGrid.Net2" Namespace="Telerik.WebControls" TagPrefix="rad" %&gt;
             
            &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
             
            &lt;script runat="server"&gt;
             
             
                Protected Sub RadGrid1_ItemCreated(ByVal sender As Object, ByVal e As Telerik.WebControls.GridItemEventArgs)
                    If e.Item.ItemType = GridItemType.AlternatingItem Or e.Item.ItemType = GridItemType.Item Then
                        Dim item As Telerik.WebControls.GridDataItem
                        item = e.Item
                        Dim LinkButton1 As LinkButton
                        LinkButton1 = item("LinkColumn").FindControl("LinkButton1")
                        LinkButton1.CommandArgument = e.Item.ItemIndex.ToString()
                    End If
                End Sub
             
                Protected Sub RadGrid1_ItemCommand(ByVal source As Object, ByVal e As Telerik.WebControls.GridCommandEventArgs)
                    ' If multiple buttons are used in a Telerik RadGrid control, use the
                    ' CommandName property to determine which button was clicked.
                    If e.CommandName = "Add" Then
                
                        ' Convert the row index stored in the CommandArgument
                        ' property to an Integer.
                        Dim index As Integer = Convert.ToInt32(e.CommandArgument)
                        
                        ' Retrieve the item that contains the button clicked 
                        ' by the user from the Items collection.
                        Dim item As Telerik.WebControls.GridDataItem = RadGrid1.Items(index)
                        
                        ' Create a new ListItem object for the customer in the item.     
                        Dim nitem As New ListItem()
                        nitem.Text = Server.HtmlDecode(item("CustomerID").Text)
                        
                        ' If the customer is not already in the ListBox, add the ListItem 
                        ' object to the Items collection of the ListBox control. 
                        If Not CustomersListBox.Items.Contains(nitem) Then
                  
                            CustomersListBox.Items.Add(nitem)
                    
                        End If
                  
                    End If
                End Sub
            &lt;/script&gt;
             
            &lt;html xmlns="http://www.w3.org/1999/xhtml" &gt;
            &lt;head runat="server"&gt;
                &lt;title&gt;Untitled Page&lt;/title&gt;
            &lt;/head&gt;
            &lt;body&gt;
                &lt;form id="form1" runat="server"&gt;
                &lt;div&gt;
                    &lt;rad:RadGrid
                        DataSourceID="SqlDataSource1"
                        ID="RadGrid1" 
                        runat="server" OnItemCreated="RadGrid1_ItemCreated" OnItemCommand="RadGrid1_ItemCommand"&gt;
                        &lt;MasterTableView&gt;
                            &lt;Columns&gt;
                                &lt;rad:GridTemplateColumn 
                                    UniqueName="LinkColumn" 
                                    HeaderText="LinkColumn"&gt;
                                    &lt;ItemTemplate&gt;
                                        &lt;asp:LinkButton CommandName="Add" Text="click" ID="LinkButton1" runat="server"&gt;LinkButton&lt;/asp:LinkButton&gt;
                                    &lt;/ItemTemplate&gt;
                                &lt;/rad:GridTemplateColumn&gt;
                            &lt;/Columns&gt;
                        &lt;/MasterTableView&gt;
                    &lt;/rad:RadGrid&gt;
                    &lt;asp:listbox id="CustomersListBox" runat="server"/&gt; 
                    &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;
                    &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;
                    &lt;!-- expression to retrieve the connection string value   --&gt;
                    &lt;!-- from the Web.config file.                            --&gt;        
                    &lt;asp:SqlDataSource 
                        ID="SqlDataSource1" 
                        runat="server"
                        ConnectionString="&lt;<see cref="!:NorthwindConnectionString">$ ConnectionStrings</see>&gt;"
                        SelectCommand="SELECT TOP 5 [CustomerID], [ContactName], [CompanyName] FROM [Customers]"&gt;
                    &lt;/asp:SqlDataSource&gt;
                &lt;/div&gt;
                &lt;/form&gt;
            &lt;/body&gt;
            &lt;/html&gt;
                </code>
            </example>
        </member>
        <member name="E:Telerik.WebControls.RadGrid.ColumnCreating">
            <summary>
            Fires <strong>before</strong> a custom column is created. You can handle the
            event to replace or modify the instance of the column that should be created and added
            into the collection of column in the corresponding
            <strong>GridTableView</strong>.
            </summary>
            <remarks>
            	<para>The <strong>ColumnCreating</strong> event of Telerik RadGrid is
                fired <strong>only for custom grid columns.</strong> It is not designed to be used
                to cancel the creation of auto-generated columns. Its purpose is to have place
                where to define your custom columns (extending the default grid columns)
                programmatically and add them to the grid <strong>Columns</strong>
                collection.</para>
            	<para>See the manual part of Telerik RadGrid documentation for details
                about Telerik RadGrid inheritance.</para>
            </remarks>
        </member>
        <member name="E:Telerik.WebControls.RadGrid.ColumnCreated">
            <remarks>
            The <strong>ColumnCreated</strong> event of Telerik RadGrid is
            designated to customize auto-generated columns at runtime (for example
            <strong>DataFormatString</strong>, <strong>ReadOnly</strong> or other properties of
            these auto-generated columns).
            </remarks>
            <summary>
            This event is fired <strong>after</strong> the creation of auto-generated
            columns.
            </summary>
        </member>
        <member name="E:Telerik.WebControls.RadGrid.ItemDataBound">
            <summary>
            	<para>Occurs when a data iten is bound to data in a Telerik RadGrid
                control.</para>
            </summary>
            <remarks>
            	<para>Before the Telerik RadGrid control can be rendered, each item in
                the control must be bound to a record in the data source. The ItemDataBound event
                is raised when a data item (represented by a GridItem object) is bound to data in
                the Telerik RadGrid control. This allows you to provide an
                event-handling method that performs a custom routine, such as modifying the values
                of the data bound to the item, whenever this event occurs.</para>
            	<para>A GridItemEventArgs object is passed to the event-handling method, which
                allows you to access the properties of the item being bound. You can determine
                which item type (header item, data pager item, and so on) is being bound by using
                the Item.ItemType property.</para>
            	<para>Note that the changes made to the item control and its children does persist
                into the ViewState. This event is fired as a result of a data-binding of Telerik RadGrid
                contorl. This event is fired for items of type:</para>
            	<list type="bullet">
            		<item>GridDataItem</item>
            		<item>GridEditFormItem</item>
            		<item>GridHeaderItem</item>
            		<item>GridPagerItem</item>
            		<item>GridFooterItem</item>
            	</list>
            </remarks>
            <example>
                The following code example demonstrates how to use the ItemDataBound event to
                modify the value of a field in the data source before it is displayed in a
                Telerik RadGrid control.
                <code lang="VB" title="VB">
            &lt;%@ Page Language="VB" <see cref="!:&gt; &lt;"/>@ Register Assembly="RadGrid.Net2" Namespace="Telerik.WebControls" TagPrefix="rad" %&gt;
             
            &lt;!DOCTYPE html Public "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
             
            &lt;script runat="server"&gt;
             
            Protected Sub RadGrid1_ItemDataBound(ByVal sender As Object, ByVal e As Telerik.WebControls.GridItemEventArgs)
                    If e.Item.ItemType = GridItemType.AlternatingItem Or e.Item.ItemType = GridItemType.Item Then
                        Dim item As Telerik.WebControls.GridDataItem
                        item = e.Item
                        item("CustomerID").Text = "Telerik"
                    End If
            End Sub
            &lt;/script&gt;
             
            &lt;html xmlns="http://www.w3.org/1999/xhtml" &gt;
            &lt;head runat="server"&gt;
                &lt;title&gt;Untitled Page&lt;/title&gt;
            &lt;/head&gt;
            &lt;body&gt;
                &lt;form id="form1" runat="server"&gt;
                &lt;div&gt;
                    &lt;rad:RadGrid
                        DataSourceID="SqlDataSource1"
                        ID="RadGrid1" 
                        runat="server" OnItemDataBound="RadGrid1_ItemDataBound"&gt;
                    &lt;/rad:RadGrid&gt;
                    &lt;!-- This example uses Microsoft SQL Server And connects  --&gt;
                    &lt;!-- To the Northwind sample database. Use an ASP.NET     --&gt;
                    &lt;!-- expression To retrieve the connection String value   --&gt;
                    &lt;!-- from the Web.config file.                            --&gt;        
                    &lt;asp:SqlDataSource 
                        ID="SqlDataSource1" 
                        runat="server"
                        ConnectionString="&lt;<see cref="!:NorthwindConnectionString">$ ConnectionStrings</see>&gt;"
                        SelectCommand="SELECT TOP 5 [CustomerID], [ContactName], [CompanyName] FROM [Customers]"&gt;
                    &lt;/asp:SqlDataSource&gt;
                &lt;/form&gt;
            &lt;/body&gt;
            &lt;/html&gt;
                </code>
            </example>
        </member>
        <member name="E:Telerik.WebControls.RadGrid.PageIndexChanged">
            <summary>Fires when a paging action has been performed.</summary>
        </member>
        <member name="E:Telerik.WebControls.RadGrid.PageSizeChanged">
            <summary>
            Fires when
            <a href="RadGridNet2~Telerik.WebControls.RadGrid~PageSize.html">PageSize</a> property
            value has been changed.
            </summary>
            <remarks>
            	<para>The <em>PageSizeChanged</em> event is rised when the value of the property
                PageSize is changed. You can cancel the event if the new <em>PageSize</em> value is
                invalid and it will not be saved. For example:</para>
            	<pre>
            protected void RadGrid1_PageSizeChanged(object source, GridPageSizeChangedEventArgs e)<br/>{<br/>    if(e.NewPageSize &lt; 1)<br/>
            		<strong>e.Canceled = true;<br/></strong>}
            </pre>
            </remarks>
        </member>
        <member name="E:Telerik.WebControls.RadGrid.SortCommand">
            <summary>Occurs when a column is sorted.</summary>
            <remarks>
            	<para>The SortCommand event is raised when a column is sorted.</para>
            	<para>A typical handler for the SortCommand event sorts the list.</para>
            </remarks>
            <example>
                The following code example demonstrates how to specify and code a handler for the
                SortCommand event to sort a Telerik RadGrid control.
                <code lang="VB" title="VB">
            &lt;%@ Page Language="VB" <see cref="!:&gt; &lt;"/>@ Register Assembly="RadGrid.Net2" Namespace="Telerik.WebControls" TagPrefix="rad" %&gt;
             
            &lt;!DOCTYPE html Public "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
             
            &lt;script runat="server"&gt;
             
                Protected Sub RadGrid1_SortCommand(ByVal source As Object, ByVal e As Telerik.WebControls.GridSortCommandEventArgs)
                    Response.Write("Sort")
                End Sub
            &lt;/script&gt;
             
            &lt;html xmlns="http://www.w3.org/1999/xhtml" &gt;
            &lt;head runat="server"&gt;
                &lt;title&gt;Untitled Page&lt;/title&gt;
            &lt;/head&gt;
            &lt;body&gt;
                &lt;form id="form1" runat="server"&gt;
                &lt;div&gt;
                    &lt;rad:RadGrid
                        DataSourceID="SqlDataSource1"
                        ID="RadGrid1" AllowSorting="true" 
                        runat="server" OnSortCommand="RadGrid1_SortCommand" &gt;
                    &lt;/rad:RadGrid&gt; 
                    &lt;!-- This example uses Microsoft SQL Server And connects  --&gt;
                    &lt;!-- To the Northwind sample database. Use an ASP.NET     --&gt;
                    &lt;!-- expression To retrieve the connection String value   --&gt;
                    &lt;!-- from the Web.config file.                            --&gt;        
                    &lt;asp:SqlDataSource 
                        ID="SqlDataSource1" 
                        runat="server"
                        ConnectionString="&lt;<see cref="!:NorthwindConnectionString">$ ConnectionStrings</see>&gt;"
                        SelectCommand="SELECT TOP 5 [CustomerID], [ContactName], [CompanyName] FROM [Customers]"&gt;
                    &lt;/asp:SqlDataSource&gt;
                &lt;/div&gt;
                &lt;/form&gt;
            &lt;/body&gt;
            &lt;/html&gt;
                </code>
            </example>
        </member>
        <member name="E:Telerik.WebControls.RadGrid.UpdateCommand">
            <summary>
            Occurs when the Update button is clicked for an item in the
            Telerik RadGrid control.
            </summary>
            <remarks>
            	<para>The UpdateCommand event is raised when the Update button is clicked for an
                item in the Telerik RadGrid control.</para>
            	<para>A typical handler for the UpdateCommand event updates the selected item from
                the data source.</para>
            </remarks>
            <example>
                The following code example demonstrates how to specify and code a handler for the
                UpdateCommand event to update a Telerik RadGrid control.
                <code lang="VB" title="VB">
            &lt;%@ Page Language="VB" <see cref="!:&gt; &lt;"/>@ Register Assembly="RadGrid.Net2" Namespace="Telerik.WebControls" TagPrefix="rad" %&gt;
             
            &lt;!DOCTYPE html Public "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
             
            &lt;script runat="server"&gt;
             
                Protected Sub RadGrid1_UpdateCommand(ByVal source As Object, ByVal e As Telerik.WebControls.GridCommandEventArgs)
                    Response.Write("Update")
                End Sub
            &lt;/script&gt;
             
            &lt;html xmlns="http://www.w3.org/1999/xhtml" &gt;
            &lt;head runat="server"&gt;
                &lt;title&gt;Untitled Page&lt;/title&gt;
            &lt;/head&gt;
            &lt;body&gt;
                &lt;form id="form1" runat="server"&gt;
                &lt;div&gt;
                    &lt;rad:RadGrid
                        DataSourceID="SqlDataSource1"
                        ID="RadGrid1" 
                        runat="server" OnUpdateCommand="RadGrid1_UpdateCommand"  &gt;
                        &lt;MasterTableView&gt;
                            &lt;Columns&gt;
                                &lt;rad:GridEditCommandColumn&gt;
                                &lt;/rad:GridEditCommandColumn&gt;
                            &lt;/Columns&gt;
                        &lt;/MasterTableView&gt;
                    &lt;/rad:RadGrid&gt; 
                    &lt;!-- This example uses Microsoft SQL Server And connects  --&gt;
                    &lt;!-- To the Northwind sample database. Use an ASP.NET     --&gt;
                    &lt;!-- expression To retrieve the connection String value   --&gt;
                    &lt;!-- from the Web.config file.                            --&gt;        
                    &lt;asp:SqlDataSource 
                        ID="SqlDataSource1" 
                        runat="server"
                        ConnectionString="&lt;<see cref="!:NorthwindConnectionString">$ ConnectionStrings</see>&gt;"
                        SelectCommand="SELECT TOP 5 [CustomerID], [ContactName], [CompanyName] FROM [Customers]"&gt;
                    &lt;/asp:SqlDataSource&gt;
                &lt;/div&gt;
                &lt;/form&gt;
            &lt;/body&gt;
            &lt;/html&gt;
                </code>
            </example>
        </member>
        <member name="E:Telerik.WebControls.RadGrid.InsertCommand">
            <summary>
            Occurs when the Insert button is clicked for an item in the
            Telerik RadGrid control.
            </summary>
            <remarks>
            	<para>The InsertCommand event is raised when the Insert button is clicked for an
                item in the Telerik RadGrid control.</para>
            	<para>A typical handler for the InsertCommand event insert the item into the data
                source.</para>
            </remarks>
            <example>
                The following code example demonstrates how to specify and code a handler for the
                InsertCommand event to insert a Telerik RadGrid control.
                <code lang="VB" title="VB">
            &lt;%@ Page Language="VB" <see cref="!:&gt; &lt;"/>@ Register Assembly="RadGrid.Net2" Namespace="Telerik.WebControls" TagPrefix="rad" %&gt;
             
            &lt;!DOCTYPE html Public "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
             
            &lt;script runat="server"&gt;
             
             
                Protected Sub RadGrid1_InsertCommand(ByVal source As Object, ByVal e As Telerik.WebControls.GridCommandEventArgs)
                    Response.Write("Insert")
                End Sub
            &lt;/script&gt;
             
            &lt;html xmlns="http://www.w3.org/1999/xhtml" &gt;
            &lt;head runat="server"&gt;
                &lt;title&gt;Untitled Page&lt;/title&gt;
            &lt;/head&gt;
            &lt;body&gt;
                &lt;form id="form1" runat="server"&gt;
                &lt;div&gt;
                    &lt;rad:RadGrid
                        DataSourceID="SqlDataSource1"
                        ID="RadGrid1" 
                        runat="server" OnInsertCommand="RadGrid1_InsertCommand"   &gt;
                        &lt;MasterTableView CommandItemDisplay="TopAndBottom"&gt;
                        &lt;/MasterTableView&gt;
                    &lt;/rad:RadGrid&gt; 
                    &lt;!-- This example uses Microsoft SQL Server And connects  --&gt;
                    &lt;!-- To the Northwind sample database. Use an ASP.NET     --&gt;
                    &lt;!-- expression To retrieve the connection String value   --&gt;
                    &lt;!-- from the Web.config file.                            --&gt;        
                    &lt;asp:SqlDataSource 
                        ID="SqlDataSource1" 
                        runat="server"
                        ConnectionString="&lt;<see cref="!:NorthwindConnectionString">$ ConnectionStrings</see>&gt;"
                        SelectCommand="SELECT TOP 5 [CustomerID], [ContactName], [CompanyName] FROM [Customers]"&gt;
                    &lt;/asp:SqlDataSource&gt;
                &lt;/div&gt;
                &lt;/form&gt;
            &lt;/body&gt;
            &lt;/html&gt;
                </code>
            </example>
        </member>
        <member name="E:Telerik.WebControls.RadGrid.GroupsChanging">
            <summary>
            Fires when a grouping action has been performed. For example when a column header
            was dragged in the GroupPanel.
            </summary>
            <remarks>
            You can use this event to set your own
            <a href="RadGridNet2~Telerik.WebControls.GridGroupByExpression.html">GridGroupByExpression</a>
            when the user tries to group the grid.
            </remarks>
            <example>
            	<code lang="CS" title="CS">
            protected void RadGrid1_GroupsChanging(object source, Telerik.WebControls.GridGroupsChangingEventArgs e)
            {
             //Expression is added (by drag/grop on group panel)
             
              if (e.Action == GridGroupsChangingAction.Group)
             {
              if (e.Expression.GroupByFields[0].FieldName != "CustomerID")
              {
               GridGroupByField countryGroupField = new GridGroupByField();
               countryGroupField.FieldName = "Country";
               GridGroupByField cityGroupField = new GridGroupByField();
               cityGroupField.FieldName = "City";
             
               e.Expression.SelectFields.Clear();
               e.Expression.SelectFields.Add(countryGroupField);
               e.Expression.SelectFields.Add(cityGroupField);
             
               e.Expression.GroupByFields.Clear();
               e.Expression.GroupByFields.Add(countryGroupField);
               e.Expression.GroupByFields.Add(cityGroupField);
              }
             
             }
            }
                </code>
            	<code lang="VB" title="VB">
            Protected Sub RadGrid1_GroupsChanging(ByVal source As Object, ByVal e As Telerik.WebControls.GridGroupsChangingEventArgs)
             'Expression is added (by drag/grop on group panel)
              If (e.Action = GridGroupsChangingAction.Group) Then
              If (e.Expression.GroupByFields(0).FieldName &lt;&gt; "CustomerID") Then
               Dim countryGroupField As GridGroupByField = New GridGroupByField
               countryGroupField.FieldName = "Country"
               Dim cityGroupField As GridGroupByField = New GridGroupByField
               cityGroupField.FieldName = "City"
               e.Expression.SelectFields.Clear
               e.Expression.SelectFields.Add(countryGroupField)
               e.Expression.SelectFields.Add(cityGroupField)
               e.Expression.GroupByFields.Clear
               e.Expression.GroupByFields.Add(countryGroupField)
               e.Expression.GroupByFields.Add(cityGroupField)
              End If
             End If
            End Sub
                </code>
            </example>
        </member>
        <member name="E:Telerik.WebControls.RadGrid.ItemUpdated">
            <summary>Fires when a grid item has been updated.</summary>
        </member>
        <member name="E:Telerik.WebControls.RadGrid.ItemInserted">
            <summary>Fires when a grid item has been inserted.</summary>
        </member>
        <member name="E:Telerik.WebControls.RadGrid.ItemDeleted">
            <summary>Fires when a grid item has been deleted.</summary>
        </member>
        <member name="P:Telerik.WebControls.RadGrid.DataSource">
            <summary>
            Gets or sets the object from which the Telerik RadGrid control
            retrieves its list of data items.
            </summary>
            <remarks>
            	<para>You should have in mind, that in case you are using simple data binding (i.e.
                when you are not using <strong>NeedDataSource</strong> event) the correct approach
                is to call the <b>DataBind()</b> method on the first page load when
                <b>!Page.IsPostBack</b> and after handling some event (sort event for
                example).</para>
            	<para>You will need to assign <strong>DataSource</strong> and rebind the grid after
                each operation (paging, sorting, editing, etc.) - this copies exactly MS
                <b>DataGrid</b> behavior.</para>
            </remarks>
            <value>
            An object that represents the data source from which the
            Telerik RadGrid control retrieves its data. The default is a null reference
            (Nothing in Visual Basic).
            </value>
            <example>
            The following code example demonstrates how the DataSource property of a
            Telerik RadGrid control is used. In this example, the
            Telerik RadGrid control is bound to a DataSet object. After the DataSource
            property is set, the DataBind method is called explicitly.
            </example>
        </member>
        <member name="P:Telerik.WebControls.RadGrid.DataMember">
            <summary>
            Gets or sets the name of the list of data that the Telerik RadGrid
            control binds to, in cases where the data source contains more than one distinct list
            of data items.
            </summary>
            <value>
            The name of the specific list of data that the Telerik RadGrid
            control binds to, if more than one list is supplied by a data source control. The
            default value is String.Empty.
            </value>
            <remarks>
            	<para>
                    Use the <b>DataMember</b> property to specify a member from a multimember data
                    source to bind to the list control. For example, if you have a data source with
                    more than one table specified in the <see cref="P:Telerik.WebControls.RadGrid.DataSource">DataSource</see>
                    property, use the <b>DataMember</b> property to specify which table to bind to
                    a data listing control.
                </para>
            	<para>The value of the DataMember property is stored in view state.</para>
            	<para>This property cannot be set by themes or style sheet themes. For more
                information, see <strong>ThemeableAttribute</strong> and <strong>Themes and Skins
                Overview</strong> in MSDN.</para>
            </remarks>
        </member>
        <member name="P:Telerik.WebControls.RadGrid.GroupingSettings">
            <summary>
            	<para>
                    Gets a reference to the <see cref="T:Telerik.WebControls.GridGroupingSettings"/> object that
                    allows you to set the properties of the grouping operation in a
                    Telerik RadGrid control.
                </para>
            </summary>
            <example>
                The following code example demonstrates how to set the GroupingSettings property
                declaratively. It sets the tooltips of the group expand control of the
                Telerik RadGrid. 
                <code lang="VB" title="VB">
            &lt;%@ Page Language="VB" %&gt;
             
            &lt;%@ Register Assembly="RadGrid.Net2" Namespace="Telerik.WebControls" TagPrefix="rad" %&gt;
             
            &lt;!DOCTYPE html Public "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
             
            &lt;html xmlns="http://www.w3.org/1999/xhtml" &gt;
            &lt;head runat="server"&gt;
                &lt;title&gt;Untitled Page&lt;/title&gt;
            &lt;/head&gt;
            &lt;body&gt;
                &lt;form id="form1" runat="server"&gt;
                &lt;div&gt;
                    &lt;rad:RadGrid
                        DataSourceID="SqlDataSource1"
                        ID="RadGrid1"
                        runat="server"&gt;
                        &lt;GroupingSettings ExpandTooltip="ExpandTooltip" /&gt;
                        &lt;MasterTableView&gt;
                            &lt;GroupByExpressions&gt;
                                &lt;rad:GridGroupByExpression&gt;
                                    &lt;SelectFields&gt;
                                        &lt;rad:GridGroupByField FieldAlias="CompanyName" FieldName="CompanyName" &gt;&lt;/rad:GridGroupByField&gt;
                                    &lt;/SelectFields&gt;
                                    &lt;GroupByFields&gt;
                                        &lt;rad:GridGroupByField FieldName="CompanyName" SortOrder="Descending"&gt;&lt;/rad:GridGroupByField&gt;
                                    &lt;/GroupByFields&gt;
                                &lt;/rad:GridGroupByExpression&gt;
                            &lt;/GroupByExpressions&gt;
                        &lt;/MasterTableView&gt;
                    &lt;/rad:RadGrid&gt;
                    &lt;!-- This example uses Microsoft SQL Server And connects  --&gt;
                    &lt;!-- To the Northwind sample database. Use an ASP.NET     --&gt;
                    &lt;!-- expression To retrieve the connection String value   --&gt;
                    &lt;!-- from the Web.config file.                            --&gt;        
                    &lt;asp:SqlDataSource 
                        ID="SqlDataSource1" 
                        runat="server"
                        ConnectionString="&lt;&lt;see cref="NorthwindConnectionString"&gt;$ ConnectionStrings&lt;/see&gt;&gt;"
                        SelectCommand="SELECT [CustomerID], [ContactName], [CompanyName] FROM [Customers]"&gt;
                    &lt;/asp:SqlDataSource&gt;
                &lt;/div&gt;
                &lt;/form&gt;
            &lt;/body&gt;
            &lt;/html&gt;
                </code>
            </example>
            <value>
                A reference to the <see cref="T:Telerik.WebControls.GridGroupingSettings"/> that allows you to set
                the properties of the grouping operation in a Telerik RadGrid control.
            </value>
            <remarks>
            	<para>Use the <strong>GroupingSettings</strong> property to control the settings of
                the grouping operations in a Telerik RadGrid control. This property is
                read-only; however, you can set the properties of the
                <strong>GridGroupingSettings</strong> object it returns. The properties can be set
                declaratively using one of the following methods:</para>
            	<list type="bullet">
            		<item>Place an attribute in the opening tag of the Telerik RadGrid
                    control in the form Property-Subproperty, where Subproperty is a property of
                    the GridGroupingSettings object (for example,
                    GroupingSettings-ExpandTooltip).</item>
            		<item>Nest a &lt;GroupingSettings&gt; element between the opening and closing
                    tags of the Telerik RadGrid control.</item>
            	</list>
            	<para>The properties can also be set programmatically in the form
                Property.Subproperty (for example, GroupingSettings.ExpandTooltip). Common settings
                usually include the tool tips for the sorting controls.</para>
            </remarks>
        </member>
        <member name="P:Telerik.WebControls.RadGrid.SortingSettings">
            <summary>
            	<para>
                    Gets a reference to the <see cref="T:Telerik.WebControls.GridSortingSettings"/> object that
                    allows you to set the properties of the sorting operation in a
                    Telerik RadGrid control.
                </para>
            </summary>
            <value>
                A reference to the <see cref="T:Telerik.WebControls.GridSortingSettings"/> that allows you to set
                the properties of the sorting operation in a Telerik RadGrid control.
            </value>
            <remarks>
            	<para>Use the SortingSettings property to control the settings of the sorting
                operations in a Telerik RadGrid control. This property is read-only;
                however, you can set the properties of the GridSortingSettings object it returns.
                The properties can be set declaratively using one of the following methods:</para>
            	<list type="bullet">
            		<item>Place an attribute in the opening tag of the Telerik RadGrid
                    control in the form Property-Subproperty, where Subproperty is a property of
                    the GridSortingSettings object (for example,
                    SortingSettings-SortedAscToolTip).</item>
            		<item>Nest a &lt;SortingSettings&gt; element between the opening and closing
                    tags of the Telerik RadGrid control.</item>
            	</list>
            	<para>The properties can also be set programmatically in the form
                Property.Subproperty (for example, SortingSettings.SortedAscToolTip). Common
                settings usually include the tool tips for the sorting controls.</para>
            </remarks>
            <example>
                The following code example demonstrates how to set the SortingSettings property
                declaratively. It sets the tooltips of the sorting control of the
                Telerik RadGrid control. 
                <code lang="VB" title="VB">
            &lt;%@ Page Language="VB" %&gt;
             
            &lt;%@ Register Assembly="RadGrid.Net2" Namespace="Telerik.WebControls" TagPrefix="rad" %&gt;
             
            &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
             
            &lt;html xmlns="http://www.w3.org/1999/xhtml" &gt;
            &lt;head runat="server"&gt;
                &lt;title&gt;Untitled Page&lt;/title&gt;
            &lt;/head&gt;
            &lt;body&gt;
                &lt;form id="form1" runat="server"&gt;
                &lt;div&gt;
                    &lt;rad:RadGrid 
                        DataSourceID="SqlDataSource1" 
                        ID="RadGrid1" 
                        runat="server" 
                        AllowSorting="true"&gt;
                        &lt;SortingSettings SortToolTip="SortToolTip" SortedAscToolTip="SortedAscToolTip" SortedDescToolTip="SortedDescToolTip" /&gt;
                    &lt;/rad:RadGrid&gt;
                    &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;
                    &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;
                    &lt;!-- expression to retrieve the connection string value   --&gt;
                    &lt;!-- from the Web.config file.                            --&gt;        
                    &lt;asp:SqlDataSource 
                        ID="SqlDataSource1" 
                        runat="server"
                        ConnectionString="&lt;&lt;see cref="NorthwindConnectionString"&gt;$ ConnectionStrings&lt;/see&gt;&gt;"
                        SelectCommand="SELECT [CustomerID], [ContactName], [CompanyName] FROM [Customers]"&gt;
                    &lt;/asp:SqlDataSource&gt;
                &lt;/div&gt;
                &lt;/form&gt;
            &lt;/body&gt;
            &lt;/html&gt;
                </code>
            </example>
        </member>
        <member name="P:Telerik.WebControls.RadGrid.HierarchySettings">
            <summary>
            	<para>
                    Gets a reference to the <see cref="T:Telerik.WebControls.GridHierarchySettings"/> object that
                    allows you to set the properties of the hierarchical
                    Telerik RadGrid control.
                </para>
            </summary>
            <value>
            A reference to the GridHierarchySettings that allows you to set the properties of
            the hierarchical Telerik RadGrid control.
            </value>
            <remarks>
            	<para>Use the HierarchySettings property to control the settings of the
                hierarchical Telerik RadGrid control. This property is read-only;
                however, you can set the properties of the GridHierarchySettings object it returns.
                The properties can be set declaratively using one of the following methods:</para>
            	<list type="bullet">
            		<item>Place an attribute in the opening tag of the Telerik RadGrid
                    control in the form Property-Subproperty, where Subproperty is a property of
                    the GridHierarchySettings object (for example,
                    HierarchySettings-CollapseTooltip).</item>
            		<item>Nest a &lt;HierarchySettings&gt; element between the opening and closing
                    tags of the Telerik RadGrid control.</item>
            	</list>
            	<para>The properties can also be set programmatically in the form
                Property.Subproperty (for example, HierarchySettings.CollapseTooltip). Common
                settings usually include the tool tips for the hierarchical
                Telerik RadGrid control.</para>
            </remarks>
            <example>
            	<code lang="VB" title="VB">
            	</code>
            </example>
        </member>
        <member name="P:Telerik.WebControls.RadGrid.ExportSettings">
            <summary>
            	<para>
                    Gets a reference to the <see cref="T:Telerik.WebControls.GridExportSettings"/> object that
                    allows you to set the properties of the grouping operation in a
                    Telerik RadGrid control.
                </para>
            </summary>
            <value>
            A reference to the GridExportSettings that allows you to set the properties of
            the grouping operation in a Telerik RadGrid control.
            </value>
            <remarks>
            	<para>Use the ExportSettings property to control the settings of the grouping
                operations in a Telerik RadGrid control. This property is read-only;
                however, you can set the properties of the GridGroupingSettings object it returns.
                The properties can be set declaratively using one of the following methods:</para>
            	<list type="bullet">
            		<item>Place an attribute in the opening tag of the Telerik RadGrid
                    control in the form Property-Subproperty, where Subproperty is a property of
                    the GridExportSettings object (for example,
                    GroupingSettings-ExpandTooltip).</item>
            		<item>Nest a &lt;GroupingSettings&gt; element between the opening and closing
                    tags of the Telerik RadGrid control.</item>
            	</list>
            	<para>The properties can also be set programmatically in the form
                Property.Subproperty (for example, GroupingSettings.ExpandTooltip). Common settings
                usually include the tool tips for the sorting controls.</para>
            </remarks>
        </member>
        <member name="P:Telerik.WebControls.RadGrid.ValidationSettings">
            <summary>
            	<para>
                    Gets a reference to the <see cref="T:Telerik.WebControls.GridValidationSettings"/> object that
                    allows you to set the properties of the validate operation in a
                    Telerik RadGrid control.
                </para>
            </summary>
            <value>
                A reference to the <see cref="T:Telerik.WebControls.GridValidationSettings"/> that allows you to set
                the properties of the validate operation in a Telerik RadGrid control.
            </value>
            <example>
                The following code example demonstrates how to set the
                <strong>ValidationSettings</strong> property declaratively. It sets the validation
                for the <strong>PerformInsert</strong> command event of the TextBox1 control.
                <code lang="VB" title="VB">
            &lt;%@ Page Language="VB" %&gt;
             
            &lt;%@ Register Assembly="RadGrid.Net2" Namespace="Telerik.WebControls" TagPrefix="rad" %&gt;
             
            &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
             
            &lt;html xmlns="http://www.w3.org/1999/xhtml" &gt;
            &lt;head runat="server"&gt;
                &lt;title&gt;Untitled Page&lt;/title&gt;
            &lt;/head&gt;
            &lt;body&gt;
                &lt;form id="form1" runat="server"&gt;
                &lt;div&gt;
                    &lt;rad:RadGrid
                        DataSourceID="SqlDataSource1"
                        ID="RadGrid1" 
                        AutoGenerateColumns="false" 
                        runat="server"&gt;
                        &lt;ValidationSettings 
                            EnableValidation="true" 
                            CommandsToValidate="PefrormInsert" /&gt;
                            &lt;MasterTableView CommandItemDisplay="TopAndBottom"&gt;
                                &lt;Columns&gt;
                                    &lt;rad:GridEditCommandColumn&gt;
                                    &lt;/rad:GridEditCommandColumn&gt;
                                    &lt;rad:GridTemplateColumn HeaderText="ContactName" UniqueName="ContactName" DataField="ContactName"&gt;
                                        &lt;ItemTemplate&gt;
                                            &lt;%# Eval("ContactName") &lt;see cref="TextBox Text='&lt;"&gt;&gt;
                                        &lt;/ItemTemplate&gt;
                                        &lt;EditItemTemplate&gt;
                                            &lt;asp&lt;/see&gt;# Bind("ContactName") %&gt;' ID="TextBox1" runat="server"&gt;&lt;/asp:TextBox&gt;
                                            &lt;asp:RequiredFieldValidator ControlToValidate="TextBox1" ID="RequiredFieldValidator1" runat="server" ErrorMessage="RequiredFieldValidator"&gt;&lt;/asp:RequiredFieldValidator&gt;
                                        &lt;/EditItemTemplate&gt;
                                    &lt;/rad:GridTemplateColumn&gt;
                                &lt;/Columns&gt;
                            &lt;/MasterTableView&gt;
                    &lt;/rad:RadGrid&gt;
                    &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;
                    &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;
                    &lt;!-- expression to retrieve the connection string value   --&gt;
                    &lt;!-- from the Web.config file.                            --&gt;        
                    &lt;asp:SqlDataSource 
                        ID="SqlDataSource1" 
                        runat="server"
                        ConnectionString="&lt;&lt;see cref="NorthwindConnectionString"&gt;$ ConnectionStrings&lt;/see&gt;&gt;"
                        SelectCommand="SELECT TOP 3 [CustomerID], [ContactName], [CompanyName] FROM [Customers]"&gt;
                    &lt;/asp:SqlDataSource&gt;
                &lt;/div&gt;
                &lt;/form&gt;
            &lt;/body&gt;
            &lt;/html&gt;
                </code>
            </example>
            <remarks>
            	<para>Use the ValidationSettings property to control the settings of the validate
                operations in a Telerik RadGrid control. This property is read-only;
                however, you can set the properties of the GridValidationSettings object it
                returns. The properties can be set declaratively using one of the following
                methods:</para>
            	<list type="bullet">
            		<item>Place an attribute in the opening tag of the Telerik RadGrid
                    control in the form Property-Subproperty, where Subproperty is a property of
                    the GridValidationSettings object (for example,
                    ValidationSettings-EnableValidation).</item>
            		<item>Nest a &lt;ValidationSettings&gt; element between the opening and closing
                    tags of the Telerik RadGrid control.</item>
            	</list>
            	<para>The properties can also be set programmatically in the form
                Property.Subproperty (for example, ValidationSettings.EnableValidation). Common
                settings usually include the propeties for the validation logic in
                Telerik RadGrid control.</para>
            </remarks>
        </member>
        <member name="P:Telerik.WebControls.RadGrid.EnableAJAX">
            <summary>
            Gets or sets a value indicating whether Telerik RadGrid will work in
            AJAX mode, i.e. will perform asynchronous requests instead of traditional
            postbacks.
            </summary>
            <value>
            	<strong>true</strong> if the ajax feature is enabled; otherwise,
            <strong>false</strong>. The default is <strong>false</strong>
            </value>
            <remarks>
            To enable sorting, set the EnableAjax property to <strong>true</strong>. When
            ajax is enabled, the ra.a.d.<strong>grid</strong> perform asynchronous requests instead
            of traditional postbacks on every command
            </remarks>
        </member>
        <member name="P:Telerik.WebControls.RadGrid.ShowDesignTimeSmartTagMessage">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.WebControls.RadGrid.EnableOutsideScripts">
            <summary>
            Gets or sets a value indicating if the outside scripts for the AJAX-enabled
            controls will be evaluated.
            </summary>
            <value>The default value is <strong>false</strong>.</value>
            <remarks>
            Outside scripts are scripts rendered from the code-behind and are usually not
            executed if they are rendered outside of the currently updated control(s).
            </remarks>
        </member>
        <member name="P:Telerik.WebControls.RadGrid.AllowCustomPaging">
            <summary>
            Gets or sets a value indicating whether custom paging should be performed instead
            of the integrated automatic paging.
            </summary>
            <remarks>
            	<para>
            		<a href="http://www.telerik.com/r.a.d.controls/Grid/Examples/Programming/CustomPaging/DefaultCS.aspx">
                This online example</a> demonstrates an approach to implementing custom paging with
                Telerik RadGrid. The simulated "DataLayer" wraps the logic of extracting records
                for only the specified page and deleting records. Telerik RadGrid
                maintains the pager buttons, changing of pager and other presentation specific
                features.</para>
            	<para>Another available option for custom paging support is represented in the
                <a href="grdCustomPagingThroughObjectDataSourcePopulation.html">how-to
                section</a>.</para>
            	<para><strong>Note:</strong> There is no universal mechanism for grouping when
                custom paging is allowed. The reason for this is that with the custom paging
                mechanism you fetch only part of the whole information from the grid datasource.
                Thus, when you trigger the grouping event the grid is restricted from operating
                with the whole available source data and is not able to group the items accurately.
                Furthermore, the aggregate functions as Count, Sum, etc. (covering operations with
                the whole set of grid items) will return incorrect results.</para>
            	<para>A workaround solution for you could be to use hierarchy in the grid instead
                of grouping to single out the grid items logically and visually according to custom
                criteria. Thus you will be able to use custom paging without further
                limitations.</para>
            	<para>Another approach is to build your own complex SQL statements which to get the
                whole available data from the grid datasource and then group the items in the grid
                with custom code logic.<br/>
            		<br/>
                Finally, you can use standard paging instead of custom paging to ensure the
                consistency of the data on grouping.</para>
            </remarks>
            <value>
            	<strong>true</strong>, if custom paging is allowed; otherwise
            <strong>false</strong>. The default is <strong>false</strong>.
            </value>
        </member>
        <member name="P:Telerik.WebControls.RadGrid.AllowPaging">
            <summary>
            Gets or sets a value indicating whether the automatic paging feature is
            enabled.
            </summary>
            <value>
            	<strong>true</strong> if the paging feature is enabled; otherwise,
            <strong>false</strong>. The default is <strong>false</strong>
            </value>
            <remarks>
            	<para>Instead of displaying all the records in the data source at the same time,
                the Telerik RadGrid control can automatically break the records up into
                pages. If the data source supports the paging capability, the
                Telerik RadGrid control can take advantage of that and provide built-in
                paging functionality. The paging feature can be used with any data source object
                that supports the System.Collections.ICollection interface or a data source that
                supports paging capability.</para>
            	<para>To enable the paging feature, set the <strong>AllowPaging</strong> property
                to <strong>true</strong>. By default, the Telerik RadGrid control
                displays 10 records on a page at a time. You can change the number of records
                displayed on a page by setting the PageSize property. To determine the total number
                of pages required to display the data source contents, use the PageCount property.
                You can determine the index of the currently displayed page by using the
                CurrentPageIndex property.</para>
            	<para>When paging is enabled, an additional item called the pager item is
                automatically displayed in the Telerik RadGrid control. The pager item contains controls
                that allow the user to navigate to the other pages. You can control the settings of
                the pager item by using the <strong>PagerItemStyle</strong> property. The pager
                item can be displayed at the top, bottom, or both the top and bottom of the control
                by setting the Position property. You can also select from one of four built-in
                pager display modes by setting the Mode property.</para>
            	<para>The Telerik RadGrid control also allows you to define a custom
                template for the pager item.</para>
            </remarks>
            <example>
                The following code example demonstrates how to use the <strong>AllowPaging</strong>
                property to declaratively enable the paging feature in the
                Telerik RadGrid control.
                <code lang="VB" title="VB">
            &lt;%@ Page Language="VB" %&gt;
             
            &lt;%@ Register Assembly="RadGrid.Net2" Namespace="Telerik.WebControls" TagPrefix="rad" %&gt;
             
            &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
             
            &lt;html xmlns="http://www.w3.org/1999/xhtml" &gt;
            &lt;head runat="server"&gt;
                &lt;title&gt;Untitled Page&lt;/title&gt;
            &lt;/head&gt;
            &lt;body&gt;
                &lt;form id="form1" runat="server"&gt;
                &lt;div&gt;
                    &lt;rad:RadGrid 
                        DataSourceID="SqlDataSource1" 
                        ID="RadGrid1" 
                        runat="server" 
                        AllowPaging="true" &gt;
                    &lt;/rad:RadGrid&gt;
                    &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;
                    &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;
                    &lt;!-- expression to retrieve the connection string value   --&gt;
                    &lt;!-- from the Web.config file.                            --&gt;        
                    &lt;asp:SqlDataSource 
                        ID="SqlDataSource1" 
                        runat="server" 
                        ConnectionString="&lt;&lt;see cref="NorthwindConnectionString"&gt;$ ConnectionStrings&lt;/see&gt;&gt;"
                        SelectCommand="SELECT [CustomerID], [ContactName], [CompanyName] FROM [Customers]"&gt;
                    &lt;/asp:SqlDataSource&gt;
                &lt;/div&gt;
                &lt;/form&gt;
            &lt;/body&gt;
            &lt;/html&gt;
                </code>
            </example>
            <requirements><para>Supported in: 3.0, 2.0, 1.1, 1.0 .NET Framework</para></requirements>
            <seealso cref="P:Telerik.WebControls.RadGrid.AllowCustomPaging" cat="Custom Paging">AllowCustomPaging Property</seealso>
            <seealso cref="!:grdBasicPaging.html" cat="Telerik RadGrid Manual">Basic Paging</seealso>
            <seealso cref="!:grdPagerItem.html" cat="Telerik RadGrid Manual">Pager Item</seealso>
        </member>
        <member name="P:Telerik.WebControls.RadGrid.AllowSorting">
            <summary>Gets or sets a value indicating whether the sorting feature is enabled.</summary>
            <value>
            	<strong>true</strong> if the sorting feature is enabled; otherwise,
            <strong>false</strong>. The default is <strong>false</strong>.
            </value>
            <remarks>
            	<para>When a data source control that supports sorting is bound to the
                Telerik RadGrid control, the Telerik RadGrid control can
                take advantage of the data source control's capabilities and provide automatic
                sorting functionality.</para>
            	<para>To enable sorting, set the <strong>AllowSorting</strong> property to
                <strong>true</strong>. When sorting is enabled, the heading text for each column
                field with its SortExpression property set is displayed as a link button.</para>
            	<para>Clicking the link button for a column causes the items in the
                Telerik RadGrid control to be sorted based on the sort expression.
                Typically, the sort expression is simply the name of the field displayed in the
                column, which causes the Telerik RadGrid control to sort with respect
                to that column. To sort by multiple fields, use a sort expression that contains a
                comma-separated list of field names. You can determine the sort expression that the
                Telerik RadGrid control is applying by using the SortExpression
                property. Clicking a column's link button repeatedly toggles the sort direction
                between ascending and descending order.</para>
            </remarks>
            <requirements><para>Supported in: 3.0, 2.0, 1.1, 1.0 .NET Framework</para></requirements>
            <example>
                The following code example demonstrates how to use the AllowSorting property to
                enable sorting in a Telerik RadGrid control when automatically
                generated columns are used.
                <code lang="VB" title="VB">
            &lt;%@ Page Language="VB" %&gt;
             
            &lt;%@ Register Assembly="RadGrid.Net2" Namespace="Telerik.WebControls" TagPrefix="rad" %&gt;
             
            &lt;!DOCTYPE html Public "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
             
            &lt;html xmlns="http://www.w3.org/1999/xhtml" &gt;
            &lt;head runat="server"&gt;
                &lt;title&gt;Untitled Page&lt;/title&gt;
            &lt;/head&gt;
            &lt;body&gt;
                &lt;form id="form1" runat="server"&gt;
                &lt;div&gt;
                    &lt;rad:RadGrid 
                        DataSourceID="SqlDataSource1" 
                        ID="RadGrid1" 
                        runat="server" 
                        AllowSorting="true"&gt;
                    &lt;/rad:RadGrid&gt;
                    &lt;!-- This example uses Microsoft SQL Server And connects  --&gt;
                    &lt;!-- To the Northwind sample database. Use an ASP.NET     --&gt;
                    &lt;!-- expression To retrieve the connection String value   --&gt;
                    &lt;!-- from the Web.config file.                            --&gt;        
                    &lt;asp:SqlDataSource 
                        ID="SqlDataSource1" 
                        runat="server" 
                        ConnectionString="&lt;<see cref="!:NorthwindConnectionString">$ ConnectionStrings</see>&gt;"
                        SelectCommand="SELECT [CustomerID], [ContactName], [CompanyName] FROM [Customers]"&gt;
                    &lt;/asp:SqlDataSource&gt;
                &lt;/div&gt;
                &lt;/form&gt;
            &lt;/body&gt;
            &lt;/html&gt;
                </code>
            </example>
            <seealso cref="!:grdSortingExpressions.html" cat="Telerik RadGrid Manual">Sorting Expressions</seealso>
        </member>
        <member name="P:Telerik.WebControls.RadGrid.ClientSettings">
            <summary>
            	<para>
                    Gets a reference to the <see cref="T:Telerik.WebControls.GridClientSettings"/> object that
                    allows you to set the properties of the client-side behavior and appearance in
                    a Telerik RadGrid control.
                </para>
            </summary>
            <value>
                A reference to the <see cref="T:Telerik.WebControls.GridClientSettings"/> that allows you to set the
                properties of the the client-side behavior and appearance in a
                Telerik RadGrid control.
            </value>
            <example>
            	<para>Use the ClientSettings property to control the settings of the client-side
                behavior and appearance in a Telerik RadGrid control. This property is
                read-only; however, you can set the properties of the GridClientSettings object it
                returns. The properties can be set declaratively using one of the following
                methods:</para>
            	<list type="bullet">
            		<item>Place an attribute in the opening tag of the Telerik RadGrid
                    control in the form Property-Subproperty, where Subproperty is a property of
                    the GridClientSettings object (for example,
                    ClientSettings-AllowDragToGroup).</item>
            		<item>Nest a &lt;ClientSettings&gt; element between the opening and closing
                    tags of the Telerik RadGrid control.</item>
            	</list>
            	<para>The properties can also be set programmatically in the form
                Property.Subproperty (for example, SortingSettings.AllowDragToGroup). Common
                settings usually include the behavior and appearance on the client-side.</para>
            </example>
        </member>
        <member name="P:Telerik.WebControls.RadGrid.AlternatingItemStyle">
            <summary>
            Gets a reference to the GridTableItemStyle object that allows you to set the
            appearance of alternating data items in a Telerik RadGrid control.
            </summary>
            <value>
            A reference to the GridTableItemStyle that represents the style of alternating
            data items in a Telerik RadGrid control.
            </value>
            <remarks>
            	<para>Use the AlternatingItemStyle property to control the appearance of
                alternating data items in a Telerik RadGrid control. When this property
                is set, the data items are displayed alternating between the ItemStyle settings and
                the AlternatingItemStyle settings. This property is read-only; however, you can set
                the properties of the GridTableItemStyle object it returns. The properties can be
                set declaratively using one of the following methods:</para>
            	<list type="bullet">
            		<item>Place an attribute in the opening tag of the Telerik RadGrid
                    control in the form Property-Subproperty, where Subproperty is a property of
                    the GridTableItemStyle object (for example,
                    AlternatingItemStyle-ForeColor).</item>
            		<item>Nest an &lt;AlternatingItemStyle&gt; element between the opening and
                    closing tags of the Telerik RadGrid control.</item>
            	</list>
            	<para>The properties can also be set programmatically in the form
                Property.Subproperty (for example, AlternatingItemStyle.ForeColor). Common settings
                usually include a custom background color, foreground color, and font
                properties.</para>
            </remarks>
            <example>
                The following code example demonstrates how to use the AlternatingItemStyle
                property to declaratively define the style for alternating data items in a
                Telerik RadGrid control. 
                <code lang="VB" title="VB">
            &lt;%@ Page language="VB" %&gt;
             
            &lt;%@ Register Assembly="RadGrid.Net2" Namespace="Telerik.WebControls" TagPrefix="rad" %&gt;
             
            &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
                "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
            &lt;html  &gt;
              &lt;head id="Head1" runat="server"&gt;
                &lt;title&gt;GridView ItemStyle and AlternatingItemStyle Example&lt;/title&gt;
            &lt;/head&gt;
            &lt;body&gt;
                &lt;form id="form1" runat="server"&gt;
                  &lt;h3&gt;GridView ItemStyle and AlternatingItemStyle Example&lt;/h3&gt;
             
                  &lt;rad:RadGrid id="CustomersGridView" 
                    datasourceid="CustomersSource" 
                    autogeneratecolumns="true" 
                    Skin="None"
                    runat="server"&gt;
                            
                    &lt;itemstyle backcolor="LightCyan"  
                       forecolor="DarkBlue"
                       font-italic="true"/&gt;
                                
                    &lt;alternatingitemstyle backcolor="PaleTurquoise"  
                      forecolor="DarkBlue"
                      font-italic="true"/&gt;
                                        
                  &lt;/rad:RadGrid&gt;
                        
                  &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;
                  &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;
                  &lt;!-- expression to retrieve the connection string value   --&gt;
                  &lt;!-- from the Web.config file.                            --&gt;
                  &lt;asp:sqldatasource id="CustomersSource"
                    selectcommand="Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]"
                    connectionstring="&lt;&lt;see cref="NorthWindConnectionString"&gt;$ ConnectionStrings&lt;/see&gt;&gt;" 
                    runat="server"/&gt;
                    
                &lt;/form&gt;
              &lt;/body&gt;
            &lt;/html&gt;
                </code>
            </example>
            <requirements>Supported in: 3.0, 2.0, 1.1, 1.0 .NET Framework</requirements>
        </member>
        <member name="P:Telerik.WebControls.RadGrid.GroupHeaderItemStyle">
            <summary>
            Gets a reference to the GridTableItemStyle object that allows you to set the
            appearance of the group-header item in a Telerik RadGrid control.
            </summary>
            <value>
            A reference to the GridTableItemStyle that represents the style of the
            group-header item in a Telerik RadGrid control.
            </value>
            <remarks>
            	<para>Use the GroupHeaderItemStyle property to control the appearance of the
                group-header item in a Telerik RadGrid control. This property is
                read-only; however, you can set the properties of the GridTableItemStyle object it
                returns. The properties can be set declaratively using one of the following
                methods:</para>
            	<list type="bullet">
            		<item>Place an attribute in the opening tag of the Telerik RadGrid
                    control in the form Property-Subproperty, where Subproperty is a property of
                    the GridTableItemStyle object (for example,
                    GroupHeaderItemStyle-ForeColor).</item>
            		<item>Nest a &lt;GroupHeaderItemStyle&gt; element between the opening and
                    closing tags of the Telerik RadGrid control.</item>
            	</list>
            	<para>The properties can also be set programmatically in the form
                Property.Subproperty (for example, GroupHeaderItemStyle.ForeColor). Common settings
                usually include a custom background color, foreground color, and font
                properties.</para>
            </remarks>
            <example>
                The following code example demonstrates how to use the SelectedItemStyle property
                to define a custom style for the group-header item in a Telerik RadGrid
                control.
                <code lang="VB" title="VB">
            &lt;%@ Page Language="VB" %&gt;
             
            &lt;%@ Register Assembly="RadGrid.Net2" Namespace="Telerik.WebControls" TagPrefix="rad" %&gt;
             
            &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
             
            &lt;html xmlns="http://www.w3.org/1999/xhtml" &gt;
            &lt;head runat="server"&gt;
                &lt;title&gt;Untitled Page&lt;/title&gt;
            &lt;/head&gt;
            &lt;body&gt;
                &lt;form id="form1" runat="server"&gt;
                &lt;div&gt;
                    &lt;rad:RadGrid 
                        DataSourceID="SqlDataSource1" 
                        ID="RadGrid1" 
                        runat="server" 
                        Skin="None" &gt;
                        &lt;GroupHeaderItemStyle BackColor="red"  /&gt; 
                        &lt;MasterTableView&gt;
                            &lt;GroupByExpressions&gt;
                                &lt;rad:GridGroupByExpression&gt;
                                    &lt;SelectFields&gt;
                                        &lt;rad:GridGroupByField FieldAlias="CompanyName" FieldName="CompanyName" &gt;&lt;/rad:GridGroupByField&gt;
                                    &lt;/SelectFields&gt;
                                    &lt;GroupByFields&gt;
                                        &lt;rad:GridGroupByField FieldName="CompanyName" SortOrder="Descending"&gt;&lt;/rad:GridGroupByField&gt;
                                    &lt;/GroupByFields&gt;
                                &lt;/rad:GridGroupByExpression&gt;
                            &lt;/GroupByExpressions&gt;
                        &lt;/MasterTableView&gt;
                    &lt;/rad:RadGrid&gt;
                    &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;
                    &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;
                    &lt;!-- expression to retrieve the connection string value   --&gt;
                    &lt;!-- from the Web.config file.                            --&gt;        
                    &lt;asp:SqlDataSource 
                        ID="SqlDataSource1" 
                        runat="server" 
                        ConnectionString="&lt;<see cref="!:NorthwindConnectionString">$ ConnectionStrings</see>&gt;"
                        SelectCommand="SELECT TOP 5 [CustomerID], [ContactName], [CompanyName] FROM [Customers]"&gt;
                    &lt;/asp:SqlDataSource&gt;
                &lt;/div&gt;
                &lt;/form&gt;
            &lt;/body&gt;
            &lt;/html&gt;
                </code>
            </example>
            <requirements><para>Supported in: 3.0, 2.0, 1.1, 1.0 .NET Framework</para></requirements>
        </member>
        <member name="P:Telerik.WebControls.RadGrid.AutoGenerateColumns">
            <summary>
            Gets or sets a value indicating whether bound fields are automatically created
            for each field in the data source.
            </summary>
            <remarks>
            	<para>When the AutoGenerateColumns property is set to true, an
                <strong>GridBoundColumn</strong> object is automatically created for each field in
                the data source. Each field is then displayed as a column in the
                Telerik RadGrid control in the order that the fields appear in the data
                source. This option provides a convenient way to display every field in the data
                source; however, you have limited control of how an automatically generated column
                field is displayed or behaves.</para>
            	<para>This set of columns can be accessed using the
                <a href="RadGrid~Telerik.WebControls.GridTableView~AutoGeneratedColumns.html">AutoGeneratedColumns</a>
                collection.</para>
            	<div>
            		<list type="table">
            			<item>
            				<term><img src="images/grd_hs-note.gif"/></term>
            				<description>Runtime auto-generated columns will always appear after
                            the user-specified columns, unless the columns are ordered
                            programmatically.</description>
            			</item>
            		</list>
            	</div>
            	<para>Instead of letting the Telerik RadGrid control automatically
                generate the column fields, you can manually define the column fields by setting
                the <strong>AutoGenerateColumns</strong> property to <strong>false</strong> and
                then creating a custom Columns collection. In addition to bound column fields, you
                can also display a button column, a check box column, a button column, a hyperlink
                column, an image column, or a column based on your own custom-defined template
                etc.</para>
            </remarks>
            <value>
            	<strong>true</strong> to automatically create bound fields for each field in the
            data source; otherwise, <strong>false</strong>. The default is
            <strong>true</strong>.
            </value>
            <example>
                The following code example demonstrates how to use the AutoGenerateColumns property
                to automatically create bound columns in a Telerik RadGrid control for
                each field in the data source. 
                <code lang="VB" title="VB">
            &lt;%@ Page Language="VB" %&gt;
             
            &lt;%@ Register Assembly="RadGrid.Net2" Namespace="Telerik.WebControls" TagPrefix="rad" %&gt;
             
            &lt;!DOCTYPE html Public "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
             
            &lt;html xmlns="http://www.w3.org/1999/xhtml" &gt;
            &lt;head runat="server"&gt;
                &lt;title&gt;Untitled Page&lt;/title&gt;
            &lt;/head&gt;
            &lt;body&gt;
                &lt;form id="form1" runat="server"&gt;
                &lt;div&gt;
                    &lt;rad:RadGrid 
                        DataSourceID="SqlDataSource1" 
                        ID="RadGrid1" 
                        runat="server" 
                        AutoGenerateColumns="true" 
                        AllowSorting="true"&gt;
                    &lt;/rad:RadGrid&gt;
                    &lt;!-- This example uses Microsoft SQL Server And connects  --&gt;
                    &lt;!-- To the Northwind sample database. Use an ASP.NET     --&gt;
                    &lt;!-- expression To retrieve the connection String value   --&gt;
                    &lt;!-- from the Web.config file.                            --&gt;        
                    &lt;asp:SqlDataSource 
                        ID="SqlDataSource1" 
                        runat="server" 
                        ConnectionString="&lt;&lt;see cref="NorthwindConnectionString"&gt;$ ConnectionStrings&lt;/see&gt;&gt;"
                        SelectCommand="SELECT [CustomerID], [ContactName], [CompanyName] FROM [Customers]"&gt;
                    &lt;/asp:SqlDataSource&gt;
                &lt;/div&gt;
                &lt;/form&gt;
            &lt;/body&gt;
            &lt;/html&gt;
                </code>
            </example>
            <requirements><para>Supported in: 3.0, 2.0, 1.1, 1.0 .NET Framework</para></requirements>
        </member>
        <member name="P:Telerik.WebControls.RadGrid.BackImageUrl">
            <summary>
            Gets or sets the URL to an image to display in the background of a
            Telerik RadGrid control.
            </summary>
            <value>
            The URL of an image to display in the background of the
            Telerik RadGrid control. The default is an empty string (""), which
            indicates that this property is not set.
            </value>
            <remarks>
            	<para>Use the <strong>BackImageUrl</strong> property to specify the URL to an image
                to display in the background of a Telerik RadGrid control.</para>
            	<para>If the specified image is smaller than the Telerik RadGrid
                control, the image is tiled to fill in the background. If the image is larger than
                the control, the image is cropped.</para>
            </remarks>
            <requirements><para>Supported in: 3.0, 2.0, 1.1, 1.0 .NET Framework</para></requirements>
        </member>
        <member name="P:Telerik.WebControls.RadGrid.GroupPanel">
            <summary>
                Gets group panel control instance - visible only if grouping is enabled in grid
                (<see cref="P:Telerik.WebControls.RadGrid.GroupingEnabled"/>). Each <see cref="T:Telerik.WebControls.GridTableView"/>'s
                Group-By-Expression is visualized in this panel.
            </summary>
            <seealso cref="T:Telerik.WebControls.GridClientSettings"/>
            <remarks>
                If grouping is enabled grid allows grouping by column(s) by drag-and-drop of
                columns from it's detail tables in this panel For this purpose set
                <a href="RadGrid~Telerik.WebControls.GridClientSettings~AllowDragToGroup.html">AllowDragToGroup</a>
                property to <strong>true</strong>. You can modify panel's appearance using
                <see cref="P:Telerik.WebControls.GridGroupPanel.PanelStyle"/> and
                <see cref="P:Telerik.WebControls.GridGroupPanel.PanelItemsStyle"/>.
            </remarks>
        </member>
        <member name="P:Telerik.WebControls.RadGrid.ShowGroupPanel">
            <seealso cref="P:Telerik.WebControls.RadGrid.GroupPanel"/>
            <summary>
            	<para>
                    Gets or sets a value indicating whether the <see cref="T:Telerik.WebControls.GridGroupPanel"/>
                    would be shown in Telerik RadGrid.
                </para>
            </summary>
            <value>
            	<strong>true</strong>, when Telerik RadGrid will display the panel; otherwise
            <strong>false</strong>. The default is <strong>false</strong>.
            </value>
        </member>
        <member name="P:Telerik.WebControls.RadGrid.GroupingEnabled">
            <seealso cref="P:Telerik.WebControls.RadGrid.GroupPanel">GroupPanel</seealso>
            <summary>Gets or sets a value indicating whether the grouping is enabled.</summary>
            <remarks>
                Most often this property is used in conjunction with
                <see cref="P:Telerik.WebControls.RadGrid.ShowGroupPanel"/> property set to <strong>true</strong>. The
                easiest way to turn the grouping on is by using the grid's SmartTag option for
                enabling the grouping.
            </remarks>
            <seealso cref="!:grdBasicGrouping.html" cat="Telerik RadGrid Manual">Basic Grouping</seealso>
            <value>
            	<strong>true</strong>, when the automatic grouping is enabled; otherwise
            <strong>false</strong>. The default is <strong>false</strong>.
            </value>
        </member>
        <member name="P:Telerik.WebControls.RadGrid.AllowAutomaticUpdates">
            <summary>
            Gets or sets a value indicating whether Telerik RadGrid will perform
            automatic updates to the data source.
            </summary>
            <value>
            	<strong>true</strong>, when the automatic updates are allowed; otherwise
            <strong>false</strong>. The default is <strong>false</strong>.
            </value>
            <remarks>
            See <a href="grdAutomaticDataSourceOperations.html">Automatic Data Source
            Operations</a> for details.
            </remarks>
        </member>
        <member name="P:Telerik.WebControls.RadGrid.AllowAutomaticInserts">
            <summary>
            Gets or sets a value indicating whether Telerik RadGrid will perform
            automatic insert of records to the data source.
            </summary>
            <remarks>
            See <a href="grdAutomaticDataSourceOperations.html">Automatic Data Source
            Operations</a> for details.
            </remarks>
            <value>
            	<strong>true</strong>, when automatic insert into the database would be
            performed; otherwise <strong>false</strong>. The default is
            <strong>false</strong>.
            </value>
        </member>
        <member name="P:Telerik.WebControls.RadGrid.AllowAutomaticDeletes">
            <summary>
            Gets or sets a value indicating whether Telerik RadGrid will
            automatically delete records from the specified data source.
            </summary>
            <remarks>
            See <a href="grdAutomaticDataSourceOperations.html">Automatic Data Source
            Operations</a> for details.
            </remarks>
            <value>
            	<strong>true</strong>, when automatic delete from the database would be
            performed; otherwise <strong>false</strong>. The default is
            <strong>false</strong>.
            </value>
        </member>
        <member name="P:Telerik.WebControls.RadGrid.MasterTableView">
            <summary>
                The instance of <see cref="T:Telerik.WebControls.GridTableView"/> that represents the main
                grid-table view in RadGrid.
            </summary>
            <remarks>
            	<para class="">
                    Telerik RadGrid introduces a new approach to hierarchical data
                    structures. The innovative in Telerik RadGrid is having a so called
                    <strong>MasterTableView</strong>. This is the topmost table of the hierarchical
                    structure. It is a <see cref="T:Telerik.WebControls.GridTableView"/> with
                    <see cref="T:Telerik.WebControls.GridTableViewCollection"/>. The collection holds the so called
                    DetailTables - tables related to the fields of the MasterTable. Each
                    DetailTable can have its own <strong>GridTableViewCollection</strong> with
                    other Detail Tables, thus forming the hierarchical structure.
                </para>
            	<div>
            		<list type="table">
            			<item>
            				<description><strong>Note:</strong> There is only one Master Table for
                            a single Telerik RadGrid. This is the topmost table. All
                            inner tables are referred as a Detail Tables regardless of whether they
                            have related (inner) tables or not.</description>
            			</item>
            		</list>
            	</div>
            </remarks>
            <value>
                A reference to the topmost <see cref="T:Telerik.WebControls.GridTableView"/>, i.e the
                <strong>MasterTableView</strong>.
            </value>
            <seealso cref="!:grdRadGridMasterTableViewDifference.html" cat="Telerik RadGrid Manual">RadGrid and MasterTableView difference</seealso>
            <example>
            	<pre>
            &lt;rad:radgrid id="RadGrid1" runat="server"<br/>
            CssClass= "RadGrid" Width="100%" AutoGenerateColumns="False" PageSize="3" AllowSorting="True"<br/>  
            AllowMultiRowSelection= "False" AllowPaging="True" GridLines="None" AllowFilteringByColumn="true"&gt;<br/> 
            &lt;PagerStyle Mode="NumericPages" CssClass="Pager"&gt;&lt;/PagerStyle&gt;<br/>  
            &lt;HeaderStyle CssClass="Header"&gt;&lt;/HeaderStyle&gt;<br/>  
            &lt;ItemStyle CssClass="Row"&gt;&lt;/ItemStyle&gt;<br/>
            &lt;AlternatingItemStyle CssClass="AltRow"&gt;&lt;/AlternatingItemStyle&gt;<br/>  
            &lt;MasterTableView DataKeyNames="CustomerID" AllowMultiColumnSorting="True"&gt;<br/> 
            &lt;DetailTables&gt;<br/>     
            &lt;rad:GridTableView DataKeyNames="OrderID" DataMember="Orders"&gt;<br/>  
            &lt;ParentTableRelation&gt;<br/>   
            &lt;rad:GridRelationFields DetailKeyField="CustomerID" MasterKeyField="CustomerID" /&gt;<br/>  
            &lt;/ParentTableRelation&gt;<br/>                        &lt;DetailTables&gt;<br/>    
            &lt;rad:GridTableView DataKeyNames="OrderID" DataMember="OrderDetails"&gt;<br/>    
            &lt;ParentTableRelation&gt;<br/>        
            &lt;rad:GridRelationFields DetailKeyField="OrderID" MasterKeyField="OrderID" /&gt;<br/>    
            &lt;/ParentTableRelation&gt;<br/>              
            &lt;Columns&gt;<br/>                   
            &lt;rad:GridBoundColumn SortExpression="UnitPrice" HeaderText="Unit Price" HeaderButtonType="TextButton"<br/> 
            DataField= "UnitPrice"&gt;<br/>    
            &lt;/rad:GridBoundColumn&gt;<br/>          
            &lt;rad:GridBoundColumn SortExpression="Quantity" HeaderText="Quantity" HeaderButtonType="TextButton"<br/>     
            DataField= "Quantity"&gt;<br/>                                    &lt;/rad:GridBoundColumn&gt;<br/>    
            &lt;rad:GridBoundColumn SortExpression="Discount" HeaderText="Discount" HeaderButtonType="TextButton"<br/>     
            DataField= "Discount"&gt;<br/>                                    &lt;/rad:GridBoundColumn&gt;<br/>          
            &lt;/Columns&gt;<br/>                                &lt;SortExpressions&gt;<br/>                           
            &lt;rad:GridSortExpression FieldName="Quantity" SortOrder="Descending"&gt;&lt;/rad:GridSortExpression&gt;<br/>    
            &lt;/SortExpressions&gt;<br/>                                &lt;ItemStyle BackColor="#A7B986"&gt;&lt;/ItemStyle&gt;<br/>  
            &lt;HeaderStyle CssClass="Header1"&gt;&lt;/HeaderStyle&gt;<br/>     
            &lt;AlternatingItemStyle BackColor="#D9E8C4"&gt;&lt;/AlternatingItemStyle&gt;<br/>    
            &lt;/rad:GridTableView&gt;<br/>              
            &lt;/DetailTables&gt;<br/>      
            &lt;Columns&gt;<br/>               
            &lt;rad:GridBoundColumn SortExpression="OrderID" HeaderText="OrderID" HeaderButtonType="TextButton"<br/>   
            DataField= "OrderID"&gt;<br/>                            &lt;/rad:GridBoundColumn&gt;<br/>        
            &lt;rad:GridBoundColumn SortExpression="OrderDate" HeaderText="Date Ordered" HeaderButtonType="TextButton"<br/>    
            DataField= "OrderDate"&gt;<br/>                            &lt;/rad:GridBoundColumn&gt;<br/>       
            &lt;rad:GridBoundColumn SortExpression="EmployeeID" HeaderText="EmployeeID" HeaderButtonType="TextButton"<br/>  
            DataField= "EmployeeID"&gt;<br/>                            &lt;/rad:GridBoundColumn&gt;<br/>     
            &lt;/Columns&gt;<br/>                        &lt;SortExpressions&gt;<br/>          
            &lt;rad:GridSortExpression FieldName="OrderDate"&gt;&lt;/rad:GridSortExpression&gt;<br/>        
            &lt;/SortExpressions&gt;<br/>                        &lt;ItemStyle Height="19px" BackColor="#FCEDB0"&gt;&lt;/ItemStyle&gt;<br/> 
            &lt;HeaderStyle CssClass="Header2" ForeColor="#ffffff"&gt;&lt;/HeaderStyle&gt;<br/>       
            &lt;AlternatingItemStyle Height="19px" BackColor="#D5B96A"&gt;&lt;/AlternatingItemStyle&gt;<br/>  
            &lt;/rad:GridTableView&gt;<br/>                &lt;/DetailTables&gt;<br/>      
            &lt;Columns&gt;<br/>        
            &lt;rad:GridBoundColumn SortExpression="CustomerID" HeaderText="CustomerID" HeaderButtonType="TextButton"<br/>  
            DataField= "CustomerID"&gt;<br/>        
            &lt;/rad:GridBoundColumn&gt;<br/>    
            &lt;rad:GridBoundColumn SortExpression="ContactName" HeaderText="Contact Name" HeaderButtonType="TextButton"<br/>    
            DataField= "ContactName"&gt;<br/>   
            &lt;/rad:GridBoundColumn&gt;<br/>       
            &lt;rad:GridBoundColumn SortExpression="CompanyName" HeaderText="Company" HeaderButtonType="TextButton"<br/>  
            DataField= "CompanyName"&gt;<br/>       
            &lt;/rad:GridBoundColumn&gt;<br/>                &lt;/Columns&gt;<br/>      
            &lt;SortExpressions&gt;<br/>          
            &lt;rad:GridSortExpression FieldName="CompanyName"&gt;&lt;/rad:GridSortExpression&gt;<br/>    
            &lt;/SortExpressions&gt;<br/>            &lt;/MasterTableView&gt;<br/>   
            &lt;SelectedItemStyle ForeColor="White" BackColor="DarkBlue" CssClass=""&gt;&lt;/SelectedItemStyle&gt;<br/>
            &lt;/rad:radgrid&gt;
                </pre>
            </example>
        </member>
        <member name="P:Telerik.WebControls.RadGrid.CurrentPageIndex">
            <summary>Gets or sets an integer value representing the current page index.</summary>
            <remarks>
                Note that the Paging must be enabled (<see cref="P:Telerik.WebControls.RadGrid.AllowPaging"/> must
                be true) in order to use this property.
            </remarks>
            <value>zero-based int representing the index of the current page.</value>
        </member>
        <member name="P:Telerik.WebControls.RadGrid.EditItemStyle">
            <summary>
            Gets a reference to the GridTableItemStyle object that allows you to set the
            appearance of the item selected for editing in a Telerik RadGrid
            control.
            </summary>
            <value>
            A reference to the GridTableItemStyle that represents the style of the item being
            edited in a Telerik RadGrid control.
            </value>
            <requirements><para>Supported in: 3.0, 2.0, 1.1, 1.0 .NET Framework</para></requirements>
            <remarks>
            	<para>Use the EditItemStyle property to control the appearance of the item being
                edited in a Telerik RadGrid control. This property is read-only;
                however, you can set the properties of the GridTableItemStyle object it returns.
                The properties can be set declaratively using one of the following methods:</para>
            	<list type="bullet">
            		<item>Place an attribute in the opening tag of the Telerik RadGrid
                    control in the form Property-Subproperty, where Subproperty is a property of
                    the GridTableItemStyle object (for example, EditItemStyle-ForeColor).</item>
            		<item>Nest a &lt;EditItemStyle&gt; element between the opening and closing tags
                    of the Telerik RadGrid control.</item>
            	</list>
            	<para>The properties can also be set programmatically in the form
                Property.Subproperty (for example, EditItemStyle.ForeColor). Common settings
                usually include a custom background color, foreground color, and font
                properties.</para>
            </remarks>
            <example>
                The following code example demonstrates how to use the EditItemStyle property to
                define a custom style for the item being edited in a Telerik RadGrid
                control.
                <code lang="VB" title="VB">
            &lt;%@ Page Language="VB" %&gt;
             
            &lt;%@ Register Assembly="RadGrid.Net2" Namespace="Telerik.WebControls" TagPrefix="rad" %&gt;
             
            &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
             
            &lt;html xmlns="http://www.w3.org/1999/xhtml" &gt;
            &lt;head runat="server"&gt;
                &lt;title&gt;Untitled Page&lt;/title&gt;
            &lt;/head&gt;
            &lt;body&gt;
                &lt;form id="form1" runat="server"&gt;
                &lt;div&gt;
                    &lt;rad:RadGrid 
                        DataSourceID="SqlDataSource1" 
                        ID="RadGrid1" 
                        runat="server" 
                        Skin="None" &gt;
                        &lt;EditItemStyle BackColor="red" /&gt;
                        &lt;MasterTableView&gt;
                            &lt;Columns&gt;
                                &lt;rad:GridEditCommandColumn&gt;
                                &lt;/rad:GridEditCommandColumn&gt;
                            &lt;/Columns&gt;
                        &lt;/MasterTableView&gt;
                    &lt;/rad:RadGrid&gt;
                    &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;
                    &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;
                    &lt;!-- expression to retrieve the connection string value   --&gt;
                    &lt;!-- from the Web.config file.                            --&gt;        
                    &lt;asp:SqlDataSource 
                        ID="SqlDataSource1" 
                        runat="server" 
                        ConnectionString="&lt;<see cref="!:NorthwindConnectionString">$ ConnectionStrings</see>&gt;"
                        SelectCommand="SELECT TOP 5 [CustomerID], [ContactName], [CompanyName] FROM [Customers]"&gt;
                    &lt;/asp:SqlDataSource&gt;
                &lt;/div&gt;
                &lt;/form&gt;
            &lt;/body&gt;
            &lt;/html&gt;
                </code>
            </example>
        </member>
        <member name="P:Telerik.WebControls.RadGrid.FooterStyle">
            <summary>
            Gets a reference to the GridTableItemStyle object that allows you to set the
            appearance of the footer item in a Telerik RadGrid control.
            </summary>
            <value>
            A reference to the GridTableItemStyle that represents the style of the footer
            item in a Telerik RadGrid control.
            </value>
            <remarks>
            	<para>Use the FooterItemStyle property to control the appearance of the footer item
                in a Telerik RadGrid control. This property is read-only; however, you
                can set the properties of the GridTableItemStyle object it returns. The properties
                can be set declaratively using one of the following methods:</para>
            	<list type="bullet">
            		<item>Place an attribute in the opening tag of the Telerik RadGrid
                    control in the form Property-Subproperty, where Subproperty is a property of
                    the GridTableItemStyle object (for example, FooterItemStyle-ForeColor).</item>
            		<item>Nest a &lt;FooterItemStyle&gt; element between the opening and closing
                    tags of the Telerik RadGrid control.</item>
            	</list>
            	<para>The properties can also be set programmatically in the form
                Property.Subproperty (for example, FooterItemStyle.ForeColor). Common settings
                usually include a custom background color, foreground color, and font
                properties.</para>
            </remarks>
            <example>
                The following code example demonstrates how to use the SelectedItemStyle property
                to define a custom style for the footer item in a Telerik RadGrid
                control.
                <code title="[New Example]">
            &lt;%@ Page Language="VB" %&gt;
             
            &lt;%@ Register Assembly="RadGrid.Net2" Namespace="Telerik.WebControls" TagPrefix="rad" %&gt;
             
            &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
             
            &lt;html xmlns="http://www.w3.org/1999/xhtml" &gt;
            &lt;head runat="server"&gt;
                &lt;title&gt;Untitled Page&lt;/title&gt;
            &lt;/head&gt;
            &lt;body&gt;
                &lt;form id="form1" runat="server"&gt;
                &lt;div&gt;
                    &lt;rad:RadGrid 
                        DataSourceID="SqlDataSource1" 
                        ID="RadGrid1" 
                        runat="server" 
                        Skin="None" 
                        ShowFooter="true" &gt;
                        &lt;FooterStyle BackColor="red" /&gt;
                    &lt;/rad:RadGrid&gt;
                    &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;
                    &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;
                    &lt;!-- expression to retrieve the connection string value   --&gt;
                    &lt;!-- from the Web.config file.                            --&gt;        
                    &lt;asp:SqlDataSource 
                        ID="SqlDataSource1" 
                        runat="server" 
                        ConnectionString="&lt;<see cref="!:NorthwindConnectionString">$ ConnectionStrings</see>&gt;"
                        SelectCommand="SELECT TOP 5 [CustomerID], [ContactName], [CompanyName] FROM [Customers]"&gt;
                    &lt;/asp:SqlDataSource&gt;
                &lt;/div&gt;
                &lt;/form&gt;
            &lt;/body&gt;
            &lt;/html&gt;
                </code>
            </example>
            <requirements><para>Supported in: 3.0, 2.0, 1.1, 1.0 .NET Framework</para></requirements>
        </member>
        <member name="P:Telerik.WebControls.RadGrid.HeaderStyle">
            <summary>Gets the style properties of the heading section in the RadGrid control.</summary>
            <value>
                A reference to the <see cref="T:Telerik.WebControls.GridTableItemStyle"/> that represents the style
                of the header item in a Telerik RadGrid control.
            </value>
            <remarks>
            	<para>Use the HeaderItemStyle property to control the appearance of the header item
                in a Telerik RadGrid control. This property is read-only; however, you
                can set the properties of the GridTableItemStyle object it returns. The properties
                can be set declaratively using one of the following methods:</para>
            	<list type="bullet">
            		<item>Place an attribute in the opening tag of the Telerik RadGrid
                    control in the form Property-Subproperty, where Subproperty is a property of
                    the GridTableItemStyle object (for example, HeaderItemStyle-ForeColor).</item>
            		<item>Nest a &lt;HeaderItemStyle&gt; element between the opening and closing
                    tags of the Telerik RadGrid control.</item>
            	</list>
            	<para>The properties can also be set programmatically in the form
                Property.Subproperty (for example, HeaderItemStyle.ForeColor). Common settings
                usually include a custom background color, foreground color, and font
                properties.</para>
            </remarks>
            <notes>
            The <strong>ShowHeader</strong> property must be set to true for this property to
            be visible.
            </notes>
            <example>
                The following code example demonstrates how to use the SelectedItemStyle property
                to define a custom style for the header item in a Telerik RadGrid
                control. 
                <code lang="VB" title="VB">
            &lt;%@ Page Language="VB" %&gt;
             
            &lt;%@ Register Assembly="RadGrid.Net2" Namespace="Telerik.WebControls" TagPrefix="rad" %&gt;
             
            &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
             
            &lt;html xmlns="http://www.w3.org/1999/xhtml" &gt;
            &lt;head runat="server"&gt;
                &lt;title&gt;Untitled Page&lt;/title&gt;
            &lt;/head&gt;
            &lt;body&gt;
                &lt;form id="form1" runat="server"&gt;
                &lt;div&gt;
                    &lt;rad:RadGrid 
                        DataSourceID="SqlDataSource1" 
                        ID="RadGrid1" 
                        runat="server" 
                        Skin="None" &gt;
                        &lt;HeaderStyle BackColor="red" /&gt;
                    &lt;/rad:RadGrid&gt;
                    &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;
                    &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;
                    &lt;!-- expression to retrieve the connection string value   --&gt;
                    &lt;!-- from the Web.config file.                            --&gt;        
                    &lt;asp:SqlDataSource 
                        ID="SqlDataSource1" 
                        runat="server" 
                        ConnectionString="&lt;<see cref="!:NorthwindConnectionString">$ ConnectionStrings</see>&gt;"
                        SelectCommand="SELECT TOP 5 [CustomerID], [ContactName], [CompanyName] FROM [Customers]"&gt;
                    &lt;/asp:SqlDataSource&gt;
                &lt;/div&gt;
                &lt;/form&gt;
            &lt;/body&gt;
            &lt;/html&gt;
                </code>
            </example>
            <requirements><para>Supported in: 3.0, 2.0, 1.1, 1.0 .NET Framework</para></requirements>
        </member>
        <member name="P:Telerik.WebControls.RadGrid.FilterItemStyle">
            <summary>
            Gets a reference to the GridTableItemStyle object that allows you to set the
            appearance of the filter item in a Telerik RadGrid control.
            </summary>
            <value>
            A reference to the GridTableItemStyle that represents the style of the filter
            item in a Telerik RadGrid control.
            </value>
            <remarks>
            	<para>Use the FilterItemStyle property to control the appearance of the filter item
                in a Telerik RadGrid control. This property is read-only; however, you
                can set the properties of the GridTableItemStyle object it returns. The properties
                can be set declaratively using one of the following methods:</para>
            	<list type="bullet">
            		<item>Place an attribute in the opening tag of the Telerik RadGrid
                    control in the form Property-Subproperty, where Subproperty is a property of
                    the GridTableItemStyle object (for example, FilterItemStyle-ForeColor).</item>
            		<item>Nest a &lt;FilterItemStyle&gt; element between the opening and closing
                    tags of the Telerik RadGrid control.</item>
            	</list>
            	<para>The properties can also be set programmatically in the form
                Property.Subproperty (for example, FilterItemStyle.ForeColor). Common settings
                usually include a custom background color, foreground color, and font
                properties.</para>
            </remarks>
            <example>
                The following code example demonstrates how to use the SelectedItemStyle property
                to define a custom style for the filter item in a Telerik RadGrid
                control.
                <code lang="VB" title="VB">
            &lt;%@ Page Language="VB" %&gt;
             
            &lt;%@ Register Assembly="RadGrid.Net2" Namespace="Telerik.WebControls" TagPrefix="rad" %&gt;
             
            &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
             
            &lt;html xmlns="http://www.w3.org/1999/xhtml" &gt;
            &lt;head runat="server"&gt;
                &lt;title&gt;Untitled Page&lt;/title&gt;
            &lt;/head&gt;
            &lt;body&gt;
                &lt;form id="form1" runat="server"&gt;
                &lt;div&gt;
                    &lt;rad:RadGrid 
                        DataSourceID="SqlDataSource1" 
                        ID="RadGrid1" 
                        runat="server" 
                        Skin="None" 
                        AllowFilteringByColumn="true"&gt;
                        &lt;FilterItemStyle BackColor="red" /&gt;
                    &lt;/rad:RadGrid&gt;
                    &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;
                    &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;
                    &lt;!-- expression to retrieve the connection string value   --&gt;
                    &lt;!-- from the Web.config file.                            --&gt;        
                    &lt;asp:SqlDataSource 
                        ID="SqlDataSource1" 
                        runat="server" 
                        ConnectionString="&lt;<see cref="!:NorthwindConnectionString">$ ConnectionStrings</see>&gt;"
                        SelectCommand="SELECT TOP 5 [CustomerID], [ContactName], [CompanyName] FROM [Customers]"&gt;
                    &lt;/asp:SqlDataSource&gt;
                &lt;/div&gt;
                &lt;/form&gt;
            &lt;/body&gt;
            &lt;/html&gt;
                </code>
            </example>
            <requirements><para>Supported in: 3.0, 2.0, 1.1, 1.0 .NET Framework</para></requirements>
        </member>
        <member name="P:Telerik.WebControls.RadGrid.CommandItemStyle">
            <summary>
            Gets a reference to the GridTableItemStyle object that allows you to set the
            appearance of the command item in a Telerik RadGrid control.
            </summary>
            <value>
            A reference to the GridTableItemStyle that represents the style of the command
            item in a Telerik RadGrid control.
            </value>
            <remarks>
            	<para>Use the CommandItemStyle property to control the appearance of the command
                item in a Telerik RadGrid control. This property is read-only; however,
                you can set the properties of the GridTableItemStyle object it returns. The
                properties can be set declaratively using one of the following methods:</para>
            	<list type="bullet">
            		<item>Place an attribute in the opening tag of the Telerik RadGrid
                    control in the form Property-Subproperty, where Subproperty is a property of
                    the GridTableItemStyle object (for example, CommandItemStyle-ForeColor).</item>
            		<item>Nest a &lt;CommandItemStyle&gt; element between the opening and closing
                    tags of the Telerik RadGrid control.</item>
            	</list>
            	<para>The properties can also be set programmatically in the form
                Property.Subproperty (for example, CommandItemStyle.ForeColor). Common settings
                usually include a custom background color, foreground color, and font
                properties.</para>
            </remarks>
            <example>
                The following code example demonstrates how to use the SelectedItemStyle property
                to define a custom style for the command item in a Telerik RadGrid
                control.
                <code lang="VB" title="VB">
            &lt;%@ Page Language="VB" %&gt;
             
            &lt;%@ Register Assembly="RadGrid.Net2" Namespace="Telerik.WebControls" TagPrefix="rad" %&gt;
             
            &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
             
            &lt;html xmlns="http://www.w3.org/1999/xhtml" &gt;
            &lt;head runat="server"&gt;
                &lt;title&gt;Untitled Page&lt;/title&gt;
            &lt;/head&gt;
            &lt;body&gt;
                &lt;form id="form1" runat="server"&gt;
                &lt;div&gt;
                    &lt;rad:RadGrid 
                        DataSourceID="SqlDataSource1" 
                        ID="RadGrid1" 
                        runat="server" 
                        Skin="None"&gt;
                        &lt;CommandItemStyle BackColor="red" /&gt;
                        &lt;MasterTableView CommandItemDisplay="TopAndBottom"&gt;
                        &lt;/MasterTableView&gt;
                    &lt;/rad:RadGrid&gt;
                    &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;
                    &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;
                    &lt;!-- expression to retrieve the connection string value   --&gt;
                    &lt;!-- from the Web.config file.                            --&gt;        
                    &lt;asp:SqlDataSource 
                        ID="SqlDataSource1" 
                        runat="server" 
                        ConnectionString="&lt;<see cref="!:NorthwindConnectionString">$ ConnectionStrings</see>&gt;"
                        SelectCommand="SELECT TOP 5 [CustomerID], [ContactName], [CompanyName] FROM [Customers]"&gt;
                    &lt;/asp:SqlDataSource&gt;
                &lt;/div&gt;
                &lt;/form&gt;
            &lt;/body&gt;
            &lt;/html&gt;
                </code>
            </example>
            <requirements><para>Supported in: 3.0, 2.0, 1.1, 1.0 .NET Framework</para></requirements>
        </member>
        <member name="P:Telerik.WebControls.RadGrid.ActiveItemStyle">
            <summary>
            Gets a reference to the GridTableItemStyle object that allows you to set the
            appearance of the active item in a Telerik RadGrid control.
            </summary>
            <value>
            A reference to the GridTableItemStyle that represents the style of the actibe
            item in a Telerik RadGrid control.
            </value>
            <remarks>
            	<para>Use the ActiveItemStyle property to control the appearance of the active item
                in a Telerik RadGrid control. This property is read-only; however, you
                can set the properties of the GridTableItemStyle object it returns. The properties
                can be set declaratively using one of the following methods:</para>
            	<list type="bullet">
            		<item>Place an attribute in the opening tag of the Telerik RadGrid
                    control in the form Property-Subproperty, where Subproperty is a property of
                    the GridTableItemStyle object (for example, ActiveItemStyle-ForeColor).</item>
            		<item>Nest a &lt;ActiveItemStyle&gt; element between the opening and closing
                    tags of the Telerik RadGrid control.</item>
            	</list>
            	<para>The properties can also be set programmatically in the form
                Property.Subproperty (for example, ActiveItemStyle.ForeColor). Common settings
                usually include a custom background color, foreground color, and font
                properties.</para>
            </remarks>
            <example>
            The following code example demonstrates how to use the SelectedItemStyle property
            to define a custom style for the active item in a Telerik RadGrid
            control.
            </example>
            <requirements><para>Supported in: 3.0, 2.0, 1.1, 1.0 .NET Framework</para></requirements>
        </member>
        <member name="P:Telerik.WebControls.RadGrid.Items">
            <summary>Gets a collection of all <strong>GridDataItems</strong>.</summary>
            <remarks>
            	<para>The RadGrid control automatically populates the Items collection by creating
                a GridDataItem object for each record in the data source and then adding each
                object to the collection. This property is commonly used to access a specific item
                in the control or to iterate though the entire collection of items.</para>
            	<para>
                    You cannot use this collection to get special Items like Header, Pager, Footer,
                    etc. Handle <see cref="E:Telerik.WebControls.RadGrid.ItemCreated"/> event and use the event arguments to
                    get a reference to such items.
                </para>
            </remarks>
            <value>all grid data items as <see cref="T:Telerik.WebControls.GridDataItemCollection"/></value>
        </member>
        <member name="P:Telerik.WebControls.RadGrid.ItemStyle">
            <summary>
            Gets a reference to the GridTableItemStyle object that allows you to set the
            appearance of the data items in a RadGrid control.
            </summary>
            <value>
            A reference to the GridTableItemStyle that represents the style of the data items
            in a Telerik RadGrid control.
            </value>
            <requirements><para>Supported in: 3.0, 2.0, 1.1, 1.0 .NET Framework</para></requirements>
            <example>
            	<code lang="VB" title="VB">
            &lt;%@ Page language="VB" %&gt;
             
            &lt;%@ Register Assembly="RadGrid.Net2" Namespace="Telerik.WebControls" TagPrefix="rad" %&gt;
             
            &lt;!DOCTYPE html Public "-//W3C//DTD XHTML 1.0 Transitional//EN"
                "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
            &lt;html  &gt;
              &lt;head id="Head1" runat="server"&gt;
                &lt;title&gt;GridView ItemStyle And AlternatingItemStyle Example&lt;/title&gt;
            &lt;/head&gt;
            &lt;body&gt;
                &lt;form id="form1" runat="server"&gt;
                  &lt;h3&gt;GridView ItemStyle And AlternatingItemStyle Example&lt;/h3&gt;
             
                  &lt;rad:RadGrid id="CustomersGridView" 
                    datasourceid="CustomersSource" 
                    autogeneratecolumns="true" 
                    Skin="None"
                    runat="server"&gt;
                            
                    &lt;itemstyle backcolor="LightCyan"  
                       forecolor="DarkBlue"
                       font-italic="true"/&gt;
                                
                    &lt;alternatingitemstyle backcolor="PaleTurquoise"  
                      forecolor="DarkBlue"
                      font-italic="true"/&gt;
                                        
                  &lt;/rad:RadGrid&gt;
                        
                  &lt;!-- This example uses Microsoft SQL Server And connects  --&gt;
                  &lt;!-- To the Northwind sample database. Use an ASP.NET     --&gt;
                  &lt;!-- expression To retrieve the connection String value   --&gt;
                  &lt;!-- from the Web.config file.                            --&gt;
                  &lt;asp:sqldatasource id="CustomersSource"
                    selectcommand="Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]"
                    connectionstring="&lt;&lt;see cref="NorthWindConnectionString"&gt;$ ConnectionStrings&lt;/see&gt;&gt;" 
                    runat="server"/&gt;
                    
                &lt;/form&gt;
              &lt;/body&gt;
            &lt;/html&gt;
                </code>
            </example>
            <remarks>
            Use the ItemStyle property to control the appearance of the data items in a
            Telerik RadGrid control. When the AlternatingItemStyle property is also set, the data
            items are displayed alternating between the ItemStyle settings and the
            AlternatingItemStyle settings. This property is read-only; however, you can set the
            properties of the GridTableItemStyle object it returns.
            </remarks>
        </member>
        <member name="P:Telerik.WebControls.RadGrid.PageCount">
            <summary>
            	<para>Gets the number of pages required to display the records of the data source
                in a Telerik RadGrid control.</para>
            </summary>
            <remarks>
            When the paging feature is enabled (by setting the AllowPaging property to true),
            use the PageCount property to determine the total number of pages required to display
            the records in the data source. This value is calculated by dividing the total number
            of records in the data source by the number of records displayed in a page (as
            specified by the PageSize property) and rounding up.
            </remarks>
            <value>The number of pages in a Telerik RadGrid control.</value>
            <example>
                The following code example demonstrates how to use the PageCount property to
                determine the total number of pages displayed in the Telerik RadGrid
                control.
                <code lang="CS" title="C#">
            &lt;%@ Page Language="C#" %&gt;
             
            &lt;%@ Register Assembly="RadGrid.Net2" Namespace="Telerik.WebControls" TagPrefix="rad" %&gt;
             
            &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
             
            &lt;script runat="server"&gt;
                protected void RadGrid1_PreRender(object sender, EventArgs e)
                {
                    Label1.Text = RadGrid1.PageCount.ToString();
                }
            &lt;/script&gt;
             
            &lt;html xmlns="http://www.w3.org/1999/xhtml" &gt;
            &lt;head runat="server"&gt;
                &lt;title&gt;Untitled Page&lt;/title&gt;
            &lt;/head&gt;
            &lt;body&gt;
                &lt;form id="form1" runat="server"&gt;
                &lt;div&gt;
                    &lt;rad:RadGrid
                        DataSourceID="SqlDataSource1"
                        ID="RadGrid1" 
                        AllowPaging="true" 
                        runat="server" OnPreRender="RadGrid1_PreRender"&gt;
                    &lt;/rad:RadGrid&gt;
                    &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;
                    &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;
                    &lt;!-- expression to retrieve the connection string value   --&gt;
                    &lt;!-- from the Web.config file.                            --&gt;        
                    &lt;asp:SqlDataSource 
                        ID="SqlDataSource1" 
                        runat="server"
                        ConnectionString="&lt;<see cref="!:NorthwindConnectionString">$ ConnectionStrings</see>&gt;"
                        SelectCommand="SELECT [CustomerID], [ContactName], [CompanyName] FROM [Customers]"&gt;
                    &lt;/asp:SqlDataSource&gt;
                    &lt;asp:Label ID="Label1" runat="server" Text="Label"&gt;&lt;/asp:Label&gt;&lt;/div&gt;
                &lt;/form&gt;
            &lt;/body&gt;
            &lt;/html&gt;
                </code>
            	<code lang="VB" title="VB">
            &lt;%@ Page Language="VB" <see cref="!:&gt; &lt;"/>@ Register Assembly="RadGrid.Net2" Namespace="Telerik.WebControls" TagPrefix="rad" %&gt;
             
            &lt;!DOCTYPE html Public "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
             
            &lt;script runat="server"&gt;
             
                Protected Sub RadGrid1_PreRender(ByVal sender As Object, ByVal e As System.EventArgs)
                    Label1.Text = RadGrid1.PageCount.ToString()
                End Sub
            &lt;/script&gt;
             
            &lt;html xmlns="http://www.w3.org/1999/xhtml" &gt;
            &lt;head runat="server"&gt;
                &lt;title&gt;Untitled Page&lt;/title&gt;
            &lt;/head&gt;
            &lt;body&gt;
                &lt;form id="form1" runat="server"&gt;
                &lt;div&gt;
                    &lt;rad:RadGrid
                        DataSourceID="SqlDataSource1"
                        ID="RadGrid1" 
                        AllowPaging="true" 
                        runat="server" OnPreRender="RadGrid1_PreRender" &gt;
                    &lt;/rad:RadGrid&gt;
                    &lt;!-- This example uses Microsoft SQL Server And connects  --&gt;
                    &lt;!-- To the Northwind sample database. Use an ASP.NET     --&gt;
                    &lt;!-- expression To retrieve the connection String value   --&gt;
                    &lt;!-- from the Web.config file.                            --&gt;        
                    &lt;asp:SqlDataSource 
                        ID="SqlDataSource1" 
                        runat="server"
                        ConnectionString="&lt;<see cref="!:NorthwindConnectionString">$ ConnectionStrings</see>&gt;"
                        SelectCommand="SELECT [CustomerID], [ContactName], [CompanyName] FROM [Customers]"&gt;
                    &lt;/asp:SqlDataSource&gt;
                    &lt;asp:Label ID="Label1" runat="server" Text="Label"&gt;&lt;/asp:Label&gt;&lt;/div&gt;
                &lt;/form&gt;
            &lt;/body&gt;
            &lt;/html&gt;
                </code>
            </example>
        </member>
        <member name="P:Telerik.WebControls.RadGrid.PagerStyle">
            <summary>
            Gets a reference to the <strong>GridPagerStyle</strong> object that allows you to
            set the appearance of the page item in a Telerik RadGrid control.
            </summary>
            <value>
            A <strong>GridPagerStyle</strong> object that contains the style properties of
            the paging section of the <strong>RadGrid</strong> control. The default value is an
            empty <strong>GridPagerStyle</strong> object.
            </value>
            <remarks>
            	<para>Use this property to provide a custom style for the paging section of the
                <strong>RadGrid</strong> control. Common style attributes that can be adjusted
                include forecolor, backcolor, font, and content alignment within the cell.
                Providing a different style enhances the appearance of the <strong>RadGrid</strong>
                control.</para>
            	<para>To specify a custom style for the paging section, place the
                <strong>&lt;PagerStyle&gt;</strong> tags between the opening and closing tags of
                the <strong>RadGrid</strong> control. You can then list the style attributes within
                the opening <strong>&lt;PagerStyle&gt;</strong> tag.</para>
            </remarks>
            <example>
                The following code example demonstrates how to use the <strong>PagerStyle</strong>
                property to specify a custom style for the page selection elements of the
                <strong>RadGrid</strong> control. 
                <code lang="VB">
            &lt;%@ Page Language="VB" %&gt;
             
            &lt;%@ Import Namespace="System.Data" &lt;see cref="&gt; &lt;"/&gt;@ Register TagPrefix="rad" Namespace="Telerik.WebControls" Assembly="RadGrid.Net2" %&gt;
            &lt;!DOCTYPE html Public "-//W3C//DTD XHTML 1.0 Transitional//EN"
                "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
            &lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;
             
            &lt;script runat="server"&gt;
             
                Function CreateDataSource() As ICollection
                    Dim dt As New DataTable()
                    Dim dr As DataRow
                
                    dt.Columns.Add(New DataColumn("IntegerValue", GetType(Int32)))
                    dt.Columns.Add(New DataColumn("StringValue", GetType(String)))
                    dt.Columns.Add(New DataColumn("DateTimeValue", GetType(String)))
                    dt.Columns.Add(New DataColumn("BoolValue", GetType(Boolean)))
                
                    Dim i As Integer
                    For i = 0 To 99
                        dr = dt.NewRow()
                    
                        dr(0) = i
                        dr(1) = "Item " &amp; i.ToString()
                        dr(2) = DateTime.Now.ToShortDateString()
                        If i Mod 2 &lt;&gt; 0 Then
                            dr(3) = True
                        Else
                            dr(3) = False
                        End If
                    
                        dt.Rows.Add(dr)
                    Next i
                
                    Dim dv As New DataView(dt)
                    Return dv
                End Function 'CreateDataSource
             
                Sub ShowStats()
                    lblEnabled.Text = "AllowPaging is " &amp; RadGrid1.AllowPaging
                    lblCurrentIndex.Text = "CurrentPageIndex is " &amp; RadGrid1.CurrentPageIndex
                    lblPageCount.Text = "PageCount is " &amp; RadGrid1.PageCount
                    lblPageSize.Text = "PageSize is " &amp; RadGrid1.PageSize
                End Sub 'ShowStats
             
             
                Protected Sub RadGrid1_NeedDataSource(ByVal source As Object, ByVal e As Telerik.WebControls.GridNeedDataSourceEventArgs) Handles RadGrid1.NeedDataSource
                    RadGrid1.DataSource = CreateDataSource()
                    ShowStats()
                End Sub
             
                Protected Sub CheckBox1_CheckedChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles CheckBox1.CheckedChanged
                    If CheckBox1.Checked Then
                        RadGrid1.PagerStyle.Mode = GridPagerMode.NumericPages
                    Else
                        RadGrid1.PagerStyle.Mode = GridPagerMode.NextPrev
                    End If
                    
                    RadGrid1.Rebind()
                End Sub
            &lt;/script&gt;
             
            &lt;head id="Head1" runat="server"&gt;
                &lt;title&gt;RadGrid Paging Example&lt;/title&gt;
            &lt;/head&gt;
            &lt;body&gt;
                &lt;h3&gt;
                    RadGrid Paging Example&lt;/h3&gt;
                &lt;form id="form1" runat="server"&gt;
                    &lt;rad:RadGrid ID="RadGrid1" runat="server" AllowPaging="True"&gt;
                        &lt;PagerStyle Mode="NumericPages" HorizontalAlign="Right"&gt;&lt;/PagerStyle&gt;
                        &lt;HeaderStyle BackColor="#aaaadd"&gt;&lt;/HeaderStyle&gt;
                        &lt;AlternatingItemStyle BackColor="#eeeeee"&gt;&lt;/AlternatingItemStyle&gt;
                    &lt;/rad:RadGrid&gt;
                    &lt;br /&gt;
                    &lt;asp:CheckBox ID="CheckBox1" runat="server" Text="Show numeric page navigation buttons"
                        AutoPostBack="true" /&gt;
                    &lt;br /&gt;
                    &lt;table style="background-color: #eeeeee; padding: 6"&gt;
                        &lt;tr&gt;
                            &lt;td style="display: inline"&gt;
                                &lt;asp:Label ID="lblEnabled" runat="server" /&gt;&lt;br /&gt;
                                &lt;asp:Label ID="lblCurrentIndex" runat="server" /&gt;&lt;br /&gt;
                                &lt;asp:Label ID="lblPageCount" runat="server" /&gt;&lt;br /&gt;
                                &lt;asp:Label ID="lblPageSize" runat="server" /&gt;&lt;br /&gt;
                            &lt;/td&gt;
                        &lt;/tr&gt;
                    &lt;/table&gt;
                &lt;/form&gt;
            &lt;/body&gt;
            &lt;/html&gt;
                </code>
            	<code lang="CS">
            &lt;%@ Page Language="C#" %&gt;
             
            &lt;%@ Import Namespace="System.Data" &lt;see cref="&gt; &lt;"/&gt;@ Register TagPrefix="rad" Namespace="Telerik.WebControls" Assembly="RadGrid.Net2" %&gt;
            &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
                "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
            &lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;
             
            &lt;script runat="server"&gt;
                ICollection CreateDataSource()
                {
                    DataTable dt = new DataTable();
                    DataRow dr;
                    dt.Columns.Add(new DataColumn("IntegerValue", typeof(Int32)));
                    dt.Columns.Add(new DataColumn("StringValue", typeof(string)));
                    dt.Columns.Add(new DataColumn("DateTimeValue", typeof(string)));
                    dt.Columns.Add(new DataColumn("BoolValue", typeof(bool)));
                    int i;
                    for (i = 0; (i &lt;= 99); i++)
                    {
                        dr = dt.NewRow();
                        dr[0] = i;
                        dr[1] = ("Item " + i.ToString());
                        dr[2] = DateTime.Now.ToShortDateString();
                        if (((i % 2)
                                    != 0))
                        {
                            dr[3] = true;
                        }
                        else
                        {
                            dr[3] = false;
                        }
                        dt.Rows.Add(dr);
                    }
                    DataView dv = new DataView(dt);
                    return dv;
                }
             
                // CreateDataSource
                void ShowStats()
                {
                    lblEnabled.Text = ("AllowPaging is " + RadGrid1.AllowPaging);
                    lblCurrentIndex.Text = ("CurrentPageIndex is " + RadGrid1.CurrentPageIndex);
                    lblPageCount.Text = ("PageCount is " + RadGrid1.PageCount);
                    lblPageSize.Text = ("PageSize is " + RadGrid1.PageSize);
                }
             
                // ShowStats
                protected void RadGrid1_NeedDataSource(object source, Telerik.WebControls.GridNeedDataSourceEventArgs e)
                {
                    RadGrid1.DataSource = CreateDataSource();
                    ShowStats();
                }
             
                protected void CheckBox1_CheckedChanged(object sender, System.EventArgs e)
                {
                    if (CheckBox1.Checked)
                    {
                        RadGrid1.PagerStyle.Mode = GridPagerMode.NumericPages;
                    }
                    else
                    {
                        RadGrid1.PagerStyle.Mode = GridPagerMode.NextPrev;
                    }
                    RadGrid1.Rebind();
                }
            &lt;/script&gt;
             
            &lt;head id="Head1" runat="server"&gt;
                &lt;title&gt;RadGrid Paging Example&lt;/title&gt;
            &lt;/head&gt;
            &lt;body&gt;
                &lt;h3&gt;
                    RadGrid Paging Example&lt;/h3&gt;
                &lt;form id="form1" runat="server"&gt;
                    &lt;rad:RadGrid ID="RadGrid1" runat="server" AllowPaging="True" OnNeedDataSource="RadGrid1_NeedDataSource"&gt;
                        &lt;PagerStyle Mode="NumericPages" HorizontalAlign="Right"&gt;&lt;/PagerStyle&gt;
                        &lt;HeaderStyle BackColor="#aaaadd"&gt;&lt;/HeaderStyle&gt;
                        &lt;AlternatingItemStyle BackColor="#eeeeee"&gt;&lt;/AlternatingItemStyle&gt;
                    &lt;/rad:RadGrid&gt;
                    &lt;br /&gt;
                    &lt;asp:CheckBox ID="CheckBox1" runat="server" Text="Show numeric page navigation buttons"
                        AutoPostBack="true" OnCheckedChanged="CheckBox1_CheckedChanged" /&gt;
                    &lt;br /&gt;
                    &lt;table style="background-color: #eeeeee; padding: 6"&gt;
                        &lt;tr&gt;
                            &lt;td style="display: inline"&gt;
                                &lt;asp:Label ID="lblEnabled" runat="server" /&gt;&lt;br /&gt;
                                &lt;asp:Label ID="lblCurrentIndex" runat="server" /&gt;&lt;br /&gt;
                                &lt;asp:Label ID="lblPageCount" runat="server" /&gt;&lt;br /&gt;
                                &lt;asp:Label ID="lblPageSize" runat="server" /&gt;&lt;br /&gt;
                            &lt;/td&gt;
                        &lt;/tr&gt;
                    &lt;/table&gt;
                &lt;/form&gt;
            &lt;/body&gt;
            &lt;/html&gt;
                </code>
            </example>
            <requirements><para>Supported in: 3.0, 2.0, 1.1, 1.0 .NET Framework</para></requirements>
        </member>
        <member name="P:Telerik.WebControls.RadGrid.PageSize">
            <summary>
            Gets or sets an integer value indicating the number of Items that a single page
            in Telerik RadGrid will contain.
            </summary>
            <remarks>
                Note that the Paging must be enabled (<see cref="P:Telerik.WebControls.RadGrid.AllowPaging"/> must
                be true) in order to use this property.
            </remarks>
            <value>
            integer, indicating the number of the Items that a single grid page would
            contain.
            </value>
        </member>
        <member name="P:Telerik.WebControls.RadGrid.AllowMultiRowSelection">
            <summary>
            Gets or sets a value indicating whether you will be able to select multiple rows
            in Telerik RadGrid. By default this property is set to
            <strong>false</strong>.
            </summary>
            <value>
            	<strong>true</strong> if you can have multiple rows selected at once. Otherwise,
            <strong>false</strong>. The default is <strong>false</strong>.
            </value>
            <remarks>
            	<strong>Note:</strong> You will not be able to select the Header, Footer or Pager
            rows.
            </remarks>
        </member>
        <member name="P:Telerik.WebControls.RadGrid.AllowMultiRowEdit">
            <summary>
            Gets or sets a value indicating whether Telerik RadGrid will allow
            you to have multiple rows in edit mode. The default value is
            <strong>false</strong>.
            </summary>
            <value>
            	<strong>true</strong> if you can have more than one row in edit mode. Otherwise,
            <strong>false</strong>. The default value is <strong>false</strong>.
            </value>
        </member>
        <member name="P:Telerik.WebControls.RadGrid.SelectedIndexes">
            <example>
                You can see an example usage of this property in the following online example: 
                <para>
            		<a href="http://www.telerik.com/r.a.d.controls/Grid/Examples/Hierarchy/ThreeLevel/DefaultCS.aspx">
                http://www.telerik.com/r.a.d.controls/Grid/Examples/Hierarchy/ThreeLevel/DefaultCS.aspx</a></para>
            	<code lang="CS" title="CS" description="Setting the selected index prior to binding Telerik RadGrid:&#xA;            If the index is in a detail table, parent items will be expanded automatically">
            private void Page_Load(object sender, EventArgs e)
                {
                   if (!IsPostBack)
                   {                
                      RadGrid1.SelectedIndexes.Add(1, 0, 1, 0, 1);
                      //Index of 1, 0, 1, 0, 1 means:
                      //1 - item with index 1 in the MasterTabelView
                      //0 - detail table with index 0
                      //1 - item with index 1 (the second item) in the first detail table
                      //0 - 0 the third-level detail table
                      //1 - the item with index 1 in the third-level table
                   }
                }
                </code>
            	<code lang="VB" title="VB" description="Setting the selected index prior to binding Telerik RadGrid:&#xA;            If the index Is In a detail table, parent items will be expanded automatically">
            Protected Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load
               If Not IsPostBack Then
                  RadGrid1.SelectedIndexes.Add(1, 0, 1, 0, 1)
                  'Index of 1, 0, 1, 0, 1 means:
                  '1 - item With index 1 In the MasterTabelView
                  '0 - detail table With index 0
                  '1 - item With index 1 (the second item) In the first detail table
                  '0 - 0 the third-level detail table
                  '1 - the item With index 1 In the third-level table   
               End If
            End Sub
                </code>
            </example>
            <summary>Gets a collection of indexes of the selected items.</summary>
            <value>
                returns <see cref="T:Telerik.WebControls.GridIndexCollection"/> of the indexes of all selected
                Items.
            </value>
        </member>
        <member name="P:Telerik.WebControls.RadGrid.EditIndexes">
            <summary>Gets a collection of the indexes of the Items that are in edit mode.</summary>
            <example>
            	<para>
                    The following example demonstrates how to hide "Add New" button in the
                    <strong>CommandItemTemplate</strong> when Telerik RadGrid is in
                    edit/insert mode. The easiest way to check if Telerik RadGrid is in
                    edit mode is to check whether the <see cref="T:Telerik.WebControls.GridIndexCollection"/>
                    (<strong>EditIndexes</strong> gives a reference to this) is empty.
                </para>
            	<pre>
            &lt;CommandItemTemplate&gt;
                </pre>
            	<pre>
                &lt;asp:LinkButton ID="LinkButton1" Visible="&lt;%# (!(RadGrid1.MasterTableView.IsItemInserted || <font color="red">RadGrid1.EditIndexes.Count &gt;0</font> )) %&gt;"
                </pre>
            	<pre>
            runat="server" CommandName="InitInsert"&gt;Add New&lt;/asp:LinkButton&gt;
                </pre>
            	<pre>
            &lt;/CommandItemTemplate&gt;
                </pre>
            </example>
            <value>
                returns <see cref="T:Telerik.WebControls.GridIndexCollection"/> of all data items that are in edit
                mode.
            </value>
        </member>
        <member name="P:Telerik.WebControls.RadGrid.SelectedItems">
            <summary>Gets a collection of the currently selected GridDataItems</summary>
            <value>Returns a <see cref="T:Telerik.WebControls.GridItemCollection"/> of all selected data items.</value>
        </member>
        <member name="P:Telerik.WebControls.RadGrid.SelectedValue">
            <summary>Gets the data key value of the selected row in a RadGrid control.</summary>
            <value>The data key value of the selected row in a RadGrid control.</value>
            <example>
                The following code example demonstrates how to use the
                <strong>SelectedValue</strong> property to determine the data key value of the
                selected row in a <strong>RadGrid</strong> control. 
                <code lang="VB">
            &lt;%@ Page Language="VB" %&gt;
             
            &lt;%@ Register Assembly="RadGrid.Net2" Namespace="Telerik.WebControls" TagPrefix="rad" %&gt;
            &lt;!DOCTYPE html Public "-//W3C//DTD XHTML 1.0 Transitional//EN"
                "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
             
            &lt;script runat="server"&gt;
             
              Sub RadGrid1_SelectedIndexChanged(ByVal sender As Object, ByVal e As EventArgs)
                    
                ' Display the primary key value of the selected row.
                Label1.Text = "The primary key value of the selected row is " &amp; _
                  RadGrid1.SelectedValue.ToString() &amp; "."
             
              End Sub
             
            &lt;/script&gt;
             
            &lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;
            &lt;head runat="server"&gt;
                &lt;title&gt;RadGrid SelectedValue Example&lt;/title&gt;
            &lt;/head&gt;
            &lt;body&gt;
                &lt;form id="form1" runat="server"&gt;
                    &lt;h3&gt;
                        RadGrid SelectedValue Example&lt;/h3&gt;
                    &lt;asp:Label ID="Label1" ForeColor="Red" runat="server" /&gt;
                    &lt;rad:RadGrid ID="RadGrid1" DataSourceID="SqlDataSource1" 
                        OnSelectedIndexChanged="RadGrid1_SelectedIndexChanged"
                        runat="server"&gt;
                        &lt;MasterTableView DataKeyNames="CustomerID"&gt;
                            &lt;Columns&gt;
                                &lt;rad:GridButtonColumn CommandName="Select" Text="Select" /&gt;
                            &lt;/Columns&gt;
                        &lt;/MasterTableView&gt;
                    &lt;/rad:RadGrid&gt;
                    &lt;!-- This example uses Microsoft SQL Server And connects  --&gt;
                    &lt;!-- To the Northwind sample database. Use an ASP.NET     --&gt;
                    &lt;!-- expression To retrieve the connection String value   --&gt;
                    &lt;!-- from the Web.config file.                            --&gt;
                    &lt;asp:SqlDataSource ID="SqlDataSource1" SelectCommand="SELECT * FROM [Customers]"
                        runat="server" ConnectionString="&lt;&lt;see cref="NorthwindConnectionString"&gt;$ ConnectionStrings&lt;/see&gt;&gt;" /&gt;
                &lt;/form&gt;
            &lt;/body&gt;
            &lt;/html&gt;
                </code>
            	<code lang="CS" inline="False">
            	</code>
            	<code lang="CS">
            &lt;%@ Page Language="C#" %&gt;
             
            &lt;%@ Register Assembly="RadGrid.Net2" Namespace="Telerik.WebControls" TagPrefix="rad" %&gt;
            &lt;!DOCTYPE html Public "-//W3C//DTD XHTML 1.0 Transitional//EN"
                "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
             
            &lt;script runat="server"&gt;
            protected void RadGrid1_SelectedIndexChanged(object sender, EventArgs e)
            {
                // Display the primary key value of the selected row.
                Label1.Text = "The primary key value of the selected row is " +
                    RadGrid1.SelectedValue.ToString() + ".";
            }
            &lt;/script&gt;
             
            &lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;
            &lt;head runat="server"&gt;
                &lt;title&gt;RadGrid SelectedValue Example&lt;/title&gt;
            &lt;/head&gt;
            &lt;body&gt;
                &lt;form id="form1" runat="server"&gt;
                    &lt;h3&gt;
                        RadGrid SelectedValue Example&lt;/h3&gt;
                    &lt;asp:Label ID="Label1" ForeColor="Red" runat="server" /&gt;
                    &lt;rad:RadGrid ID="RadGrid1" DataSourceID="SqlDataSource1" OnSelectedIndexChanged="RadGrid1_SelectedIndexChanged"
                        runat="server"&gt;
                        &lt;MasterTableView DataKeyNames="CustomerID"&gt;
                            &lt;Columns&gt;
                                &lt;rad:GridButtonColumn CommandName="Select" Text="Select" /&gt;
                            &lt;/Columns&gt;
                        &lt;/MasterTableView&gt;
                    &lt;/rad:RadGrid&gt;
                    &lt;!-- This example uses Microsoft SQL Server And connects  --&gt;
                    &lt;!-- To the Northwind sample database. Use an ASP.NET     --&gt;
                    &lt;!-- expression To retrieve the connection String value   --&gt;
                    &lt;!-- from the Web.config file.                            --&gt;
                    &lt;asp:SqlDataSource ID="SqlDataSource1" SelectCommand="SELECT * FROM [Customers]"
                        runat="server" ConnectionString="&lt;&lt;see cref="NorthwindConnectionString"&gt;$ ConnectionStrings&lt;/see&gt;&gt;" /&gt;
                &lt;/form&gt;
            &lt;/body&gt;
            &lt;/html&gt;
                </code>
            </example>
        </member>
        <member name="P:Telerik.WebControls.RadGrid.EditItems">
            <remarks>
            	<para>The <strong>EditItems</strong> collection contains <strong>InPlace</strong>
                edit mode items. When you switch the edit type to <strong>EditForms,</strong> the
                <strong>EditItems</strong> collection holds the currently edited items but not
                their <strong>EditFormItems</strong> (which in this case hold the new values). See
                <a href="grdUpdatingInPlaceAndEditForms.html">this</a> help article for more
                details.</para>
            	<para>
                    You should not use this property to check whether there are items in edit mode.
                    The better approach is to use <see cref="P:Telerik.WebControls.RadGrid.EditIndexes"/> property instead.
                </para>
            </remarks>
            <summary>
            Gets a collection of all <strong>GridItems</strong> in edit mode. See the Remarks
            for more info.
            </summary>
            <value><see cref="T:Telerik.WebControls.GridItemCollection"/> of all items that are in edit mode.</value>
        </member>
        <member name="P:Telerik.WebControls.RadGrid.SelectedItemStyle">
            <summary>
                Gets a reference to the <see cref="T:Telerik.WebControls.GridTableItemStyle"/> object that allows
                you to set the appearance of the selected item in a Telerik RadGrid
                control.
            </summary>
            <value>
            A reference to the GridTableItemStyle that represents the style of the selected
            item in a Telerik RadGrid control.
            </value>
            <requirements><para>Supported in: 3.0, 2.0, 1.1, 1.0 .NET Framework</para></requirements>
            <example>
                The following code example demonstrates how to use the SelectedItemStyle property
                to define a custom style for the selected item in a Telerik RadGrid
                control.
                <code lang="VB" title="VB">
            &lt;%@ Page Language="VB" %&gt;
             
            &lt;%@ Register Assembly="RadGrid.Net2" Namespace="Telerik.WebControls" TagPrefix="rad" %&gt;
             
            &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
             
            &lt;html xmlns="http://www.w3.org/1999/xhtml" &gt;
            &lt;head runat="server"&gt;
                &lt;title&gt;Untitled Page&lt;/title&gt;
            &lt;/head&gt;
            &lt;body&gt;
                &lt;form id="form1" runat="server"&gt;
                &lt;div&gt;
                    &lt;rad:RadGrid 
                        DataSourceID="SqlDataSource1" 
                        ID="RadGrid1" 
                        runat="server" 
                        Skin="None"&gt;
                        &lt;SelectedItemStyle BackColor="red" /&gt;
                        &lt;MasterTableView&gt;
                            &lt;Columns&gt;
                                &lt;rad:GridButtonColumn 
                                    Text="Select" 
                                    UniqueName="Select" 
                                    CommandName="Select"&gt;
                                &lt;/rad:GridButtonColumn&gt;
                            &lt;/Columns&gt;
                        &lt;/MasterTableView&gt;
                    &lt;/rad:RadGrid&gt;
                    &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;
                    &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;
                    &lt;!-- expression to retrieve the connection string value   --&gt;
                    &lt;!-- from the Web.config file.                            --&gt;        
                    &lt;asp:SqlDataSource 
                        ID="SqlDataSource1" 
                        runat="server" 
                        ConnectionString="&lt;<see cref="!:NorthwindConnectionString">$ ConnectionStrings</see>&gt;"
                        SelectCommand="SELECT TOP 5 [CustomerID], [ContactName], [CompanyName] FROM [Customers]"&gt;
                    &lt;/asp:SqlDataSource&gt;
                &lt;/div&gt;
                &lt;/form&gt;
            &lt;/body&gt;
            &lt;/html&gt;
                </code>
            </example>
            <remarks>
            	<para>Use the SelectedItemStyle property to control the appearance of the selected
                item in a Telerik RadGrid control. This property is read-only; however,
                you can set the properties of the GridTableItemStyle object it returns. The
                properties can be set declaratively using one of the following methods:</para>
            	<list type="bullet">
            		<item>Place an attribute in the opening tag of the Telerik RadGrid
                    control in the form Property-Subproperty, where Subproperty is a property of
                    the GridTableItemStyle object (for example,
                    SelectedItemStyle-ForeColor).</item>
            		<item>Nest a &lt;SelectedItemStyle&gt; element between the opening and closing
                    tags of the Telerik RadGrid control.</item>
            	</list>
            	<para>The properties can also be set programmatically in the form
                Property.Subproperty (for example, SelectedItemStyle.ForeColor). Common settings
                usually include a custom background color, foreground color, and font
                properties.</para>
            </remarks>
        </member>
        <member name="P:Telerik.WebControls.RadGrid.ShowFooter">
            <summary>
            Gets or set a value indicating whether the footer item of the grid will be
            shown.
            </summary>
            <remarks>
            Setting this property will affect all grid tables, unless they specify otherwise
            explicitly.
            </remarks>
            <value>The default value of this property is <strong>false</strong>.</value>
        </member>
        <member name="P:Telerik.WebControls.RadGrid.ShowStatusBar">
            <summary>
            Gets or set a value indicating whether the statusbar item of the grid will be
            shown.
            </summary>
            <remarks>
            	<para>
                    This property is meaningful when the grid is in AJAX mode, i.e. when
                    <see cref="!:EnableAjax"/> is set to <strong>true</strong>.
                </para>
            	<para>See <a href="grdStatusBarItem.html">this</a> help topic for more
                details.</para>
            </remarks>
            <value>
            	<strong>true</strong> if the status bar item would be shown, otherwise
            <strong>false</strong>. The default value of this property is
            <strong>false</strong>.
            </value>
            <seealso cref="!:grdStatusBarItem.html" cat="Telerik RadGrid Manual">Status bar item</seealso>
        </member>
        <member name="P:Telerik.WebControls.RadGrid.StatusBarSettings">
            <summary>
                Gets a <see cref="T:Telerik.WebControls.GridStatusBarItemSettings"/> object that contains variable
                settings related to the status bar.
            </summary>
            <example>
            	<pre>
            &lt;rad:RadGrid ID="RadGrid1" runat="server" DataSourceID="SqlDataSource1" ShowStatusBar="true" EnableAjax="true"&gt;<br/>      &lt;StatusBarSettings LoadingText="Loading... Please wait!" ReadyText="Online" /&gt;              <br/> &lt;/rad:RadGrid&gt;
                </pre>
            </example>
            <value>returns a reference to <see cref="T:Telerik.WebControls.GridStatusBarItemSettings"/> object.</value>
        </member>
        <member name="P:Telerik.WebControls.RadGrid.ShowHeader">
            <summary>
            Gets or set a value indicating whether the header item of the grid will be
            shown.
            </summary>
            <value>This default value for this property is <strong>true.</strong></value>
            <remarks>
            Setting this property will affect all grid tables, unless they specify otherwise
            explicitly.
            </remarks>
        </member>
        <member name="P:Telerik.WebControls.RadGrid.VirtualItemCount">
            <summary>
            Gets or sets a value, indicating the total number of items in the data source
            when custom paging is used. Thus the grid "understands" that the data source contains
            the specified number of records and it should fetch merely part of them at a time to
            execute requested operation.
            </summary>
            <value>
            	<strong>int</strong>, representing the total number of items in the datasource.
            The default value is 0.
            </value>
            <remarks>
            	<para>If you set a value that is greater than the actual number of items, RadGrid
                will show all available items plus empty pages (or whatever other content you set)
                for the items that exceed the actual number.</para>
            	<para>For example you have a data source with 9'000 items and you set
                VirtualItemCount to 10'000. If your page size is 1000, the grid will render 10
                pages and the last page will be empty (or with NoRecordsTemplate if you're using
                such).</para>
            </remarks>
        </member>
        <member name="P:Telerik.WebControls.RadGrid.FilterMenu">
            <summary>
                Gets a reference to <see cref="T:Telerik.WebControls.GridFilterMenu"/> object. The filtering menu
                appears when the filter button on the <see cref="!:GridFilterItem"/> is clicked.
            </summary>
            <value>returns a reference to <see cref="T:Telerik.WebControls.GridFilterMenu"/> object.</value>
            <remarks>
            	<para>This property is meaningful only when you have filtering enabled (by setting
                <strong>AllowFilteringByColumn</strong>="true").</para>
            </remarks>
            <example>
            	<para>The following example demonstrates how to customize the filtering
                menu:</para>
            	<para><font face="Courier New"><strong>[ASPX/ASCX]<br/></strong>&lt;head
                runat=<font class="string" color="black">"server"</font>&gt;<br/>
                 &lt;title&gt;Filter menu change&lt;/title&gt;<br/>
                 &lt;style type=<font class="string" color="black">"text/css"</font>&gt;<br/>
                 .FilterMenuClass1 td<br/>
                 {<br/>
                 background-color: white;<br/>
                 color: green;<br/>
                 font-size: 10px;<br/>
                 }<br/>
                 .FilterMenuClass2 td<br/>
                 {<br/>
                 background-color: blue;<br/>
                 color: white;<br/>
                 font-size: 15px;<br/>
                 }<br/>
                 &lt;/style&gt;<br/>
                &lt;/head&gt;<br/>
                &lt;body&gt;<br/>
                 &lt;form id=<font class="string" color="black">"form1"</font>
                runat=<font class="string" color="black">"server"</font>&gt;<br/>
                 &lt;div&gt;<br/>
                 &lt;script type=<font class="string" color="black">"text/javascript"</font>&gt;<br/>
            			<font class="keyword" color="black">function</font> GridCreated()<br/>
                 {<br/>
                 window.setTimeout(SetFilterMenuClass(this), 500);<br/>
                 }<br/>
            			<font class="keyword" color="black">function</font>
                SetFilterMenuClass(gridObject)<br/>
                 {<br/>
                 gridObject.FilterMenu.SelectColumnBackColor = <font class="string" color="black">""</font>;<br/>
                 gridObject.FilterMenu.TextColumnBackColor = <font class="string" color="black">""</font>;<br/>
            			<br/>
                 }<br/>
                 &lt;/script&gt;<br/>
                 &lt;rad:RadGrid ID=<font class="string" color="black">"RadGrid1"</font>
                AllowFilteringByColumn=<font class="string" color="black">"true"</font>
                DataSourceID=</font><font color="black"><font face="Courier New"><font class="string">
                "AccessDataSource1"</font><br/>
                 AllowSorting= <font class="string">"True"</font>
                runat=<font class="string">"server"</font>&gt;<br/>
                 &lt;FilterMenu
                CssClass=<font class="string">"FilterMenuClass1"</font>&gt;&lt;/FilterMenu&gt;<br/>
                 &lt;ClientSettings&gt;<br/>
                 &lt;ClientEvents OnGridCreated=<font class="string">"GridCreated"</font>
                /&gt;<br/>
                 &lt;/ClientSettings&gt;<br/>
                 &lt;/rad:RadGrid&gt;<br/>
                 &lt;br /&gt;<br/>
                 &lt;asp:AccessDataSource ID=<font class="string">"AccessDataSource1"</font>
                DataFile=<font class="string">"~/Grid/Data/Access/Nwind.mdb"</font><br/>
                 SelectCommand= <font class="string">"SELECT TOP 10 CustomerID, CompanyName,
                ContactName, ContactTitle, Address, PostalCode FROM Customers"</font><br/>
                 runat= <font class="string">"server"</font>&gt;&lt;/asp:AccessDataSource&gt;<br/>
                 &lt;rad:RadGrid ID=<font class="string">"RadGrid2"</font>
                DataSourceID=<font class="string">"AccessDataSource1"</font>
                AllowSorting=<font class="string">"True"</font><br/>
                 AllowFilteringByColumn= <font class="string">"true"</font>
                Skin=<font class="string">"Windows"</font>
                runat=<font class="string">"server"</font>&gt;<br/>
                 &lt;ClientSettings&gt;<br/>
                 &lt;ClientEvents OnGridCreated=<font class="string">"GridCreated"</font>
                /&gt;<br/>
                 &lt;/ClientSettings&gt;<br/>
                 &lt;FilterMenu
                CssClass=<font class="string">"FilterMenuClass2"</font>&gt;&lt;/FilterMenu&gt;<br/>
                 &lt;/rad:RadGrid&gt;<br/>
                 &lt;/div&gt;<br/>
                 &lt;/form&gt;<br/>
                &lt;/body&gt;<br/>
                &lt;/html&gt;</font></font></para>
            </example>
        </member>
        <member name="P:Telerik.WebControls.RadGrid.LoadingTemplateTransparency">
            <summary>
            Gets or sets <see cref="P:Telerik.WebControls.RadGrid.AJAXLoadingTemplate"/> transparency in percentage. Default value is 0 percents.
            </summary>
            <value>int, showing the current transparency for the Loading Template.</value>
            <remarks>
            Setting this property to 0% would mean an opaque loading template. Setting the
            property to 100% would mean a fully transparent template. See
            <a href="grdLoadingTemplate.html">this</a> topic for more details regarding the Loading
            Template.
            </remarks>
        </member>
        <member name="P:Telerik.WebControls.RadGrid.EnableAJAXLoadingTemplate">
            <summary>
            If set to true and if there is AJAX request, RadGrid will show <see cref="P:Telerik.WebControls.RadGrid.AJAXLoadingTemplate"/>
            </summary>
        </member>
        <member name="P:Telerik.WebControls.RadGrid.AJAXLoadingTemplate">
            <summary>
            The template that will be displayed as a progress indicator during AJAX
            request.
            </summary>
            <seealso cref="!:grdLoadingTemplate.html" cat="Telerik RadGrid Manual">Loading Template</seealso>
            <example>
            	<para>By default if you have't set own template, Telerik RadGrid will
                use the <strong>loading.gif</strong> image of the selected skin.</para>
            	<para><font face="Courier New">&lt;rad:radgrid id=<font class="string" color="black">"RadGrid1"</font>
                Width=</font><font color="black"><font face="Courier New"><font class="string">"100%"</font>
            				<strong>EnableAJAXLoadingTemplate=<font class="string">"True"</font></strong>
                cssclass=<font class="string">"RadGrid"</font><br/>
                 EnableAJAX=<font class="string">"True"</font>
                allowsorting=<font class="string">"True"</font><br/>
                 pagesize=<font class="string">"5"</font>
                allowpaging=<font class="string">"True"</font>
                Height=<font class="string">"200px"</font>
                runat=<font class="string">"server"</font>&gt;<br/>
                 &lt;headerstyle cssclass=<font class="string">"GridHeader"</font>
                Height=<font class="string">"20px"</font>/&gt;<br/>
                 &lt;pagerstyle mode=<font class="string">"NumericPages"</font>
                cssclass=<font class="string">"GridPager"</font>
                Height=<font class="string">"20px"</font> /&gt;<br/>
                 &lt;itemstyle cssclass=<font class="string">"GridRow"</font> /&gt;<br/>
                 &lt;alternatingitemstyle cssclass=<font class="string">"GridRow"</font>
                /&gt;<br/>
                 &lt;MasterTableView CssClass=<font class="string">"MasterTable"</font>
                Height=<font class="string">"100%"</font> &gt;&lt;/MasterTableView&gt;<br/>
                &lt;/rad:radgrid&gt;</font></font></para>
            </example>
        </member>
        <member name="P:Telerik.WebControls.RadGrid.Columns">
            <summary>
                Gets a collection (<see cref="T:Telerik.WebControls.GridColumnCollection"/>) of all columns in
                Telerik RadGrid.
            </summary>
            <remarks>
            This is one of the three columns collections in Telerik RadGrid. The
            other two are <strong>AutoGeneratedColumns</strong> and
            <strong>RenderColumns</strong>.
            </remarks>
            <value>returns a <see cref="T:Telerik.WebControls.GridColumnCollection"/> of all grid columns.</value>
            <example>
            	<para><font face="Courier New">The example below demonstrates how to use the
                columns collection to define columns declaratively (in the ASPX)</font></para>
            	<pre>
            		<span style="COLOR: blue">&lt;</span>
            		<span style="COLOR: maroon">rad:RadGrid</span> ID="RadGrid1" DataSourceID="AccessDataSource1" AllowPaging="True" ShowFooter="True"<br/>runat="server" AutoGenerateColumns="False" AllowSorting="True" PageSize="3" Width="925px"<br/>GridLines="None" CellPadding="0" Skin="Default" AllowMultiRowSelection="true"<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;</span><span style="COLOR: maroon">MasterTableView</span> ShowFooter="True"<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;</span><span style="COLOR: maroon">RowIndicatorColumn</span> Visible="False" UniqueName="RowIndicator"<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;</span><span style="COLOR: maroon">HeaderStyle</span> Width="20px"<span style="COLOR: blue">&gt;</span><span style="COLOR: blue">&lt;/</span>
            		<span style="COLOR: maroon">HeaderStyle</span><span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;/</span><span style="COLOR: maroon">RowIndicatorColumn</span>
            		<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;</span><span style="COLOR: maroon">Columns</span>
            		<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;</span><span style="COLOR: maroon">rad:GridEditCommandColumn</span> FooterText="EditCommand footer" UniqueName="EditCommandColumn"<br/>HeaderText="Edit&amp;#160;Command Column"<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;/</span><span style="COLOR: maroon">rad:GridEditCommandColumn</span>
            		<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;</span><span style="COLOR: maroon">rad:GridClientSelectColumn</span> UniqueName="CheckboxSelectColumn" HeaderText="CheckboxSelect column <span style="COLOR: blue">&lt;</span><span style="COLOR: maroon">br</span>
            		<span style="COLOR: blue">/&gt;</span>" <span style="COLOR: blue">/&gt;</span><br/><span style="COLOR: blue">&lt;</span><span style="COLOR: maroon">rad:GridBoundColumn</span> FooterText="BoundColumn footer" UniqueName="CustomerID" SortExpression="CustomerID"<br/>HeaderText="Bound<span style="COLOR: blue">&lt;</span><span style="COLOR: maroon">br/</span>
            		<span style="COLOR: blue">&gt;</span>Column" DataField="CustomerID"<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;/</span><span style="COLOR: maroon">rad:GridBoundColumn</span>
            		<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;</span><span style="COLOR: maroon">rad:GridCheckBoxColumn</span> FooterText="CheckBoxColumn footer" UniqueName="Bool" HeaderText="CheckBox<span style="COLOR: blue">&lt;</span>
            		<span style="COLOR: maroon">br/</span><span style="COLOR: blue">&gt;</span>Column"<br/>DataField="Bool"<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;/</span><span style="COLOR: maroon">rad:GridCheckBoxColumn</span>
            		<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;</span><span style="COLOR: maroon">rad:GridDropDownColumn</span> FooterText="DropDownColumn footer" UniqueName="DropDownListColumn"<br/>ListTextField="ContactName" ListValueField="CustomerID" DataSourceID="AccessDataSource2"<br/>HeaderText="DropDown<span style="COLOR: blue">&lt;</span>
            		<span style="COLOR: maroon">br/</span><span style="COLOR: blue">&gt;</span>Column" DataField="CustomerID"<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;/</span><span style="COLOR: maroon">rad:GridDropDownColumn</span>
            		<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;</span><span style="COLOR: maroon">rad:GridButtonColumn</span> FooterText="PushButtonColumn<span style="COLOR: blue">&lt;</span>
            		<span style="COLOR: maroon">br/</span><span style="COLOR: blue">&gt;</span>footer" DataTextFormatString="Select {0}"<br/>ButtonType="PushButton" UniqueName="column" HeaderText="PushButton<span style="COLOR: blue">&lt;</span>
            		<span style="COLOR: maroon">br/</span><span style="COLOR: blue">&gt;</span>Column"<br/>CommandName="Select" DataTextField="CustomerID"<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;/</span><span style="COLOR: maroon">rad:GridButtonColumn</span>
            		<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;</span><span style="COLOR: maroon">rad:GridButtonColumn</span> FooterText="LinkButtonColumn footer" DataTextFormatString="Remove selection"<br/>UniqueName="column1" HeaderText="LinkButton<span style="COLOR: blue">&lt;</span>
            		<span style="COLOR: maroon">br/</span><span style="COLOR: blue">&gt;</span>Column" CommandName="Deselect"<br/>DataTextField="CustomerID"<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;/</span><span style="COLOR: maroon">rad:GridButtonColumn</span>
            		<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;</span><span style="COLOR: maroon">rad:GridHyperLinkColumn</span> FooterText="HyperLinkColumn footer" DataTextFormatString="Search Google for '{0}'"<br/>DataNavigateUrlField="CompanyName" UniqueName="CompanyName" DataNavigateUrlFormatString="http://www.google.com/search?hl=en&amp;amp;q={0}&amp;amp;btnG=Google+Search"<br/>HeaderText="HyperLink<span style="COLOR: blue">&lt;</span>
            		<span style="COLOR: maroon">br/</span><span style="COLOR: blue">&gt;</span>Column" DataTextField="CompanyName"<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;/</span><span style="COLOR: maroon">rad:GridHyperLinkColumn</span>
            		<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;</span><span style="COLOR: maroon">rad:GridTemplateColumn</span> UniqueName="TemplateColumn" SortExpression="CompanyName"<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;</span><span style="COLOR: maroon">FooterTemplate</span>
            		<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;</span><span style="COLOR: maroon">img</span> src="Img/image.gif" alt="" style="vertical-align: middle" <span style="COLOR: blue">/&gt;</span><br/>Template footer<br/><span style="COLOR: blue">&lt;/</span><span style="COLOR: maroon">FooterTemplate</span>
            		<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;</span><span style="COLOR: maroon">HeaderTemplate</span>
            		<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;</span><span style="COLOR: maroon">table</span> id="Table1" cellspacing="0" cellpadding="0" width="300" border="1"<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;</span><span style="COLOR: maroon">tr</span>
            		<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;</span><span style="COLOR: maroon">td</span> colspan="2" align="center"<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;</span><span style="COLOR: maroon">b</span>
            		<span style="COLOR: blue">&gt;</span>Contact details<span style="COLOR: blue">&lt;/</span><span style="COLOR: maroon">b</span>
            		<span style="COLOR: blue">&gt;</span><span style="COLOR: blue">&lt;/</span><span style="COLOR: maroon">td</span>
            		<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;/</span><span style="COLOR: maroon">tr</span>
            		<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;</span><span style="COLOR: maroon">tr</span>
            		<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;</span><span style="COLOR: maroon">td</span> style="width: 50%" align="center"<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;asp:LinkButton CssClass="Button" Width="140" ID="btnContName" Text="Contact name"<br/>Tooltip="Sort by ContactName" CommandName='Sort' CommandArgument='ContactName' runat="server" /&gt;&lt;/td&gt;</span><br/><span style="COLOR: blue">&lt;</span><span style="COLOR: maroon">td</span> style="width: 50%" align="center"<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;asp:LinkButton CssClass="Button" Width="140" ID="btnContTitle" Text="Contact title"<br/>Tooltip="Sort by ContactTitle" CommandName='Sort' CommandArgument='ContactTitle'<br/>runat="server" /&gt;&lt;/td&gt;</span><br/><span style="COLOR: blue">&lt;/</span><span style="COLOR: maroon">tr</span>
            		<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;/</span><span style="COLOR: maroon">table</span>
            		<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;/</span><span style="COLOR: maroon">HeaderTemplate</span>
            		<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;</span><span style="COLOR: maroon">ItemTemplate</span>
            		<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;</span><span style="COLOR: maroon">table</span> cellpadding="1" cellspacing="1" class="customTable"<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;</span><span style="COLOR: maroon">tr</span>
            		<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;</span><span style="COLOR: maroon">td</span> style="width: 50%"<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;</span>%#<span style="COLOR: red">Eval("ContactName")</span> %<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;/</span><span style="COLOR: maroon">td</span>
            		<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;</span><span style="COLOR: maroon">td</span> style="width: 50%"<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;</span>%#<span style="COLOR: red">Eval("ContactTitle")</span> %<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;/</span><span style="COLOR: maroon">td</span>
            		<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;/</span><span style="COLOR: maroon">tr</span>
            		<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;</span><span style="COLOR: maroon">tr</span>
            		<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;</span><span style="COLOR: maroon">td</span> colspan="2" align="center"<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;</span><span style="COLOR: maroon">a</span> href='<span style="COLOR: blue">&lt;</span>%#<span style="COLOR: red">"http://www.google.com/search?hl=en&amp;amp;q=" + DataBinder.Eval(Container.DataItem, "ContactName") + "&amp;amp;btnG=Google+Search"</span>%<span style="COLOR: blue">&gt;</span>' <span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;</span><span style="COLOR: maroon">em</span>
            		<span style="COLOR: blue">&gt;</span>Search Google for<br/><span style="COLOR: blue">&lt;</span>%#<span style="COLOR: red">Eval("ContactName")</span> %<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;/</span><span style="COLOR: maroon">em</span>
            		<span style="COLOR: blue">&gt;</span><span style="COLOR: blue">&lt;/</span><span style="COLOR: maroon">a</span>
            		<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;/</span><span style="COLOR: maroon">td</span>
            		<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;/</span><span style="COLOR: maroon">tr</span>
            		<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;</span><span style="COLOR: maroon">tr</span>
            		<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;</span><span style="COLOR: maroon">td</span> colspan="2" align="center"<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;</span><span style="COLOR: maroon">img</span> src="Img/image.gif" alt="" <span style="COLOR: blue">/&gt;</span><br/><span style="COLOR: blue">&lt;/</span><span style="COLOR: maroon">td</span>
            		<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;/</span><span style="COLOR: maroon">tr</span>
            		<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;/</span><span style="COLOR: maroon">table</span>
            		<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;/</span><span style="COLOR: maroon">ItemTemplate</span>
            		<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;/</span><span style="COLOR: maroon">rad:GridTemplateColumn</span>
            		<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;/</span><span style="COLOR: maroon">Columns</span>
            		<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;/</span><span style="COLOR: maroon">MasterTableView</span>
            		<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;</span><span style="COLOR: maroon">ClientSettings</span>
            		<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;</span><span style="COLOR: maroon">Selecting</span> AllowRowSelect="true" <span style="COLOR: blue">/&gt;</span><br/><span style="COLOR: blue">&lt;/</span><span style="COLOR: maroon">ClientSettings</span>
            		<span style="COLOR: blue">&gt;</span><br/><span style="COLOR: blue">&lt;/</span><span style="COLOR: maroon">rad:RadGrid</span>
            		<span style="COLOR: blue">&gt;</span>
            	</pre>
            	<code lang="CS" title="Create column in the code-behind" description="The following example demonstrates how to set up a grid in the code-behind and how to create a column and add it to the Columns collection.">
            this.RadGrid1 = new RadGrid();
             
            this.RadGrid1.NeedDataSource += new GridNeedDataSourceEventHandler(this.RadGrid1_NeedDataSource);
             
            this.RadGrid1.AutoGenerateColumns = false;
            this.RadGrid1.MasterTableView.DataMember = "Customers";
             
            GridBoundColumn boundColumn;
            boundColumn = new GridBoundColumn();
            boundColumn.DataField = "CustomerID";
            boundColumn.HeaderText = "CustomerID";
            this.RadGrid1.MasterTableView.Columns.Add(boundColumn);
             
            ....
            //Add to page controls collection
            this.PlaceHolder1.Controls.Add( RadGrid1 );
                </code>
            	<code lang="VB" title="Create column in the code-behind" description="The following example demonstrates how to set up a grid in the code-behind and how to create a column and add it to the Columns collection.">
            Me.RadGrid1 = New RadGrid
             
            AddHandler RadGrid1.NeedDataSource, AddressOf Me.RadGrid1_NeedDataSource
            AddHandler RadGrid1.DetailTableDataBind, AddressOf Me.RadGrid1_DetailTableDataBind
             
            Me.RadGrid1.AutoGenerateColumns = False
            Me.RadGrid1.MasterTableView.DataMember = "Customers"
             
            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "CustomerID"
            boundColumn.HeaderText = "CustomerID"
            Me.RadGrid1.MasterTableView.Columns.Add(boundColumn)
             
             
            ....'Add to page controls collection
            Me.PlaceHolder1.Controls.Add(RadGrid1)
                </code>
            </example>
        </member>
        <member name="P:Telerik.WebControls.RadGrid.IsDetailDataBindingInProgress">
            <exclude/>
            <excludetoc/>
            <summary>Gets a value indicating whether a detail table is currently binding.</summary>
        </member>
        <member name="P:Telerik.WebControls.RadGrid.DataSourceIsAssigned">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.WebControls.RadGrid.DataSourceID">
            <summary>
            	<para>Gets or sets the ID of the control from which the Telerik RadGrid
                control retrieves its list of data items.</para>
            </summary>
            <value>
            The ID of a control that represents the data source from which the
            Telerik RadGrid control retrieves its data. The default is
            String.Empty.
            </value>
            <remarks>
            	<para>If the Telerik RadGrid control has already been initialized when
                you set the DataSourceID property.</para>
            	<para>This property cannot be set by themes or style sheet themes.</para>
            </remarks>
            <example>
                The following code example demonstrates how the DataSourceID property of a
                Telerik RadGrid control is used. The Telerik RadGrid
                control is associated to the SqlDataSource control by setting its DataSourceID
                property to "SqlDataSource1", the ID of the SqlDataSource control. When the
                DataSourceID property is set (instead of the DataSource property), the
                Telerik RadGrid control automatically binds to the data source control
                at run time.
                <code lang="VB" title="VB">
            &lt;%@ Page Language="VB" &lt;see cref="&gt; &lt;"/&gt;@ Register Assembly="RadGrid.Net2" Namespace="Telerik.WebControls" TagPrefix="rad" %&gt;
             
            &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
             
             
            &lt;html xmlns="http://www.w3.org/1999/xhtml" &gt;
            &lt;head runat="server"&gt;
                &lt;title&gt;Untitled Page&lt;/title&gt;
            &lt;/head&gt;
            &lt;body&gt;
                &lt;form id="form1" runat="server"&gt;
                &lt;div&gt;
                    &lt;rad:RadGrid
                        DataSourceID="SqlDataSource1"
                        ID="RadGrid1" 
                        runat="server"&gt;
                    &lt;/rad:RadGrid&gt;
                    &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;
                    &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;
                    &lt;!-- expression to retrieve the connection string value   --&gt;
                    &lt;!-- from the Web.config file.                            --&gt;        
                    &lt;asp:SqlDataSource 
                        ID="SqlDataSource1" 
                        runat="server"
                        ConnectionString="&lt;&lt;see cref="NorthwindConnectionString"&gt;$ ConnectionStrings&lt;/see&gt;&gt;"
                        SelectCommand="SELECT [CustomerID], [ContactName], [CompanyName] FROM [Customers]"&gt;
                    &lt;/asp:SqlDataSource&gt;
                    &lt;asp:Label ID="Label1" runat="server" Text="Label"&gt;&lt;/asp:Label&gt;&lt;/div&gt;
                &lt;/form&gt;
            &lt;/body&gt;
            &lt;/html&gt;
                </code>
            </example>
        </member>
        <member name="P:Telerik.WebControls.RadGrid.ViewStateSize">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.WebControls.RadGrid.SkinsPath">
            <summary>
            Gets or sets the folder where the skins for Telerik RadGrid reside.
            By default this is <strong>~/RadControls/Grid/Skins</strong> folder.
            </summary>
            <value>
            The relative path to the skins folder as String. The default value is
            <strong>~/RadControls/Grid/Skins.</strong>
            </value>
        </member>
        <member name="P:Telerik.WebControls.RadGrid.Skin">
            <summary>
            	<para>Gets or sets the name of the Skin that Telerik RadGrid will use.
                The name of the skin is actually the name of the subfolder of
                <strong>~/RadControls/Grid/Skins</strong>, where the stylesheet and images for this
                skin reside.</para>
            	<para>The folder that holds the skins can be changed using the
                <a href="RadGridNet2~Telerik.WebControls.RadGrid~SkinsPath.html">SkinsPath
                Property</a>.</para>
            </summary>
            <remarks>
            	<para>There are three possible scenarios for using this property:</para>
            	<list type="bullet">
            		<item>Leave this property unset or set it to "Default" - the default skin,
                    common for the Telerik RadControls for ASP.NET suite will be used</item>
            		<item>Set the name of the grid skin - the skin will be applied</item>
            		<item>Set this property to "<strong>none</strong>" - no skin will be applied.
                    Only the default grid images (for Expand/Collapse, Sort, Edit, etc) will be
                    used. Use this option if you have own appearance customizations for prevous
                    Telerik RadGrid versions.</item>
            	</list>
            </remarks>
            <value><para>The name of the skin as String.</para></value>
        </member>
        <member name="P:Telerik.WebControls.RadGrid.AllowFilteringByColumn">
            <summary>
            Gets or sets a value indicating whether the filtering of all tables in the
            hierarchy will be enabled, unless specified other by
            <strong>GridTableView.AllowFilteringByColumn.</strong>
            </summary>
            <value>
            	<strong>true</strong>, enables filtering for the whole grid. Otherwise,
            <strong>false</strong>. Default is <strong>false</strong>.
            </value>
        </member>
        <member name="P:Telerik.WebControls.RadGrid.CatalogIconImageUrl">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.WebControls.RadGrid.Description">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.WebControls.RadGrid.Subtitle">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.WebControls.RadGrid.Title">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.WebControls.RadGrid.TitleIconImageUrl">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.WebControls.RadGrid.TitleUrl">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="T:Telerik.Apoc.DataTypes.AutoLength">
            <summary>
            A length quantity in XSL which is specified as "auto".
            </summary>
        </member>
        <member name="T:Telerik.Apoc.DataTypes.ColorType">
            a colour quantity in XSL
        </member>
        <member name="F:Telerik.Apoc.DataTypes.ColorType._red">
            the red component
        </member>
        <member name="F:Telerik.Apoc.DataTypes.ColorType._green">
            the green component
        </member>
        <member name="F:Telerik.Apoc.DataTypes.ColorType._blue">
            the blue component
        </member>
        <member name="F:Telerik.Apoc.DataTypes.ColorType._alpha">
            the alpha component
        </member>
        <member name="M:Telerik.Apoc.DataTypes.ColorType.#ctor(System.String)">
            set the colour given a particular String specifying either a
            colour name or #RGB or #RRGGBB
        </member>
        <member name="T:Telerik.Apoc.DataTypes.CondLength">
            a space quantity in XSL (space-before, space-after)
        </member>
        <member name="T:Telerik.Apoc.DataTypes.FixedLength">
            a length quantity in XSL
        </member>
        <member name="M:Telerik.Apoc.DataTypes.FixedLength.#ctor(System.Double,System.Int32)">
            Set the length given a number of relative units and the current
            font size in base units.
        </member>
        <member name="M:Telerik.Apoc.DataTypes.FixedLength.#ctor(System.Double,System.String)">
            Set the length given a number of units and a unit name.
        </member>
        <member name="M:Telerik.Apoc.DataTypes.FixedLength.#ctor(System.Int32)">
            set the length as a number of base units
        </member>
        <member name="M:Telerik.Apoc.DataTypes.FixedLength.Convert(System.Double,System.String)">
            Convert the given length to a dimensionless integer representing
            a whole number of base units (milli-points).
        </member>
        <member name="M:Telerik.Apoc.DataTypes.IDNode.#ctor(System.String)">
             Constructor for IDNode
            
             @param idValue The value of the id for this node
        </member>
        <member name="M:Telerik.Apoc.DataTypes.IDNode.SetPageNumber(System.Int32)">
             Sets the page number for this node
            
             @param number page number of node
        </member>
        <member name="M:Telerik.Apoc.DataTypes.IDNode.GetPageNumber">
             Returns the page number of this node
            
             @return page number of this node
        </member>
        <member name="M:Telerik.Apoc.DataTypes.IDNode.CreateInternalLinkGoTo(Telerik.Pdf.PdfObjectId)">
             creates a new GoTo object for an internal link
            
             @param objectNumber
             the number to be assigned to the new object
        </member>
        <member name="M:Telerik.Apoc.DataTypes.IDNode.SetInternalLinkGoToPageReference(Telerik.Pdf.PdfObjectReference)">
             sets the page reference for the internal link's GoTo.  The GoTo will jump to this page reference.
            
             @param pageReference
             the page reference to which the internal link GoTo should jump
             ex. 23 0 R
        </member>
        <member name="M:Telerik.Apoc.DataTypes.IDNode.GetInternalLinkGoToReference">
             Returns the reference to the Internal Link's GoTo object
            
             @return GoTo object reference
        </member>
        <member name="M:Telerik.Apoc.DataTypes.IDNode.GetIDValue">
             Returns the id value of this node
            
             @return this node's id value
        </member>
        <member name="M:Telerik.Apoc.DataTypes.IDNode.GetInternalLinkGoTo">
             Returns the PDFGoTo object associated with the internal link
            
             @return PDFGoTo object
        </member>
        <member name="M:Telerik.Apoc.DataTypes.IDNode.IsThereInternalLinkGoTo">
             Determines whether there is an internal link GoTo for this node
            
             @return true if internal link GoTo for this node is set, false otherwise
        </member>
        <member name="M:Telerik.Apoc.DataTypes.IDNode.SetPosition(System.Int32,System.Int32)">
             Sets the position of this node
            
             @param x      the x position
             @param y      the y position
        </member>
        <member name="M:Telerik.Apoc.DataTypes.IDReferences.#ctor">
            Constructor for IDReferences
        </member>
        <member name="M:Telerik.Apoc.DataTypes.IDReferences.InitializeID(System.String,Telerik.Apoc.Layout.Area)">
             Creates and configures the specified id.
            
             @param id     The id to initialize
             @param area   The area where this id was encountered
             @exception ApocException
        </member>
        <member name="M:Telerik.Apoc.DataTypes.IDReferences.CreateID(System.String)">
             Creates id entry
            
             @param id     The id to create
             @param area   The area where this id was encountered
             @exception ApocException
        </member>
        <member name="M:Telerik.Apoc.DataTypes.IDReferences.CreateUnvalidatedID(System.String)">
             Creates id entry that hasn't been validated
            
             @param id     The id to create
             @exception ApocException
        </member>
        <member name="M:Telerik.Apoc.DataTypes.IDReferences.AddToUnvalidatedIdList(System.String)">
             Adds created id list of unvalidated ids that have already
             been created. This should be used if it is unsure whether
             the id is valid but it must be anyhow.
            
             @param id     The id to create
        </member>
        <member name="M:Telerik.Apoc.DataTypes.IDReferences.RemoveFromUnvalidatedIDList(System.String)">
             Removes id from list of unvalidated ids.
             This should be used if the id has been determined
             to be valid.
            
             @param id     The id to remove
        </member>
        <member name="M:Telerik.Apoc.DataTypes.IDReferences.DoesUnvalidatedIDExist(System.String)">
             Determines whether specified id already exists in
             idUnvalidated
            
             @param id     The id to search for
             @return true if ID was found, false otherwise
        </member>
        <member name="M:Telerik.Apoc.DataTypes.IDReferences.ConfigureID(System.String,Telerik.Apoc.Layout.Area)">
             Configures this id
            
             @param id     The id to configure
             @param area   The area where the id was encountered
        </member>
        <member name="M:Telerik.Apoc.DataTypes.IDReferences.AddToIdValidationList(System.String)">
             Adds id to validation list to be validated .  This should be used if it is unsure whether the id is valid
            
             @param id     id to be added
        </member>
        <member name="M:Telerik.Apoc.DataTypes.IDReferences.RemoveFromIdValidationList(System.String)">
             Removes id from validation list. This should be used if the id has been determined to be valid
            
             @param id     the id to remove
        </member>
        <member name="M:Telerik.Apoc.DataTypes.IDReferences.RemoveID(System.String)">
             Removes id from IDReferences
            
             @param id     The id to remove
             @exception ApocException
        </member>
        <member name="M:Telerik.Apoc.DataTypes.IDReferences.IsEveryIdValid">
             Determines whether all id's are valid
            
             @return true if all id's are valid, false otherwise
        </member>
        <member name="M:Telerik.Apoc.DataTypes.IDReferences.GetInvalidIds">
             Returns all invalid id's still remaining in the validation list
            
             @return invalid ids from validation list
        </member>
        <member name="M:Telerik.Apoc.DataTypes.IDReferences.doesIDExist(System.String)">
             Determines whether specified id already exists in IDReferences
            
             @param id     the id to search for
             @return true if ID was found, false otherwise
        </member>
        <member name="M:Telerik.Apoc.DataTypes.IDReferences.doesGoToReferenceExist(System.String)">
             Determines whether the GoTo reference for the specified id is defined
            
             @param id     the id to search for
             @return true if GoTo reference is defined, false otherwise
        </member>
        <member name="M:Telerik.Apoc.DataTypes.IDReferences.getInternalLinkGoTo(System.String)">
             Returns the reference to the GoTo object used for the internal link
            
             @param id     the id whose reference to use
             @return reference to GoTo object
        </member>
        <member name="M:Telerik.Apoc.DataTypes.IDReferences.createInternalLinkGoTo(System.String,Telerik.Pdf.PdfObjectId)">
            <summary>
                Creates an PdfGoto object that will 'goto' the passed Id.
            </summary>
            <param name="id">The ID of the link's target.</param>
            <param name="objectId">The PDF object id to use for the GoTo object.</param>
            <remarks>
                This method is a bit 'wrong'.  Passing in an objectId seems a bit
                dirty and I don't see why an IDNode should be responsible for
                keeping track of the GoTo object that points to it.  These decisions
                only seem to pollute this class with PDF specific code.
            </remarks>
        </member>
        <member name="M:Telerik.Apoc.DataTypes.IDReferences.createNewId(System.String)">
             Adds an id to IDReferences
            
             @param id     the id to add
        </member>
        <member name="M:Telerik.Apoc.DataTypes.IDReferences.getPDFGoTo(System.String)">
             Returns the PDFGoTo object for the specified id
            
             @param id     the id for which the PDFGoTo to be retrieved is associated
             @return the PdfGoTo object associated with the specified id
        </member>
        <member name="M:Telerik.Apoc.DataTypes.IDReferences.setInternalGoToPageReference(System.String,Telerik.Pdf.PdfObjectReference)">
             sets the page reference for the internal link's GoTo.  The GoTo will jump to this page reference.
            
             @param pageReference
             the page reference to which the internal link GoTo should jump
             ex. 23 0 R
        </member>
        <member name="M:Telerik.Apoc.DataTypes.IDReferences.setPageNumber(System.String,System.Int32)">
             Sets the page number for the specified id
            
             @param id     The id whose page number is being set
             @param pageNumber The page number of the specified id
        </member>
        <member name="M:Telerik.Apoc.DataTypes.IDReferences.getPageNumber(System.String)">
             Returns the page number where the specified id is found
            
             @param id     The id whose page number to return
             @return the page number of the id, or null if the id does not exist
        </member>
        <member name="M:Telerik.Apoc.DataTypes.IDReferences.setPosition(System.String,System.Int32,System.Int32)">
             Sets the x and y position of specified id
            
             @param id     the id whose position is to be set
             @param x      x position of id
             @param y      y position of id
        </member>
        <member name="T:Telerik.Apoc.DataTypes.Keep">
            XSL FO Keep Property datatype (keep-together, etc)
        </member>
        <member name="M:Telerik.Apoc.DataTypes.Keep.ToString">
            What to do here? There isn't really a meaningful single value.
        </member>
        <member name="T:Telerik.Apoc.DataTypes.KeepValue">
            Keep Value
            Stores the different types of keeps in a single convenient format.
        </member>
        <member name="F:Telerik.Apoc.DataTypes.LengthBase.parentFO">
            FO parent of the FO for which this property is to be calculated.
        </member>
        <member name="F:Telerik.Apoc.DataTypes.LengthBase.propertyList">
            PropertyList for the FO where this property is calculated.
        </member>
        <member name="F:Telerik.Apoc.DataTypes.LengthBase.iBaseType">
            One of the defined types of LengthBase
        </member>
        <member name="M:Telerik.Apoc.DataTypes.LengthBase.GetParentFO">
            Accessor for parentFO object from subclasses which define
            custom kinds of LengthBase calculations.
        </member>
        <member name="M:Telerik.Apoc.DataTypes.LengthBase.getPropertyList">
            Accessor for propertyList object from subclasses which define
            custom kinds of LengthBase calculations.
        </member>
        <member name="T:Telerik.Apoc.DataTypes.LengthPair">
            This datatype hold a pair of lengths, specifiying the dimensions in
            both inline and block-progression-directions.
            It is currently only used to specify border-separation in tables.
        </member>
        <member name="T:Telerik.Apoc.DataTypes.LengthRange">
            a "progression-dimension" quantity
            ex. block-progression-dimension, inline-progression-dimension
            corresponds to the triplet min-height, height, max-height (or width)
        </member>
        <member name="M:Telerik.Apoc.DataTypes.LengthRange.SetMinimum(Telerik.Apoc.Fo.Property,System.Boolean)">
            Set minimum value to min.
            @param min A Length value specifying the minimum value for this
            LengthRange.
            @param bIsDefault If true, this is set as a "default" value
            and not a user-specified explicit value.
        </member>
        <member name="M:Telerik.Apoc.DataTypes.LengthRange.SetMaximum(Telerik.Apoc.Fo.Property,System.Boolean)">
            Set maximum value to max if it is >= optimum or optimum isn't set.
            @param max A Length value specifying the maximum value for this
            @param bIsDefault If true, this is set as a "default" value
            and not a user-specified explicit value.
        </member>
        <member name="M:Telerik.Apoc.DataTypes.LengthRange.SetOptimum(Telerik.Apoc.Fo.Property,System.Boolean)">
            Set the optimum value.
            @param opt A Length value specifying the optimum value for this
            @param bIsDefault If true, this is set as a "default" value
            and not a user-specified explicit value.
        </member>
        <member name="M:Telerik.Apoc.DataTypes.LinearCombinationLength.ComputeValue">
            Return the computed value in millipoints.
        </member>
        <member name="T:Telerik.Apoc.DataTypes.MixedLength">
            A length quantity in XSL which is specified with a mixture
            of absolute and relative and/or percent components.
            The actual value may not be computable before layout is done.
        </member>
        <member name="T:Telerik.Apoc.DataTypes.PercentLength">
            a percent specified length quantity in XSL
        </member>
        <member name="M:Telerik.Apoc.DataTypes.PercentLength.#ctor(System.Double)">
            construct an object based on a factor (the percent, as a
            a factor) and an object which has a method to return the
            Length which provides the "base" for this calculation.
        </member>
        <member name="M:Telerik.Apoc.DataTypes.PercentLength.ComputeValue">
            Return the computed value in millipoints. This assumes that the
            base length has been resolved to an absolute length value.
        </member>
        <member name="T:Telerik.Apoc.DataTypes.Space">
            <summary>
                A space quantity in XSL (space-before, space-after)
            </summary>
        </member>
        <member name="T:Telerik.Apoc.DataTypes.TableColLength">
            A table-column width specification, possibly including some
            number of proportional "column-units". The absolute size of a
            column-unit depends on the fixed and proportional sizes of all
            columns in the table, and on the overall size of the table.
            It can't be calculated until all columns have been specified and until
            the actual width of the table is known. Since this can be specified
            as a percent of its parent containing width, the calculation is done
            during layout.
            NOTE: this is only supposed to be allowed if table-layout=fixed.
        </member>
        <member name="F:Telerik.Apoc.DataTypes.TableColLength.tcolUnits">
            Number of table-column proportional units
        </member>
        <member name="M:Telerik.Apoc.DataTypes.TableColLength.#ctor(System.Double)">
            Construct an object with tcolUnits of proportional measure.
        </member>
        <member name="M:Telerik.Apoc.DataTypes.TableColLength.GetTableUnits">
            Override the method in Length to return the number of specified
            proportional table-column units.
        </member>
        <member name="M:Telerik.Apoc.DataTypes.TableColLength.ResolveTableUnit(System.Double)">
            Calculate the number of millipoints and set it.
        </member>
        <member name="F:Telerik.Apoc.Fo.Property.specVal">
            The original specified value for properties which inherit
            specified values.
        </member>
        <member name="M:Telerik.Apoc.Fo.Property.GetLength">
            Accessor functions for all possible Property datatypes
        </member>
        <member name="P:Telerik.Apoc.Fo.Property.SpecifiedValue">
            <summary>
                Gets or setd the original value specified for the property attribute.
            </summary>
        </member>
        <member name="M:Telerik.Apoc.Fo.PropertyMaker.#ctor">
            <summary>
                Construct an instance of a PropertyMaker.
            </summary>
            <remarks>
                The property name is set to "UNKNOWN".
            </remarks>
        </member>
        <member name="M:Telerik.Apoc.Fo.PropertyMaker.#ctor(System.String)">
            <summary>
                Construct an instance of a PropertyMaker for the given property.
            </summary>
            <param name="propName">The name of the property to be made.</param>
        </member>
        <member name="M:Telerik.Apoc.Fo.PropertyMaker.IsInherited">
            <summary>
                Default implementation of isInherited.
            </summary>
            <returns>A boolean indicating whether this property is inherited.</returns>
        </member>
        <member name="M:Telerik.Apoc.Fo.PropertyMaker.InheritsSpecified">
            <summary>
                Return a boolean indicating whether this property inherits the
                "specified" value rather than the "computed" value. The default is 
                to inherit the "computed" value.
            </summary>
            <returns>If true, property inherits the value specified.</returns>
        </member>
        <member name="M:Telerik.Apoc.Fo.PropertyMaker.GetPercentBase(Telerik.Apoc.Fo.FObj,Telerik.Apoc.Fo.PropertyList)">
            <summary>
                Return an object implementing the PercentBase interface.  This is 
                used to handle properties specified as a percentage of some "base 
                length", such as the content width of their containing box.  
                Overridden by subclasses which allow percent specifications. See
                the documentation on properties.xsl for details.
            </summary>
            <param name="fo"></param>
            <param name="pl"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Apoc.Fo.PropertyMaker.GetSubpropMaker(System.String)">
            <summary>
                Return a Maker object which is used to set the values on components 
                of compound property types, such as "space".  Overridden by property 
                maker subclasses which handle compound properties.
            </summary>
            <param name="subprop">
                The name of the component for which a Maker is to returned, for 
                example "optimum", if the FO attribute is space.optimum='10pt'.
            </param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Apoc.Fo.PropertyMaker.GetSubpropValue(Telerik.Apoc.Fo.Property,System.String)">
            <summary>
                Return a property value for the given component of a compound 
                property.
            </summary>
            <remarks>
                NOTE: this is only to ease porting when calls are made to 
                PropertyList.get() using a component name of a compound property,
                such as get("space.optimum"). 
                The recommended technique is: get("space").getOptimum().
                Overridden by property maker subclasses which handle compound properties.
            </remarks>
            <param name="p">A property value for a compound property type such as SpaceProperty.</param>
            <param name="subprop">The name of the component whose value is to be returned.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Apoc.Fo.PropertyMaker.Make(Telerik.Apoc.Fo.Property,System.String,Telerik.Apoc.Fo.PropertyList,System.String,Telerik.Apoc.Fo.FObj)">
            <summary>
                Return a property value for a compound property. If the property
                value is already partially initialized, this method will modify it.
            </summary>
            <param name="baseProp">
                The Property object representing the compound property, such as 
                SpaceProperty.
            </param>
            <param name="partName">The name of the component whose value is specified.</param>
            <param name="propertyList">The propertyList being built.</param>
            <param name="value"></param>
            <param name="fo">The FO whose properties are being set.</param>
            <returns>A compound property object.</returns>
        </member>
        <member name="M:Telerik.Apoc.Fo.PropertyMaker.SetSubprop(Telerik.Apoc.Fo.Property,System.String,Telerik.Apoc.Fo.Property)">
            <summary>
                Set a component in a compound property and return the modified
                compound property object.  This default implementation returns 
                the original base property without modifying it.  It is overridden 
                by property maker subclasses which handle compound properties.
            </summary>
            <param name="baseProp">
                The Property object representing the compound property, such as SpaceProperty.
            </param>
            <param name="partName">The name of the component whose value is specified.</param>
            <param name="subProp">
                A Property object holding the specified value of the component to be set.
            </param>
            <returns>The modified compound property object.</returns>
        </member>
        <member name="M:Telerik.Apoc.Fo.PropertyMaker.Make(Telerik.Apoc.Fo.PropertyList,System.String,Telerik.Apoc.Fo.FObj)">
            <summary>
                Create a Property object from an attribute specification.
            </summary>
            <param name="propertyList">The PropertyList object being built for this FO.</param>
            <param name="value">The attribute value.</param>
            <param name="fo">The current FO whose properties are being set.</param>
            <returns>The initialized Property object.</returns>
        </member>
        <member name="M:Telerik.Apoc.Fo.PropertyMaker.CheckValueKeywords(System.String)">
            <summary>
                Return a String to be parsed if the passed value corresponds to
                a keyword which can be parsed and used to initialize the property.
                For example, the border-width family of properties can have the
                initializers "thin", "medium", or "thick". The foproperties.xml
                file specifies a length value equivalent for these keywords,
                such as "0.5pt" for "thin". These values are considered parseable,
                since the Length object is no longer responsible for parsing
                unit expresssions.
            </summary>
            <param name="value">The string value of property attribute.</param>
            <returns>
                A string containging a parseable equivalent or null if the passed 
                value isn't a keyword initializer for this Property.
            </returns>
        </member>
        <member name="M:Telerik.Apoc.Fo.PropertyMaker.ConvertProperty(Telerik.Apoc.Fo.Property,Telerik.Apoc.Fo.PropertyList,Telerik.Apoc.Fo.FObj)">
            <summary>
                Return a Property object based on the passed Property object.
                This method is called if the Property object built by the parser
                isn't the right type for this property.
                It is overridden by subclasses when the property specification in
                foproperties.xml specifies conversion rules.
            </summary>
            <param name="p">The Property object return by the expression parser</param>
            <param name="propertyList">The PropertyList object being built for this FO.</param>
            <param name="fo">The current FO whose properties are being set.</param>
            <returns>
                A Property of the correct type or null if the parsed value
                can't be converted to the correct type.
            </returns>
        </member>
        <member name="M:Telerik.Apoc.Fo.PropertyMaker.Make(Telerik.Apoc.Fo.PropertyList)">
            <summary>
                Return a Property object representing the initial value.
            </summary>
            <param name="propertyList">The PropertyList object being built for this FO.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Apoc.Fo.PropertyMaker.MakeCompound(Telerik.Apoc.Fo.PropertyList,Telerik.Apoc.Fo.FObj)">
            <summary>
                Return a Property object representing the initial value.
            </summary>
            <param name="propertyList">The PropertyList object being built for this FO.</param>
            <param name="parentFO">The parent FO for the FO whose property is being made.</param>
            <returns>
                A Property subclass object holding a "compound" property object
                initialized to the default values for each component.
            </returns>
        </member>
        <member name="M:Telerik.Apoc.Fo.PropertyMaker.Compute(Telerik.Apoc.Fo.PropertyList)">
            <summary>
                Return a Property object representing the value of this property,
                based on other property values for this FO.
                A special case is properties which inherit the specified value,
                rather than the computed value.
            </summary>
            <param name="propertyList">The PropertyList for the FO.</param>
            <returns>
                Property A computed Property value or null if no rules are 
                specified (in foproperties.xml) to compute the value.
            </returns>
        </member>
        <member name="P:Telerik.Apoc.Fo.PropertyMaker.PropName">
            <summary>
                Return the name of the property whose value is being set.
            </summary>
        </member>
        <member name="T:Telerik.Apoc.Extensions.ExtensionObj">
            base class for extension objects
        </member>
        <member name="T:Telerik.Apoc.Fo.FObj">
            base class for representation of formatting objects and their processing
        </member>
        <member name="F:Telerik.Apoc.Fo.FONode.MarkerStart">
            <summary>
                Value of marker before layout begins
            </summary>
        </member>
        <member name="F:Telerik.Apoc.Fo.FONode.MarkerBreakAfter">
            value of marker after break-after
        </member>
        <member name="F:Telerik.Apoc.Fo.FONode.marker">
            where the layout was up to.
            for FObjs it is the child number
            for FOText it is the character number
        </member>
        <member name="M:Telerik.Apoc.Fo.FONode.GetProperty(System.String)">
            lets outside sources access the property list
            first used by PageNumberCitation to find the "id" property
            returns null by default, overide this function when there is a property list
            @param name - the name of the desired property to obtain
            @returns the property
        </member>
        <member name="M:Telerik.Apoc.Fo.FONode.getMarkerSnapshot(System.Collections.ArrayList)">
            At the start of a new span area layout may be partway through a
            nested FO, and balancing requires rollback to this known point.
            The snapshot records exactly where layout is at.
            @param snapshot a Vector of markers (Integer)
            @returns the updated Vector of markers (Integers)
        </member>
        <member name="M:Telerik.Apoc.Fo.FONode.Rollback(System.Collections.ArrayList)">
            When balancing occurs, the flow layout() method restarts at the
            point specified by the current marker snapshot, which is retrieved
            and restored using this method.
            @param snapshot the Vector of saved markers (Integers)
        </member>
        <member name="M:Telerik.Apoc.Fo.FObj.AddCharacters(System.Char[],System.Int32,System.Int32)">
            adds characters (does nothing here)
            @param data text
            @param start start position
            @param length length of the text
        </member>
        <member name="M:Telerik.Apoc.Fo.FObj.Layout(Telerik.Apoc.Layout.Area)">
             generates the area or areas for this formatting object
             and adds these to the area. This method should always be
             overridden by all sub classes
            
             @param area
        </member>
        <member name="M:Telerik.Apoc.Fo.FObj.GetName">
            returns the name of the formatting object
            @return the name of this formatting objects
        </member>
        <member name="M:Telerik.Apoc.Fo.FObj.Start">
            
        </member>
        <member name="M:Telerik.Apoc.Fo.FObj.End">
            
        </member>
        <member name="M:Telerik.Apoc.Fo.FObj.GetProperty(System.String)">
            lets outside sources access the property list
            first used by PageNumberCitation to find the "id" property
            @param name - the name of the desired property to obtain
            @return the property
        </member>
        <member name="M:Telerik.Apoc.Fo.FObj.GetContentWidth">
            Return the "content width" of the areas generated by this FO.
            This is used by percent-based properties to get the dimension of
            the containing block.
            If an FO has a property with a percentage value, that value
            is usually calculated on the basis of the corresponding dimension
            of the area which contains areas generated by the FO.
            NOTE: subclasses of FObj should implement this to return a reasonable
            value!
        </member>
        <member name="M:Telerik.Apoc.Fo.FObj.RemoveID(Telerik.Apoc.DataTypes.IDReferences)">
            removes property id
            @param idReferences the id to remove
        </member>
        <member name="M:Telerik.Apoc.Fo.FObj.SetWritingMode">
            Set writing mode for this FO.
            Find nearest ancestor, including self, which generates
            reference areas and use the value of its writing-mode property.
            If no such ancestor is found, use the value on the root FO.
        </member>
        <member name="M:Telerik.Apoc.Extensions.ExtensionObj.#ctor(Telerik.Apoc.Fo.FObj,Telerik.Apoc.Fo.PropertyList)">
            
             @param parent the parent formatting object
             @param propertyList the explicit properties of this object
        </member>
        <member name="M:Telerik.Apoc.Extensions.ExtensionObj.Layout(Telerik.Apoc.Layout.Area)">
             Called for extensions within a page sequence or flow. These extensions
             are allowed to generate visible areas within the layout.
            
            
             @param area
        </member>
        <member name="M:Telerik.Apoc.Extensions.ExtensionObj.Format(Telerik.Apoc.Layout.AreaTree)">
             Called for root extensions. Root extensions aren't allowed to generate
             any visible areas. They are used for extra items that don't show up in
             the page layout itself. For example: pdf outlines
            
             @param areaTree
        </member>
        <member name="F:Telerik.Apoc.Extensions.Outline._parentOutline">
            The parent outline object if it exists
        </member>
        <member name="F:Telerik.Apoc.Extensions.Outline._rendererObject">
            an opaque renderer context object, e.g. PDFOutline for PDFRenderer
        </member>
        <member name="M:Telerik.Apoc.Fo.Expr.FunctionBase.GetPercentBase">
            By default, functions have no percent-based arguments.
        </member>
        <member name="T:Telerik.Apoc.Fo.Expr.ApocPropValFunction">
            Return the specified or initial value of the property on this object.
        </member>
        <member name="M:Telerik.Apoc.Fo.Expr.NCnameProperty.GetString">
            Return the name as a String (should be specified with quotes!)
        </member>
        <member name="M:Telerik.Apoc.Fo.Expr.Numeric.#ctor(System.Decimal)">
            Construct a Numeric object from a Number.
            @param num The number.
        </member>
        <member name="M:Telerik.Apoc.Fo.Expr.Numeric.#ctor(Telerik.Apoc.DataTypes.FixedLength)">
            Construct a Numeric object from a Length.
            @param l The Length.
        </member>
        <member name="M:Telerik.Apoc.Fo.Expr.Numeric.#ctor(Telerik.Apoc.DataTypes.PercentLength)">
            Construct a Numeric object from a PercentLength.
            @param pclen The PercentLength.
        </member>
        <member name="M:Telerik.Apoc.Fo.Expr.Numeric.#ctor(Telerik.Apoc.DataTypes.TableColLength)">
            v         * Construct a Numeric object from a TableColLength.
                     * @param tclen The TableColLength.
        </member>
        <member name="M:Telerik.Apoc.Fo.Expr.Numeric.asLength">
            Return the current value as a Length if possible. This constructs
            a new Length or Length subclass based on the current value type
            of the Numeric.
            If the stored value has a unit dimension other than 1, null
            is returned.
        </member>
        <member name="M:Telerik.Apoc.Fo.Expr.Numeric.asNumber">
            Return the current value as a Number if possible.
            Calls asDouble().
        </member>
        <member name="M:Telerik.Apoc.Fo.Expr.Numeric.isMixedType">
            Return a boolean value indiciating whether the currently stored
            value consists of different "types" of values (absolute, percent,
            and/or table-unit.)
        </member>
        <member name="M:Telerik.Apoc.Fo.Expr.Numeric.subtract(Telerik.Apoc.Fo.Expr.Numeric)">
            Subtract the operand from the current value and return a new Numeric
            representing the result.
            @param op The value to subtract.
            @return A Numeric representing the result.
            @throws PropertyException If the dimension of the operand is different
            from the dimension of this Numeric.
        </member>
        <member name="M:Telerik.Apoc.Fo.Expr.Numeric.add(Telerik.Apoc.Fo.Expr.Numeric)">
            Add the operand from the current value and return a new Numeric
            representing the result.
            @param op The value to add.
            @return A Numeric representing the result.
            @throws PropertyException If the dimension of the operand is different
            from the dimension of this Numeric.
        </member>
        <member name="M:Telerik.Apoc.Fo.Expr.Numeric.multiply(Telerik.Apoc.Fo.Expr.Numeric)">
            Multiply the the current value by the operand and return a new Numeric
            representing the result.
            @param op The multiplier.
            @return A Numeric representing the result.
            @throws PropertyException If both Numerics have "mixed" type.
        </member>
        <member name="M:Telerik.Apoc.Fo.Expr.Numeric.divide(Telerik.Apoc.Fo.Expr.Numeric)">
            Divide the the current value by the operand and return a new Numeric
            representing the result.
            @param op The divisor.
            @return A Numeric representing the result.
            @throws PropertyException If both Numerics have "mixed" type.
        </member>
        <member name="M:Telerik.Apoc.Fo.Expr.Numeric.abs">
            Return the absolute value of this Numeric.
            @return A new Numeric object representing the absolute value.
        </member>
        <member name="M:Telerik.Apoc.Fo.Expr.Numeric.max(Telerik.Apoc.Fo.Expr.Numeric)">
            Return a Numeric which is the maximum of the current value and the
            operand.
            @throws PropertyException If the dimensions or value types of the
            object and the operand are different.
        </member>
        <member name="M:Telerik.Apoc.Fo.Expr.Numeric.min(Telerik.Apoc.Fo.Expr.Numeric)">
            Return a Numeric which is the minimum of the current value and the
            operand.
            @throws PropertyException If the dimensions or value types of the
            object and the operand are different.
        </member>
        <member name="T:Telerik.Apoc.Fo.Expr.PropertyInfo">
            This class holds context information needed during property expression
            evaluation.
            It holds the Maker object for the property, the PropertyList being
            built, and the FObj parent of the FObj for which the property is being set.
        </member>
        <member name="M:Telerik.Apoc.Fo.Expr.PropertyInfo.inheritsSpecified">
            Return whether this property inherits specified values.
            Propagates to the Maker.
            @return true if the property inherits specified values, false if it
            inherits computed values.
        </member>
        <member name="M:Telerik.Apoc.Fo.Expr.PropertyInfo.GetPercentBase">
            Return the PercentBase object used to calculate the absolute value from
            a percent specification.
            Propagates to the Maker.
            @return The PercentBase object or null if percentLengthOK()=false.
        </member>
        <member name="M:Telerik.Apoc.Fo.Expr.PropertyInfo.currentFontSize">
            Return the current font-size value as base units (milli-points).
        </member>
        <member name="M:Telerik.Apoc.Fo.Expr.PropertyTokenizer.#ctor(System.String)">
            Construct a new PropertyTokenizer object to tokenize the passed
            string.
            @param s The Property expressio to tokenize.
        </member>
        <member name="M:Telerik.Apoc.Fo.Expr.PropertyTokenizer.next">
            Return the next token in the expression string.
            This sets the following package visible variables:
            currentToken  An enumerated value identifying the recognized token
            currentTokenValue  A string containing the token contents
            currentUnitLength  If currentToken = TOK_NUMERIC, the number of
            characters in the unit name.
            @throws PropertyException If un unrecognized token is encountered.
        </member>
        <member name="M:Telerik.Apoc.Fo.Expr.PropertyTokenizer.scanName">
            Attempt to recognize a valid NAME token in the input expression.
        </member>
        <member name="M:Telerik.Apoc.Fo.Expr.PropertyTokenizer.scanDigits">
            Attempt to recognize a valid sequence of decimal digits in the
            input expression.
        </member>
        <member name="M:Telerik.Apoc.Fo.Expr.PropertyTokenizer.scanHexDigits">
            Attempt to recognize a valid sequence of hexadecimal digits in the
            input expression.
        </member>
        <member name="M:Telerik.Apoc.Fo.Expr.PropertyTokenizer.followingParen">
            Return a bool value indicating whether the following non-whitespace
            character is an opening parenthesis.
        </member>
        <member name="M:Telerik.Apoc.Fo.Expr.PropertyTokenizer.isDigit(System.Char)">
            Return a bool value indicating whether the argument is a
            decimal digit (0-9).
            @param c The character to check
        </member>
        <member name="M:Telerik.Apoc.Fo.Expr.PropertyTokenizer.isHexDigit(System.Char)">
            Return a bool value indicating whether the argument is a
            hexadecimal digit (0-9, A-F, a-f).
            @param c The character to check
        </member>
        <member name="M:Telerik.Apoc.Fo.Expr.PropertyTokenizer.isSpace(System.Char)">
            Return a bool value indicating whether the argument is whitespace
            as defined by XSL (space, newline, CR, tab).
            @param c The character to check
        </member>
        <member name="M:Telerik.Apoc.Fo.Expr.PropertyTokenizer.isNameStartChar(System.Char)">
            Return a  bool value indicating whether the argument is a valid name
            start character, ie. can start a NAME as defined by XSL.
            @param c The character to check
        </member>
        <member name="M:Telerik.Apoc.Fo.Expr.PropertyTokenizer.isNameChar(System.Char)">
            Return a  bool value indicating whether the argument is a valid name
            character, ie. can occur in a NAME as defined by XSL.
            @param c The character to check
        </member>
        <member name="M:Telerik.Apoc.Fo.Expr.PropertyParser.parse(System.String,Telerik.Apoc.Fo.Expr.PropertyInfo)">
            Public entrypoint to the Property expression parser.
            @param expr The specified value (attribute on the xml element).
            @param propInfo A PropertyInfo object representing the context in
            which the property expression is to be evaluated.
            @return A Property object holding the parsed result.
            @throws PropertyException If the "expr" cannot be parsed as a Property.
        </member>
        <member name="M:Telerik.Apoc.Fo.Expr.PropertyParser.#ctor(System.String,Telerik.Apoc.Fo.Expr.PropertyInfo)">
            Private constructor. Called by the static parse() method.
            @param propExpr The specified value (attribute on the xml element).
            @param propInfo A PropertyInfo object representing the context in
            which the property expression is to be evaluated.
        </member>
        <member name="M:Telerik.Apoc.Fo.Expr.PropertyParser.parseProperty">
            Parse the property expression described in the instance variables.
            Note: If the property expression String is empty, a StringProperty
            object holding an empty String is returned.
            @return A Property object holding the parsed result.
            @throws PropertyException If the "expr" cannot be parsed as a Property.
        </member>
        <member name="M:Telerik.Apoc.Fo.Expr.PropertyParser.parseAdditiveExpr">
            Try to parse an addition or subtraction expression and return the
            resulting Property.
        </member>
        <member name="M:Telerik.Apoc.Fo.Expr.PropertyParser.parseMultiplicativeExpr">
            Try to parse a multiply, divide or modulo expression and return
            the resulting Property.
        </member>
        <member name="M:Telerik.Apoc.Fo.Expr.PropertyParser.parseUnaryExpr">
            Try to parse a unary minus expression and return the
            resulting Property.
        </member>
        <member name="M:Telerik.Apoc.Fo.Expr.PropertyParser.expectRpar">
            Checks that the current token is a right parenthesis
            and throws an exception if this isn't the case.
        </member>
        <member name="M:Telerik.Apoc.Fo.Expr.PropertyParser.parsePrimaryExpr">
            Try to parse a primary expression and return the
            resulting Property.
            A primary expression is either a parenthesized expression or an
            expression representing a primitive Property datatype, such as a
            string literal, an NCname, a number or a unit expression, or a
            function call expression.
        </member>
        <member name="M:Telerik.Apoc.Fo.Expr.PropertyParser.parseArgs(System.Int32)">
            Parse a comma separated list of function arguments. Each argument
            may itself be an expression. This method consumes the closing right
            parenthesis of the argument list.
            @param nbArgs The number of arguments expected by the function.
            @return An array of Property objects representing the arguments
            found.
            @throws PropertyException If the number of arguments found isn't equal
            to the number expected.
        </member>
        <member name="M:Telerik.Apoc.Fo.Expr.PropertyParser.evalAddition(Telerik.Apoc.Fo.Expr.Numeric,Telerik.Apoc.Fo.Expr.Numeric)">
            Evaluate an addition operation. If either of the arguments is null,
            this means that it wasn't convertible to a Numeric value.
            @param op1 A Numeric object (Number or Length-type object)
            @param op2 A Numeric object (Number or Length-type object)
            @return A new NumericProperty object holding an object which represents
            the sum of the two operands.
            @throws PropertyException If either operand is null.
        </member>
        <member name="M:Telerik.Apoc.Fo.Expr.PropertyParser.evalSubtraction(Telerik.Apoc.Fo.Expr.Numeric,Telerik.Apoc.Fo.Expr.Numeric)">
            Evaluate a subtraction operation. If either of the arguments is null,
            this means that it wasn't convertible to a Numeric value.
            @param op1 A Numeric object (Number or Length-type object)
            @param op2 A Numeric object (Number or Length-type object)
            @return A new NumericProperty object holding an object which represents
            the difference of the two operands.
            @throws PropertyException If either operand is null.
        </member>
        <member name="M:Telerik.Apoc.Fo.Expr.PropertyParser.evalNegate(Telerik.Apoc.Fo.Expr.Numeric)">
            Evaluate a unary minus operation. If the argument is null,
            this means that it wasn't convertible to a Numeric value.
            @param op A Numeric object (Number or Length-type object)
            @return A new NumericProperty object holding an object which represents
            the negative of the operand (multiplication by *1).
            @throws PropertyException If the operand is null.
        </member>
        <member name="M:Telerik.Apoc.Fo.Expr.PropertyParser.evalMultiply(Telerik.Apoc.Fo.Expr.Numeric,Telerik.Apoc.Fo.Expr.Numeric)">
            Evaluate a multiplication operation. If either of the arguments is null,
            this means that it wasn't convertible to a Numeric value.
            @param op1 A Numeric object (Number or Length-type object)
            @param op2 A Numeric object (Number or Length-type object)
            @return A new NumericProperty object holding an object which represents
            the product of the two operands.
            @throws PropertyException If either operand is null.
        </member>
        <member name="M:Telerik.Apoc.Fo.Expr.PropertyParser.evalDivide(Telerik.Apoc.Fo.Expr.Numeric,Telerik.Apoc.Fo.Expr.Numeric)">
            Evaluate a division operation. If either of the arguments is null,
            this means that it wasn't convertible to a Numeric value.
            @param op1 A Numeric object (Number or Length-type object)
            @param op2 A Numeric object (Number or Length-type object)
            @return A new NumericProperty object holding an object which represents
            op1 divided by op2.
            @throws PropertyException If either operand is null.
        </member>
        <member name="M:Telerik.Apoc.Fo.Expr.PropertyParser.evalModulo(Telerik.Apoc.DataTypes.Number,Telerik.Apoc.DataTypes.Number)">
            Evaluate a modulo operation. If either of the arguments is null,
            this means that it wasn't convertible to a Number value.
            @param op1 A Number object
            @param op2 A Number object
            @return A new NumberProperty object holding an object which represents
            op1 mod op2.
            @throws PropertyException If either operand is null.
        </member>
        <member name="M:Telerik.Apoc.Fo.Expr.PropertyParser.ParseDouble(System.String)">
            <summary>
                Parses a double value using a culture insensitive locale.
            </summary>
            <param name="s">The double value as a string.</param>
            <returns>The double value parsed.</returns>
        </member>
        <member name="M:Telerik.Apoc.Fo.Expr.RGBColorFunction.GetPercentBase">
            Return an object which implements the PercentBase interface.
            Percents in arguments to this function are interpreted relative
            to 255.
        </member>
        <member name="M:Telerik.Apoc.Fo.Flow.AbstractTableBody.startsAC(Telerik.Apoc.Layout.Area)">
            Return true if the passed area is on the left edge of its nearest
            absolute AreaContainer (generally a page column).
        </member>
        <member name="T:Telerik.Apoc.Fo.FObjMixed">
            base class for representation of mixed content formatting objects
            and their processing
        </member>
        <member name="M:Telerik.Apoc.Fo.Flow.Block.GetContentWidth">
            Return the content width of the boxes generated by this FO.
        </member>
        <member name="M:Telerik.Apoc.Fo.Flow.BlockContainer.GetContentWidth">
            Return the content width of the boxes generated by this block
            container FO.
        </member>
        <member name="T:Telerik.Apoc.Fo.Flow.Character">
             this class represents the flow object 'fo:character'. Its use is defined by
             the spec: "The fo:character flow object represents a character that is mapped to
             a glyph for presentation. It is an atomic unit to the formatter.
             When the result tree is interpreted as a tree of formatting objects,
             a character in the result tree is treated as if it were an empty
             element of type fo:character with a character attribute
             equal to the Unicode representation of the character.
             The semantics of an "auto" value for character properties, which is
             typically their initial value,  are based on the Unicode codepoint.
             Overrides may be specified in an implementation-specific manner." (6.6.3)
            
        </member>
        <member name="F:Telerik.Apoc.Fo.Flow.Flow.pageSequence">
            PageSequence container
        </member>
        <member name="F:Telerik.Apoc.Fo.Flow.Flow.markerSnapshot">
            Vector to store snapshot
        </member>
        <member name="F:Telerik.Apoc.Fo.Flow.Flow._flowName">
            flow-name attribute
        </member>
        <member name="F:Telerik.Apoc.Fo.Flow.Flow.contentWidth">
            Content-width of current column area during layout
        </member>
        <member name="M:Telerik.Apoc.Fo.Flow.Flow.GetContentWidth">
            Return the content width of this flow (really of the region
            in which it is flowing).
        </member>
        <member name="M:Telerik.Apoc.Fo.Flow.InstreamForeignObject.GetMaker">
             returns the maker for this object.
            
             @return the maker for SVG objects
        </member>
        <member name="M:Telerik.Apoc.Fo.Flow.InstreamForeignObject.#ctor(Telerik.Apoc.Fo.FObj,Telerik.Apoc.Fo.PropertyList)">
             constructs an instream-foreign-object object (called by Maker).
            
             @param parent the parent formatting object
             @param propertyList the explicit properties of this object
        </member>
        <member name="M:Telerik.Apoc.Fo.Flow.InstreamForeignObject.Layout(Telerik.Apoc.Layout.Area)">
             layout this formatting object.
            
             @param area the area to layout the object into
            
             @return the status of the layout
        </member>
        <member name="T:Telerik.Apoc.Fo.Flow.InstreamForeignObject.Maker">
            inner class for making SVG objects.
        </member>
        <member name="M:Telerik.Apoc.Fo.Flow.InstreamForeignObject.Maker.Make(Telerik.Apoc.Fo.FObj,Telerik.Apoc.Fo.PropertyList)">
             make an SVG object.
            
             @param parent the parent formatting object
             @param propertyList the explicit properties of this object
            
             @return the SVG object
        </member>
        <member name="T:Telerik.Apoc.Fo.Flow.Leader">
            Implements fo:leader; main property of leader leader-pattern.
            The following patterns are treated: rule, space, dots.
            The pattern use-content is ignored, i.e. it still must be implemented.
        </member>
        <member name="M:Telerik.Apoc.Fo.Flow.Leader.AddLeader(Telerik.Apoc.Layout.BlockArea,Telerik.Apoc.Layout.FontState,System.Single,System.Single,System.Single,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             adds a leader to current line area of containing block area
             the actual leader area is created in the line area
            
             @return int +1 for success and -1 for none
        </member>
        <member name="M:Telerik.Apoc.Fo.Flow.ListItem.GetContentWidth">
            Return the content width of the boxes generated by this FO.
        </member>
        <member name="M:Telerik.Apoc.Fo.Flow.Marker.releaseRegistryArea">
            <summary>
                The page the marker was registered is put into the renderer 
                queue. The marker is transferred to it's own marker list,
                release the area for GC. We also know now whether the area is
                first/last.
            </summary>
        </member>
        <member name="M:Telerik.Apoc.Fo.Flow.Marker.resetMarker">
            <summary>
                This has actually nothing to do with resseting this marker,
                but the 'marker' from FONode, marking layout status.
                Called in case layout is to be rolled back. Unregister this
                marker from the page, it isn't laid aout anyway.
            </summary>
        </member>
        <member name="M:Telerik.Apoc.Fo.Flow.Marker.resetMarkerContent">
            <summary>
                More hackery: reset layout status marker. Called before the
                content is laid out from RetrieveMarker.
            </summary>
        </member>
        <member name="T:Telerik.Apoc.Fo.Flow.PageNumberCitation">
             6.6.11 fo:page-number-citation
            
             Common Usage:
             The fo:page-number-citation is used to reference the page-number for the page containing the first normal area returned by
             the cited formatting object.
            
             NOTE:
             It may be used to provide the page-numbers in the table of contents, cross-references, and index entries.
            
             Areas:
             The fo:page-number-citation formatting object generates and returns a single normal inline-area.
             Constraints:
            
             The cited page-number is the number of the page containing, as a descendant, the first normal area returned by the
             formatting object with an id trait matching the ref-id trait of the fo:page-number-citation (the referenced formatting
             object).
            
             The cited page-number string is obtained by converting the cited page-number in accordance with the number to string
             conversion properties specified on the ancestor fo:page-sequence of the referenced formatting object.
            
             The child areas of the generated inline-area are the same as the result of formatting a result-tree fragment consisting of
             fo:character flow objects; one for each character in the cited page-number string and with only the "character" property
             specified.
            
             Contents:
            
             EMPTY
            
             The following properties apply to this formatting object:
            
             [7.3 Common Accessibility Properties]
             [7.5 Common Aural Properties]
             [7.6 Common Border, Padding, and Background Properties]
             [7.7 Common Font Properties]
             [7.10 Common Margin Properties-Inline]
             [7.11.1 "alignment-adjust"]
             [7.11.2 "baseline-identifier"]
             [7.11.3 "baseline-shift"]
             [7.11.5 "dominant-baseline"]
             [7.36.2 "id"]
             [7.17.4 "keep-with-next"]
             [7.17.5 "keep-with-previous"]
             [7.14.2 "letter-spacing"]
             [7.13.4 "line-height"]
             [7.13.5 "line-height-shift-adjustment"]
             [7.36.5 "ref-id"]
             [7.18.4 "relative-position"]
             [7.36.6 "score-spaces"]
             [7.14.4 "text-decoration"]
             [7.14.5 "text-shadow"]
             [7.14.6 "text-transform"]
             [7.14.8 "word-spacing"]
        </member>
        <member name="M:Telerik.Apoc.Fo.Flow.RowSpanMgr.HasUnfinishedSpans">
            Return true if any column has an unfinished vertical span.
        </member>
        <member name="M:Telerik.Apoc.Fo.Flow.RowSpanMgr.FinishRow(System.Int32)">
            Done with a row.
            Any spans with only one row left are done
            This means that we can now set the total height for this cell box
            Loop over all cells with spans and find number of rows remaining
            if rows remaining  = 1, set the height on the cell area and
            then remove the cell from the list of spanned cells. For other
            spans, add the rowHeight to the spanHeight.
        </member>
        <member name="M:Telerik.Apoc.Fo.Flow.RowSpanMgr.GetRemainingHeight(System.Int32)">
            If the cell in this column is in the last row of its vertical
            span, return the height left. If it's not in the last row, or if
            the content height &lt;= the content height of the previous rows
            of the span, return 0.
        </member>
        <member name="M:Telerik.Apoc.Fo.Flow.RowSpanMgr.SetIgnoreKeeps(System.Boolean)">
            helper method to prevent infinite loops if
            keeps or spans are not fitting on a page
            @param <code>true</code> if keeps and spans should be ignored
        </member>
        <member name="M:Telerik.Apoc.Fo.Flow.RowSpanMgr.IgnoreKeeps">
            helper method (i.e. hack ;-) to prevent infinite loops if
            keeps or spans are not fitting on a page
            @return true if keeps or spans should be ignored
        </member>
        <member name="M:Telerik.Apoc.Fo.Flow.RowSpanMgr.SpanInfo.heightRemaining">
            Return the height remaining in the span.
        </member>
        <member name="F:Telerik.Apoc.Fo.Flow.Table.optIPD">
            Optimum inline-progression-dimension 
        </member>
        <member name="F:Telerik.Apoc.Fo.Flow.Table.minIPD">
            Minimum inline-progression-dimension 
        </member>
        <member name="F:Telerik.Apoc.Fo.Flow.Table.maxIPD">
            Maximum inline-progression-dimension 
        </member>
        <member name="M:Telerik.Apoc.Fo.Flow.Table.GetContentWidth">
            Return the content width of the boxes generated by this table FO.
        </member>
        <member name="M:Telerik.Apoc.Fo.Flow.Table.SetIPD(System.Boolean,System.Int32)">
            Initialize table inline-progression-properties values
        </member>
        <member name="F:Telerik.Apoc.Fo.Flow.TableCell.startOffset">
            Offset of content rectangle in inline-progression-direction,
            relative to table.
        </member>
        <member name="F:Telerik.Apoc.Fo.Flow.TableCell.width">
            Dimension of allocation rectangle in inline-progression-direction,
            determined by the width of the column(s) occupied by the cell
        </member>
        <member name="F:Telerik.Apoc.Fo.Flow.TableCell.beforeOffset">
            Offset of content rectangle, in block-progression-direction,
            relative to the row.
        </member>
        <member name="F:Telerik.Apoc.Fo.Flow.TableCell.startAdjust">
            Offset of content rectangle, in inline-progression-direction,
            relative to the column start edge.
        </member>
        <member name="F:Telerik.Apoc.Fo.Flow.TableCell.widthAdjust">
            Adjust to theoretical column width to obtain content width
            relative to the column start edge.
        </member>
        <member name="F:Telerik.Apoc.Fo.Flow.TableCell.minCellHeight">
            Minimum ontent height of cell.
        </member>
        <member name="F:Telerik.Apoc.Fo.Flow.TableCell.bDone">
            Set to true if all content completely laid out.
        </member>
        <member name="F:Telerik.Apoc.Fo.Flow.TableCell.m_borderSeparation">
            Border separation value in the block-progression dimension.
            Used in calculating cells height.
        </member>
        <member name="M:Telerik.Apoc.Fo.Flow.TableCell.GetHeight">
            Return the allocation height of the cell area.
            Note: called by TableRow.
            We adjust the actual allocation height of the area by the value
            of border separation (for separate borders) or border height
            adjustment for collapse style (because current scheme makes cell
            overestimate the allocation height).
        </member>
        <member name="M:Telerik.Apoc.Fo.Flow.TableCell.SetRowHeight(System.Int32)">
            Set the final size of cell content rectangles to the actual row height
            and to vertically align the actual content within the cell rectangle.
            @param h Height of this row in the grid  which is based on
            the allocation height of all the cells in the row, including any
            border separation values.
        </member>
        <member name="M:Telerik.Apoc.Fo.Flow.TableCell.CalcBorders(Telerik.Apoc.Layout.BorderAndPadding)">
            Calculate cell border and padding, including offset of content
            rectangle from the theoretical grid position.
        </member>
        <member name="M:Telerik.Apoc.Fo.Flow.TableColumn.SetColumnWidth(System.Int32)">
            Set the column width value in base units which overrides the
            value from the column-width Property.
        </member>
        <member name="M:Telerik.Apoc.Fo.Flow.TableRow.SetRowSpanMgr(Telerik.Apoc.Fo.Flow.RowSpanMgr)">
            Called by parent FO to initialize information about
            cells started in previous rows which span into this row.
            The layout operation modifies rowSpanMgr
        </member>
        <member name="M:Telerik.Apoc.Fo.Flow.TableRow.InitCellArray">
            Before starting layout for the first time, initialize information
            about spanning rows, empty cells and spanning columns.
        </member>
        <member name="M:Telerik.Apoc.Fo.Flow.TableRow.CellArray.GetNextFreeCell(System.Int32)">
            Return column which doesn't already contain a span or a cell
            If past the end or no free cells after colNum, return -1
            Otherwise return value >= input value.
        </member>
        <member name="M:Telerik.Apoc.Fo.Flow.TableRow.CellArray.GetCellType(System.Int32)">
            Return type of cell in colNum (1 based)
        </member>
        <member name="M:Telerik.Apoc.Fo.Flow.TableRow.CellArray.GetCell(System.Int32)">
            Return cell in colNum (1 based)
        </member>
        <member name="M:Telerik.Apoc.Fo.Flow.TableRow.CellArray.StoreCell(Telerik.Apoc.Fo.Flow.TableCell,System.Int32,System.Int32)">
            Store cell starting at cellColNum (1 based) and spanning numCols
            If any of the columns is already occupied, return false, else true
        </member>
        <member name="T:Telerik.Apoc.Fo.Flow.Wrapper">
             Implementation for fo:wrapper formatting object.
             The wrapper object serves as
             a property holder for it's children objects.
            
             Content: (#PCDATA|%inline;|%block;)*
             Properties: id
        </member>
        <member name="M:Telerik.Apoc.Fo.Pagination.ConditionalPageMasterReference.GetMasterName">
            Returns the "master-reference" attribute of this page master reference
        </member>
        <member name="M:Telerik.Apoc.Fo.Pagination.LayoutMasterSet.regionNameExists(System.String)">
            Checks whether or not a region name exists in this master set
            @returns true when the region name specified has a region in this LayoutMasterSet
        </member>
        <member name="T:Telerik.Apoc.Fo.Pagination.PageMasterReference">
            Base PageMasterReference class. Provides implementation for handling the
            master-reference attribute and containment within a PageSequenceMaster
        </member>
        <member name="T:Telerik.Apoc.Fo.Pagination.SubSequenceSpecifier">
            Classes that implement this interface can be added to a PageSequenceMaster,
            and are capable of looking up an appropriate PageMaster.
        </member>
        <member name="M:Telerik.Apoc.Fo.Pagination.SubSequenceSpecifier.Reset">
            Called before a new page sequence is rendered so subsequences can reset
            any state they keep during the formatting process.
        </member>
        <member name="M:Telerik.Apoc.Fo.Pagination.PageMasterReference.GetElementName">
             Gets the formating object name for this object. Subclasses must provide this.
            
             @return the element name of this reference. e.g. fo:repeatable-page-master-reference
        </member>
        <member name="M:Telerik.Apoc.Fo.Pagination.PageMasterReference.validateParent(Telerik.Apoc.Fo.FObj)">
            Checks that the parent is the right element. The default implementation
            checks for fo:page-sequence-master
        </member>
        <member name="P:Telerik.Apoc.Fo.Pagination.PageMasterReference.MasterName">
            Returns the "master-reference" attribute of this page master reference
        </member>
        <member name="T:Telerik.Apoc.Fo.Pagination.PageNumberGenerator">
            This class uses the 'format', 'groupingSeparator', 'groupingSize',
            and 'letterValue' properties on fo:page-sequence to return a string
            corresponding to the supplied integer page number.
        </member>
        <member name="T:Telerik.Apoc.Fo.Pagination.PageSequence">
            This provides pagination of flows onto pages. Much of the logic for paginating
            flows is contained in this class. The main entry point is the format method.
        </member>
        <member name="F:Telerik.Apoc.Fo.Pagination.PageSequence.root">
            The parent root object
        </member>
        <member name="F:Telerik.Apoc.Fo.Pagination.PageSequence.layoutMasterSet">
            the set of layout masters (provided by the root object)
        </member>
        <member name="F:Telerik.Apoc.Fo.Pagination.PageSequence._flowMap">
            Map of flows to their flow name (flow-name, Flow)
        </member>
        <member name="F:Telerik.Apoc.Fo.Pagination.PageSequence.masterName">
            the "master-reference" attribute,
            which specifies the name of the page-sequence-master or
            page-master to be used to create pages in the sequence
        </member>
        <member name="F:Telerik.Apoc.Fo.Pagination.PageSequence.pageNumberType">
            specifies page numbering type (auto|auto-even|auto-odd|explicit)
        </member>
        <member name="F:Telerik.Apoc.Fo.Pagination.PageSequence.thisIsFirstPage">
            used to determine whether to calculate auto, auto-even, auto-odd
        </member>
        <member name="F:Telerik.Apoc.Fo.Pagination.PageSequence.currentSubsequence">
            the current subsequence while formatting a given page sequence
        </member>
        <member name="F:Telerik.Apoc.Fo.Pagination.PageSequence.currentSubsequenceNumber">
            the current index in the subsequence list
        </member>
        <member name="F:Telerik.Apoc.Fo.Pagination.PageSequence.currentPageMasterName">
            the name of the current page master
        </member>
        <member name="M:Telerik.Apoc.Fo.Pagination.PageSequence.Format(Telerik.Apoc.Layout.AreaTree)">
            Runs the formatting of this page sequence into the given area tree
        </member>
        <member name="M:Telerik.Apoc.Fo.Pagination.PageSequence.MakePage(Telerik.Apoc.Layout.AreaTree,System.Int32,System.Boolean,System.Boolean)">
            Creates a new page area for the given parameters
            @param areaTree the area tree the page should be contained in
            @param firstAvailPageNumber the page number for this page
            @param isFirstPage true when this is the first page in the sequence
            @param isEmptyPage true if this page will be empty (e.g. forced even or odd break)
            @return a Page layout object based on the page master selected from the params
        </member>
        <member name="M:Telerik.Apoc.Fo.Pagination.PageSequence.FormatStaticContent(Telerik.Apoc.Layout.AreaTree)">
            Formats the static content of the current page
        </member>
        <member name="M:Telerik.Apoc.Fo.Pagination.PageSequence.GetNextSubsequence(Telerik.Apoc.Fo.Pagination.PageSequenceMaster)">
            Returns the next SubSequenceSpecifier for the given page sequence master. The result
            is bassed on the current state of this page sequence.
        </member>
        <member name="M:Telerik.Apoc.Fo.Pagination.PageSequence.GetNextSimplePageMaster(Telerik.Apoc.Fo.Pagination.PageSequenceMaster,System.Int32,System.Boolean,System.Boolean)">
            Returns the next simple page master for the given sequence master, page number and
            other state information
        </member>
        <member name="M:Telerik.Apoc.Fo.Pagination.PageSequence.FlowsAreIncomplete">
            Returns true when there is more flow elements left to lay out.
        </member>
        <member name="M:Telerik.Apoc.Fo.Pagination.PageSequence.GetCurrentFlow(System.String)">
            Returns the flow that maps to the given region class for the current
            page master.
        </member>
        <member name="T:Telerik.Apoc.Fo.Pagination.Region">
            This is an abstract base class for pagination regions
        </member>
        <member name="M:Telerik.Apoc.Fo.Pagination.Region.MakeRegionArea(System.Int32,System.Int32,System.Int32,System.Int32)">
            Creates a Region layout object for this pagination Region.
        </member>
        <member name="M:Telerik.Apoc.Fo.Pagination.Region.GetDefaultRegionName">
            Returns the default region name (xsl-region-before, xsl-region-start,
            etc.)
        </member>
        <member name="M:Telerik.Apoc.Fo.Pagination.Region.GetElementName">
            Returns the element name ("fo:region-body", "fo:region-start",
            etc.)
        </member>
        <member name="M:Telerik.Apoc.Fo.Pagination.Region.getRegionName">
            Returns the name of this region
        </member>
        <member name="M:Telerik.Apoc.Fo.Pagination.Region.isReserved(System.String)">
             Checks to see if a given region name is one of the reserved names
            
             @param name a region name to check
             @return true if the name parameter is a reserved region name
        </member>
        <member name="F:Telerik.Apoc.Fo.Pagination.RepeatablePageMasterAlternatives.maximumRepeats">
            Max times this page master can be repeated.
            INFINITE is used for the unbounded case
        </member>
        <member name="T:Telerik.Apoc.Fo.Pagination.Root">
            The fo:root formatting object. Contains page masters, root extensions,
            page-sequences.
        </member>
        <member name="F:Telerik.Apoc.Fo.Pagination.Root.runningPageNumberCounter">
            keeps count of page number from over PageSequence instances
        </member>
        <member name="M:Telerik.Apoc.Fo.Pagination.Root.getSucceedingPageSequence(Telerik.Apoc.Fo.Pagination.PageSequence)">
            Some properties, such as 'force-page-count', require a
            page-sequence to know about some properties of the next.
            @returns succeeding PageSequence; null if none
        </member>
        <member name="F:Telerik.Apoc.Fo.Pagination.SimplePageMaster._regions">
            Page regions (regionClass, Region)
        </member>
        <member name="M:Telerik.Apoc.Fo.EnumProperty.Maker.CheckEnumValues(System.String)">
            Called by subclass if no match found.
        </member>
        <member name="F:Telerik.Apoc.Fo.LengthProperty.length">
            This object may be also be a subclass of Length, such
            as PercentLength, TableColLength.
        </member>
        <member name="M:Telerik.Apoc.Fo.Properties.BlockProgressionDimensionMaker.ConvertProperty(Telerik.Apoc.Fo.Property,Telerik.Apoc.Fo.PropertyList,Telerik.Apoc.Fo.FObj)">
            Set the appropriate components when the "base" property is set. 
        </member>
        <member name="M:Telerik.Apoc.Fo.Properties.BlockProgressionDimensionMaker.SP_MinimumMaker.GetPercentBase(Telerik.Apoc.Fo.FObj,Telerik.Apoc.Fo.PropertyList)">
            Return object used to calculate base Length
            for percent specifications.
        </member>
        <member name="M:Telerik.Apoc.Fo.Properties.BlockProgressionDimensionMaker.SP_OptimumMaker.GetPercentBase(Telerik.Apoc.Fo.FObj,Telerik.Apoc.Fo.PropertyList)">
            Return object used to calculate base Length
            for percent specifications.
        </member>
        <member name="M:Telerik.Apoc.Fo.Properties.BlockProgressionDimensionMaker.SP_MaximumMaker.GetPercentBase(Telerik.Apoc.Fo.FObj,Telerik.Apoc.Fo.PropertyList)">
            Return object used to calculate base Length
            for percent specifications.
        </member>
        <member name="M:Telerik.Apoc.Fo.Properties.GenericCondBorderWidth.ConvertProperty(Telerik.Apoc.Fo.Property,Telerik.Apoc.Fo.PropertyList,Telerik.Apoc.Fo.FObj)">
            Set the appropriate components when the "base" property is set. 
        </member>
        <member name="M:Telerik.Apoc.Fo.Properties.BorderSeparationMaker.ConvertProperty(Telerik.Apoc.Fo.Property,Telerik.Apoc.Fo.PropertyList,Telerik.Apoc.Fo.FObj)">
            Set the appropriate components when the "base" property is set. 
        </member>
        <member name="M:Telerik.Apoc.Fo.NumberProperty.GetObject">
            public Double getDouble() {
            return new Double(this.number.doubleValue());
            }
            public Integer getInteger() {
            return new Integer(this.number.intValue());
            }
        </member>
        <member name="M:Telerik.Apoc.Fo.Properties.FontSizeMaker.GetPercentBase(Telerik.Apoc.Fo.FObj,Telerik.Apoc.Fo.PropertyList)">
            Return object used to calculate base Length
            for percent specifications.
        </member>
        <member name="M:Telerik.Apoc.Fo.Properties.GenericCondLength.ConvertProperty(Telerik.Apoc.Fo.Property,Telerik.Apoc.Fo.PropertyList,Telerik.Apoc.Fo.FObj)">
            Set the appropriate components when the "base" property is set. 
        </member>
        <member name="M:Telerik.Apoc.Fo.Properties.GenericKeep.ConvertProperty(Telerik.Apoc.Fo.Property,Telerik.Apoc.Fo.PropertyList,Telerik.Apoc.Fo.FObj)">
            Set the appropriate components when the "base" property is set. 
        </member>
        <member name="M:Telerik.Apoc.Fo.Properties.GenericSpace.ConvertProperty(Telerik.Apoc.Fo.Property,Telerik.Apoc.Fo.PropertyList,Telerik.Apoc.Fo.FObj)">
            Set the appropriate components when the "base" property is set. 
        </member>
        <member name="M:Telerik.Apoc.Fo.Properties.InlineProgressionDimensionMaker.ConvertProperty(Telerik.Apoc.Fo.Property,Telerik.Apoc.Fo.PropertyList,Telerik.Apoc.Fo.FObj)">
            Set the appropriate components when the "base" property is set. 
        </member>
        <member name="M:Telerik.Apoc.Fo.Properties.InlineProgressionDimensionMaker.SP_MinimumMaker.GetPercentBase(Telerik.Apoc.Fo.FObj,Telerik.Apoc.Fo.PropertyList)">
            Return object used to calculate base Length
            for percent specifications.
        </member>
        <member name="M:Telerik.Apoc.Fo.Properties.InlineProgressionDimensionMaker.SP_OptimumMaker.GetPercentBase(Telerik.Apoc.Fo.FObj,Telerik.Apoc.Fo.PropertyList)">
            Return object used to calculate base Length
            for percent specifications.
        </member>
        <member name="M:Telerik.Apoc.Fo.Properties.InlineProgressionDimensionMaker.SP_MaximumMaker.GetPercentBase(Telerik.Apoc.Fo.FObj,Telerik.Apoc.Fo.PropertyList)">
            Return object used to calculate base Length
            for percent specifications.
        </member>
        <member name="M:Telerik.Apoc.Fo.Properties.LeaderLengthMaker.ConvertProperty(Telerik.Apoc.Fo.Property,Telerik.Apoc.Fo.PropertyList,Telerik.Apoc.Fo.FObj)">
            Set the appropriate components when the "base" property is set. 
        </member>
        <member name="M:Telerik.Apoc.Fo.Properties.LeaderLengthMaker.GetPercentBase(Telerik.Apoc.Fo.FObj,Telerik.Apoc.Fo.PropertyList)">
            Return object used to calculate base Length
            for percent specifications.
        </member>
        <member name="M:Telerik.Apoc.Fo.Properties.LeaderLengthMaker.SP_MinimumMaker.GetPercentBase(Telerik.Apoc.Fo.FObj,Telerik.Apoc.Fo.PropertyList)">
            Return object used to calculate base Length
            for percent specifications.
        </member>
        <member name="M:Telerik.Apoc.Fo.Properties.LeaderLengthMaker.SP_OptimumMaker.GetPercentBase(Telerik.Apoc.Fo.FObj,Telerik.Apoc.Fo.PropertyList)">
            Return object used to calculate base Length
            for percent specifications.
        </member>
        <member name="M:Telerik.Apoc.Fo.Properties.LeaderLengthMaker.SP_MaximumMaker.GetPercentBase(Telerik.Apoc.Fo.FObj,Telerik.Apoc.Fo.PropertyList)">
            Return object used to calculate base Length
            for percent specifications.
        </member>
        <member name="M:Telerik.Apoc.Fo.Properties.LeaderPatternWidthMaker.GetPercentBase(Telerik.Apoc.Fo.FObj,Telerik.Apoc.Fo.PropertyList)">
            Return object used to calculate base Length
            for percent specifications.
        </member>
        <member name="M:Telerik.Apoc.Fo.Properties.LineHeightMaker.GetPercentBase(Telerik.Apoc.Fo.FObj,Telerik.Apoc.Fo.PropertyList)">
            Return object used to calculate base Length
            for percent specifications.
        </member>
        <member name="M:Telerik.Apoc.Fo.Properties.WidthMaker.GetPercentBase(Telerik.Apoc.Fo.FObj,Telerik.Apoc.Fo.PropertyList)">
            Return object used to calculate base Length
            for percent specifications.
        </member>
        <member name="T:Telerik.Apoc.Fo.ColorProfile">
            The fo:root formatting object. Contains page masters, root extensions,
            page-sequences.
        </member>
        <member name="T:Telerik.Apoc.Fo.FOTreeBuilder">
            <summary>
                Builds the formatting object tree.
            </summary>
        </member>
        <member name="F:Telerik.Apoc.Fo.FOTreeBuilder.fobjTable">
            <summary>
                Table mapping element names to the makers of objects
                representing formatting objects.
            </summary>
        </member>
        <member name="F:Telerik.Apoc.Fo.FOTreeBuilder.propertylistTable">
            <summary>
                Class that builds a property list for each formatting object.
            </summary>
        </member>
        <member name="F:Telerik.Apoc.Fo.FOTreeBuilder.currentFObj">
            <summary>
                Current formatting object being handled.
            </summary>
        </member>
        <member name="F:Telerik.Apoc.Fo.FOTreeBuilder.rootFObj">
            <summary>
                The root of the formatting object tree.
            </summary>
        </member>
        <member name="F:Telerik.Apoc.Fo.FOTreeBuilder.unknownFOs">
            <summary>
                Set of names of formatting objects encountered but unknown.
            </summary>
        </member>
        <member name="F:Telerik.Apoc.Fo.FOTreeBuilder.streamRenderer">
            <summary>
                The class that handles formatting and rendering to a stream.
            </summary>
        </member>
        <member name="M:Telerik.Apoc.Fo.FOTreeBuilder.SetStreamRenderer(Telerik.Apoc.StreamRenderer)">
            <summary>
                Sets the stream renderer that will be used as output.
            </summary>
        </member>
        <member name="M:Telerik.Apoc.Fo.FOTreeBuilder.AddElementMapping(System.String,System.Collections.Hashtable)">
            <summary>
                Add a mapping from element name to maker.
            </summary>
        </member>
        <member name="M:Telerik.Apoc.Fo.FOTreeBuilder.AddPropertyMapping(System.String,System.Collections.Hashtable)">
            <summary>
                Add a mapping from property name to maker.
            </summary>
        </member>
        <member name="M:Telerik.Apoc.Fo.PropertyList.GetExplicitOrShorthandProperty(System.String)">
            Return the value explicitly specified on this FO.
            @param propertyName The name of the property whose value is desired.
            It may be a compound name, such as space-before.optimum.
            @return The value if the property is explicitly set or set by
            a shorthand property, otherwise null.
        </member>
        <member name="M:Telerik.Apoc.Fo.PropertyList.GetExplicitProperty(System.String)">
            Return the value explicitly specified on this FO.
            @param propertyName The name of the property whose value is desired.
            It may be a compound name, such as space-before.optimum.
            @return The value if the property is explicitly set, otherwise null.
        </member>
        <member name="M:Telerik.Apoc.Fo.PropertyList.GetExplicitBaseProperty(System.String)">
            Return the value explicitly specified on this FO.
            @param propertyName The name of the base property whose value is desired.
            @return The value if the property is explicitly set, otherwise null.
        </member>
        <member name="M:Telerik.Apoc.Fo.PropertyList.GetInheritedProperty(System.String)">
            Return the value of this property inherited by this FO.
            Implements the inherited-property-value function.
            The property must be inheritable!
            @param propertyName The name of the property whose value is desired.
            @return The inherited value, otherwise null.
        </member>
        <member name="M:Telerik.Apoc.Fo.PropertyList.GetSpecifiedProperty(System.String)">
            Return the property on the current FlowObject if it is specified, or if a
            corresponding property is specified. If neither is specified, it returns null.
        </member>
        <member name="M:Telerik.Apoc.Fo.PropertyList.GetProperty(System.String)">
            Return the property on the current FlowObject. If it isn't set explicitly,
            this will try to compute it based on other properties, or if it is
            inheritable, to return the inherited value. If all else fails, it returns
            the default value.
        </member>
        <member name="M:Telerik.Apoc.Fo.PropertyList.GetProperty(System.String,System.Boolean,System.Boolean)">
            Return the property on the current FlowObject. Depending on the passed flags,
            this will try to compute it based on other properties, or if it is
            inheritable, to return the inherited value. If all else fails, it returns
            the default value.
        </member>
        <member name="M:Telerik.Apoc.Fo.PropertyList.GetNearestSpecifiedProperty(System.String)">
            Return the "nearest" specified value for the given property.
            Implements the from-nearest-specified-value function.
            @param propertyName The name of the property whose value is desired.
            @return The computed value if the property is explicitly set on some
            ancestor of the current FO, else the initial value.
        </member>
        <member name="M:Telerik.Apoc.Fo.PropertyList.GetFromParentProperty(System.String)">
            Return the value of this property on the parent of this FO.
            Implements the from-parent function.
            @param propertyName The name of the property whose value is desired.
            @return The computed value on the parent or the initial value if this
            FO is the root or is in a different namespace from its parent.
        </member>
        <member name="M:Telerik.Apoc.Fo.PropertyList.wmAbsToRel(System.Int32)">
            Given an absolute direction (top, bottom, left, right),
            return the corresponding writing model relative direction name
            for the flow object. Uses the stored writingMode.
        </member>
        <member name="M:Telerik.Apoc.Fo.PropertyList.wmRelToAbs(System.Int32)">
            Given a writing mode relative direction (start, end, before, after)
            return the corresponding absolute direction name
            for the flow object. Uses the stored writingMode.
        </member>
        <member name="M:Telerik.Apoc.Fo.PropertyList.SetWritingMode(System.Int32)">
            Set the writing mode traits for the FO with this property list.
        </member>
        <member name="F:Telerik.Apoc.Fo.PropertyListBuilder.FONTSIZEATTR">
            Name of font-size property attribute to set first.
        </member>
        <member name="M:Telerik.Apoc.Fo.PropertyListBuilder.MakeProperty(Telerik.Apoc.Fo.PropertyList,System.String)">
            <summary>
                This seems to be just a helper method that looks up a property maker and
                creates the property.
            </summary>
        </member>
        <member name="M:Telerik.Apoc.Fo.PropertyListBuilder.FindMaker(System.String)">
            <summary>
                Convenience function to return the Maker for a given property.
            </summary>
        </member>
        <member name="T:Telerik.Apoc.Fo.Status">
            classes representating the status of laying out a formatting object
        </member>
        <member name="T:Telerik.Apoc.Fo.Unknown">
            This represents an unknown element.
            For example with unsupported namespaces.
            This prevents any further problems arising from the unknown
            data.
        </member>
        <member name="M:Telerik.Apoc.Fo.UnknownXMLObj.GetMaker(System.String,System.String)">
             returns the maker for this object.
            
             @return the maker for an unknown xml object
        </member>
        <member name="M:Telerik.Apoc.Fo.UnknownXMLObj.#ctor(Telerik.Apoc.Fo.FObj,Telerik.Apoc.Fo.PropertyList,System.String,System.String)">
             constructs an unknown xml object (called by Maker).
            
             @param parent the parent formatting object
             @param propertyList the explicit properties of this object
        </member>
        <member name="T:Telerik.Apoc.Fo.UnknownXMLObj.Maker">
            inner class for making unknown xml objects.
        </member>
        <member name="M:Telerik.Apoc.Fo.UnknownXMLObj.Maker.Make(Telerik.Apoc.Fo.FObj,Telerik.Apoc.Fo.PropertyList)">
             make an unknown xml object.
            
             @param parent the parent formatting object
             @param propertyList the explicit properties of this object
            
             @return the unknown xml object
        </member>
        <member name="T:Telerik.Apoc.Image.ApocImage">
            <summary>
                A bitmap image that will be referenced by fo:external-graphic.
            </summary>
            <remarks>
                This class and the associated ColorSpace class are PDF specific ideally 
                will be moved to the PDF library project at some point in the future.  
                Internally, Apoc should handle images using the standard framework 
                Bitmap class.
            </remarks>
        </member>
        <member name="F:Telerik.Apoc.Image.ApocImage.filter">
            <summary>
                Filter that will be applied to image data
            </summary>
        </member>
        <member name="M:Telerik.Apoc.Image.ApocImage.#ctor(System.String,System.Byte[])">
            <summary>
                Constructs a new ApocImage using the supplied bitmap.
            </summary>
            <remarks>
                Does not hold a reference to the passed bitmap.  Instead the
                image data is extracted from <b>bitmap</b> on construction.
            </remarks>
            <param name="href">The location of <i>bitmap</i></param>
            <param name="imageData">The image data</param>
        </member>
        <member name="M:Telerik.Apoc.Image.ApocImage.ExtractImage(System.Drawing.Bitmap)">
            <summary>
                Extracts the raw data from the image into a byte array suitable
                for including in the PDF document.  The image is always extracted
                as a 24-bit RGB image, regardless of it's original colour space
                and colour depth.
            </summary>
            <param name="bitmap">The <see cref="T:System.Drawing.Bitmap"/> from which the data is extracted</param>
            <returns>A byte array containing the raw 24-bit RGB data</returns>
        </member>
        <member name="P:Telerik.Apoc.Image.ApocImage.Uri">
            <summary>
                Return the image URL.
            </summary>
            <returns>the image URL (as a string)</returns>
        </member>
        <member name="P:Telerik.Apoc.Image.ApocImage.Width">
            <summary>
                Return the image width. 
            </summary>
            <returns>the image width</returns>
        </member>
        <member name="P:Telerik.Apoc.Image.ApocImage.Height">
            <summary>
                Return the image height. 
            </summary>
            <returns>the image height</returns>
        </member>
        <member name="P:Telerik.Apoc.Image.ApocImage.BitsPerPixel">
            <summary>
                Return the number of bits per pixel. 
            </summary>
            <returns>number of bits per pixel</returns>
        </member>
        <member name="P:Telerik.Apoc.Image.ApocImage.BitmapsSize">
            <summary>
                Return the image data size
            </summary>
            <returns>The image data size</returns>
        </member>
        <member name="P:Telerik.Apoc.Image.ApocImage.Bitmaps">
            <summary>
                Return the image data (uncompressed). 
            </summary>
            <returns>the image data</returns>
        </member>
        <member name="P:Telerik.Apoc.Image.ApocImage.ColorSpace">
            <summary>
                Return the image color space. 
            </summary>
            <returns>the image color space (Apoc.Datatypes.ColorSpace)</returns>
        </member>
        <member name="P:Telerik.Apoc.Image.ApocImage.Filter">
            <summary>
                Returns the <see cref="T:Telerik.Pdf.Filter.IFilter"/> implementation 
                that should be applied to the bitmap data.
            </summary>
        </member>
        <member name="T:Telerik.Apoc.Image.ApocImageFactory">
            <summary>
                Creates ApocImage instances.
            </summary>
        </member>
        <member name="M:Telerik.Apoc.Image.ApocImageFactory.Make(System.String)">
            <summary>
                Creates a ApocImage from the supplied resource locator.  The 
                ApocImageFactory does cache images, therefore this method may 
                return a reference to an existing ApocImage
            </summary>
            <param name="href">A Uniform Resource Identifier</param>
            <returns>A reference to a  ApocImage</returns>
            <exception cref="T:Telerik.Apoc.Image.ApocImageException"></exception>
        </member>
        <member name="F:Telerik.Apoc.Layout.Area.currentHeight">
            Total height of content of this area.
        </member>
        <member name="M:Telerik.Apoc.Layout.Area.#ctor(Telerik.Apoc.Layout.FontState,System.Int32,System.Int32)">
             Creates a new <code>Area</code> instance.
            
             @param fontState a <code>FontState</code> value
             @param allocationWidth the inline-progression dimension of the content
             rectangle of the Area
             @param maxHeight the maximum block-progression dimension available
             for this Area (its allocation rectangle)
        </member>
        <member name="M:Telerik.Apoc.Layout.Area.setAllocationWidth(System.Int32)">
            Set the allocation width.
            @param w The new allocation width.
            This sets content width to the same value.
            Currently only called during layout of Table to set the width
            to the total width of all the columns. Note that this assumes the
            column widths are explicitly specified.
        </member>
        <member name="M:Telerik.Apoc.Layout.Area.hasNonSpaceChildren">
            <summary>
                Tell whether this area contains any children which are not 
                DisplaySpace. This is used in determining whether to honour keeps.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Apoc.Layout.Area.getContentHeight">
             Returns content height of the area.
            
             @return Content height in millipoints
        </member>
        <member name="M:Telerik.Apoc.Layout.Area.GetHeight">
             Returns allocation height of this area.
             The allocation height is the sum of the content height plus border
             and padding in the vertical direction.
            
             @return allocation height in millipoints
        </member>
        <member name="M:Telerik.Apoc.Layout.Area.getAbsoluteHeight">
            <summary>
                Return absolute Y position of the current bottom of this area,
                not counting any bottom padding or border.
            </summary>
            <remarks>
                This is used to set positions for link hotspots.
                In fact, the position is not really absolute, but is relative
                to the Ypos of the column-level AreaContainer, even when the
                area is in a page header or footer!
            </remarks>
        </member>
        <member name="M:Telerik.Apoc.Layout.Area.setAbsoluteHeight(System.Int32)">
            <summary>
                Set "absolute" Y position of the top of this area.
            </summary>
            <remarks>
                In fact, the position is not really absolute, but relative to 
                the Ypos of the column-level AreaContainer, even when the area 
                is in a page header or footer! 
                It is set from the value of getAbsoluteHeight() on the parent 
                area, just before adding this area. 
            </remarks>
        </member>
        <member name="M:Telerik.Apoc.Layout.Area.spaceLeft">
            Return space remaining in the vertical direction (height).
            This returns maximum available space - current content height
            Note: content height should be based on allocation height of content!
            @return space remaining in base units (millipoints)
        </member>
        <member name="M:Telerik.Apoc.Layout.Area.SetHeight(System.Int32)">
             Set the content height to the passed value if that value is
             larger than current content height. If the new content height
             is greater than the maximum available height, set the content height
             to the max. available (!!!)
            
             @param height allocation height of content in millipoints
        </member>
        <member name="F:Telerik.Apoc.Layout.Inline.InlineArea.xOffset">
            amount of space added since the original layout - needed by links
        </member>
        <member name="T:Telerik.Apoc.Image.JpegParser">
            <summary>
                Parses the contents of a JPEG image header to infer the colour 
                space and bits per pixel.
            </summary>
        </member>
        <member name="F:Telerik.Apoc.Image.JpegParser.ms">
            <summary>
                JPEG image data
            </summary>
        </member>
        <member name="F:Telerik.Apoc.Image.JpegParser.headerInfo">
            <summary>
                Contains number of bitplanes, color space and optional ICC Profile
            </summary>
        </member>
        <member name="F:Telerik.Apoc.Image.JpegParser.iccProfileData">
            <summary>
                Raw ICC Profile
            </summary>
        </member>
        <member name="M:Telerik.Apoc.Image.JpegParser.#ctor(System.Byte[])">
            <summary>
                Class constructor.
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:Telerik.Apoc.Image.JpegParser.ReadHeader">
            <summary>
                
            </summary>
        </member>
        <member name="M:Telerik.Apoc.Image.JpegParser.ReadInt">
            <summary>
                Reads a 16-bit integer from the underlying stream
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Apoc.Image.JpegParser.ReadByte">
            <summary>
                Reads a 32-bit integer from the underlying stream
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Apoc.Image.JpegParser.ReadString(System.Int32)">
            <summary>
                Reads the specified number of bytes from theunderlying stream 
                and converts them to a string using the ASCII encoding.
            </summary>
            <param name="numBytes"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Apoc.Image.JpegParser.ReadFirstMarker">
            <summary>
                Reads the initial marker which should be SOI.
            </summary>
            <remarks>
                After invoking this method the stream will point to the location 
                immediately after the fiorst marker.
            </remarks>
            <returns></returns>
        </member>
        <member name="M:Telerik.Apoc.Image.JpegParser.ReadNextMarker">
            <summary>
                Reads the next JPEG marker and returns its marker code.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Apoc.Image.JpegParser.SkipVariable">
            <summary>
                Skips over the parameters for any marker we don't want to process.
            </summary>
        </member>
        <member name="T:Telerik.Apoc.Image.UriSpecificationParser">
            <summary>
                Parses a &lt;uri-specification&gt; as defined by 
                section 5.11 of the XSL specification.
            </summary>
            <remarks>
                This class may be better expressed as a datatype residing in 
                Telerik.Apoc.DataTypes.
            </remarks>
        </member>
        <member name="M:Telerik.Apoc.Layout.Inline.ForeignObjectArea.getContentWidth">
            This is NOT the content width of the instream-foreign-object.
            This is the content width for a Box.
        </member>
        <member name="M:Telerik.Apoc.Layout.Inline.ForeignObjectArea.GetHeight">
            This is NOT the content height of the instream-foreign-object.
            This is the content height for a Box.
        </member>
        <member name="M:Telerik.Apoc.Layout.Inline.InlineSpace.setUnderlined(System.Boolean)">
            @param ul true if text should be underlined
        </member>
        <member name="M:Telerik.Apoc.Layout.Inline.InlineSpace.setEatable(System.Boolean)">
            And eatable InlineSpace is discarded if it occurs
            as the first pending element in a LineArea
        </member>
        <member name="T:Telerik.Apoc.Layout.AbsolutePositionProps">
            Store all hyphenation related properties on an FO.
            Public "structure" allows direct member access.
        </member>
        <member name="T:Telerik.Apoc.Layout.AccessibilityProps">
            Store all hyphenation related properties on an FO.
            Public "structure" allows direct member access.
        </member>
        <member name="F:Telerik.Apoc.Layout.AreaTree.fontInfo">
            object containing information on available fonts, including
            metrics
        </member>
        <member name="F:Telerik.Apoc.Layout.AreaTree.rootExtensions">
            List of root extension objects
        </member>
        <member name="M:Telerik.Apoc.Layout.AreaTree.GetDocumentMarkers">
            <summary>
                Auxillary function for retrieving markers.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Apoc.Layout.AreaTree.GetCurrentPageSequence">
            <summary>
                Auxillary function for retrieving markers.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Apoc.Layout.AreaTree.GetCurrentPageSequenceMarkers">
            <summary>
                Auxillary function for retrieving markers.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Telerik.Apoc.Layout.AuralProps">
            Store all hyphenation related properties on an FO.
            Public "structure" allows direct member access.
        </member>
        <member name="T:Telerik.Apoc.Layout.BlockArea">
             This class represents a Block Area.
             A block area is made up of a sequence of Line Areas.
            
             This class is used to organise the sequence of line areas as
             inline areas are added to this block it creates and ands line areas
             to hold the inline areas.
             This uses the line-height and line-stacking-strategy to work
             out how to stack the lines.
        </member>
        <member name="M:Telerik.Apoc.Layout.BlockArea.addLineArea(Telerik.Apoc.Layout.LineArea)">
             Add a Line Area to this block area.
             Used internally to add a completed line area to this block area
             when either a new line area is created or this block area is
             completed.
            
             @param la the LineArea to add
        </member>
        <member name="M:Telerik.Apoc.Layout.BlockArea.getCurrentLineArea">
             Get the current line area in this block area.
             This is used to get the current line area for adding
             inline objects to.
             This will return null if there is not enough room left
             in the block area to accomodate the line area.
            
             @return the line area to be used to add inlie objects
        </member>
        <member name="M:Telerik.Apoc.Layout.BlockArea.createNextLineArea">
             Create a new line area to add inline objects.
             This should be called after getting the current line area
             and discovering that the inline object will not fit inside the current
             line. This method will create a new line area to place the inline
             object into.
             This will return null if the new line cannot fit into the block area.
            
             @return the new current line area, which will be empty.
        </member>
        <member name="M:Telerik.Apoc.Layout.BlockArea.end">
            Notify this block that the area has completed layout.
            Indicates the the block has been fully laid out, this will
            add (if any) the current line area.
        </member>
        <member name="M:Telerik.Apoc.Layout.BlockArea.spaceLeft">
            Return the maximum space remaining for this area's content in
            the block-progression-dimension.
            Remove top and bottom padding and spacing since these reduce
            available space for content and they are not yet accounted for
            in the positioning of the object.
        </member>
        <member name="M:Telerik.Apoc.Layout.BodyAreaContainer.getNextArea(Telerik.Apoc.Fo.FObj)">
            Depending on the column-count of the next FO, determine whether
            a new span area needs to be constructed or not, and return the
            appropriate ColumnArea.
            The next cut of this method should also inspect the FO to see
            whether the area to be returned ought not to be the footnote
            or before-float reference area.
            @param fo The next formatting object
            @returns the next column area (possibly the current one)
        </member>
        <member name="M:Telerik.Apoc.Layout.BodyAreaContainer.addSpanArea(System.Int32)">
            Add a new span area with specified number of column areas.
            @param numColumns The number of column areas
            @returns AreaContainer The next column area
        </member>
        <member name="M:Telerik.Apoc.Layout.BodyAreaContainer.isBalancingRequired(Telerik.Apoc.Fo.FObj)">
            This almost does what getNewArea() does, without actually
            returning an area. These 2 methods can be reworked.
            @param fo The next formatting object
            @returns bool True if we need to balance.
        </member>
        <member name="M:Telerik.Apoc.Layout.BodyAreaContainer.resetSpanArea">
            This is where the balancing algorithm lives, or gets called.
            Right now it's primitive: get the total content height in all
            columns, divide by the column count, and add a heuristic
            safety factor.
            Then the previous (unbalanced) span area is removed, and a new
            one added with the computed max height.
        </member>
        <member name="M:Telerik.Apoc.Layout.BodyAreaContainer.GetRemainingHeight">
            Determine remaining height for new span area. Needs to be
            modified for footnote and before-float reference areas when
            those are supported.
            @returns int The remaining available height in millipoints.
        </member>
        <member name="M:Telerik.Apoc.Layout.BodyAreaContainer.resetHeights">
            Used by resetSpanArea() and addSpanArea() to adjust the main
            reference area height before creating a new span.
        </member>
        <member name="M:Telerik.Apoc.Layout.BodyAreaContainer.isLastColumn">
            Used in Flow when layout returns incomplete.
            @returns bool Is this the last column in this span?
        </member>
        <member name="M:Telerik.Apoc.Layout.BodyAreaContainer.isNewSpanArea">
            This variable is unset by getNextArea(), is set by addSpanArea(),
            and <i>may</i> be set by resetSpanArea().
            @returns bool Is the span area new or not?
        </member>
        <member name="M:Telerik.Apoc.Layout.BorderAndPadding.Clone">
            Return a full copy of the BorderAndPadding information. This clones all
            padding and border information.
            @return The copy.
        </member>
        <member name="M:Telerik.Apoc.Layout.FontInfo.CreateFontKey(System.String,System.String,System.String)">
            Creates a key from the given strings
        </member>
        <member name="M:Telerik.Apoc.Layout.FontState.#ctor(Telerik.Apoc.Layout.FontInfo,System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
                Class constructor
            </summary>
            <remarks>
                Defaults the letter spacing to 0 millipoints.
            </remarks>
        </member>
        <member name="M:Telerik.Apoc.Layout.FontState.GetWidth(System.Int32)">
            <summary>
                Gets width of given character identifier plus <see cref="F:Telerik.Apoc.Layout.FontState.letterSpacing"/> 
                in millipoints (1/1000ths of a point).
            </summary>
            <param name="charId"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Apoc.Layout.FontState.MapCharacter(System.Char)">
            <summary>
                Map a Unicode character to a code point
            </summary>
            <param name="c">Any Unicode character.</param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Apoc.Layout.HyphenationProps">
            Store all hyphenation related properties on an FO.
            Public "structure" allows direct member access.
        </member>
        <member name="T:Telerik.Apoc.Layout.IFontDescriptor">
            <summary>
                A font descriptor specifies metrics and other attributes of a 
                font, as distinct from the metrics of individual glyphs.
            </summary>
            <remarks>
                See page 355 of PDF 1.4 specification for more information.
            </remarks>
        </member>
        <member name="P:Telerik.Apoc.Layout.IFontDescriptor.Flags">
            <summary>
                Gets a collection of flags providing various font characteristics.
            </summary>
        </member>
        <member name="P:Telerik.Apoc.Layout.IFontDescriptor.FontBBox">
            <summary>
                Gets the smallest rectangle that will encompass the shape that 
                would result if all glyhs of the font were placed with their 
                origins coincident.
            </summary>
        </member>
        <member name="P:Telerik.Apoc.Layout.IFontDescriptor.ItalicAngle">
            <summary>
                Gets the main italic angle of the font expressed in tenths of 
                a degree counterclockwise from the vertical.
            </summary>
        </member>
        <member name="P:Telerik.Apoc.Layout.IFontDescriptor.StemV">
            <summary>
                TODO: The thickness, measured horizontally, of the dominant vertical 
                stems of the glyphs in the font.
            </summary>
        </member>
        <member name="P:Telerik.Apoc.Layout.IFontDescriptor.HasKerningInfo">
            <summary>
                Gets a value that indicates whether this font has kerning support.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Telerik.Apoc.Layout.IFontDescriptor.IsEmbeddable">
            <summary>
                Gets a value that indicates whether this font program may be legally 
                embedded within a document.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Telerik.Apoc.Layout.IFontDescriptor.IsSubsettable">
            <summary>
                Gets a value that indicates whether this font program my be subsetted.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Telerik.Apoc.Layout.IFontDescriptor.FontData">
            <summary>
                Gets a byte array representing a font program to be embedded 
                in a document.
            </summary>
            <remarks>
                If <see cref="P:Telerik.Apoc.Layout.IFontDescriptor.IsEmbeddable"/> is <b>false</b> it is acceptable 
                for this method to return null.
            </remarks>
        </member>
        <member name="P:Telerik.Apoc.Layout.IFontDescriptor.KerningInfo">
            <summary>
                Gets kerning information for this font.
            </summary>
            <remarks>
                If <see cref="P:Telerik.Apoc.Layout.IFontDescriptor.HasKerningInfo"/> is <b>false</b> it is acceptable 
                for this method to return null.
            </remarks>
        </member>
        <member name="T:Telerik.Apoc.Layout.IFontMetric">
            <summary>
                Interface for font metric classes
            </summary>
        </member>
        <member name="M:Telerik.Apoc.Layout.IFontMetric.GetWidth(System.Int32)">
            <summary>
                Gets the width of a character in 1/1000ths of a point size 
                located at the supplied codepoint.
            </summary>
            <remarks>
                For a type 1 font a code point is an octal code obtained from a 
                character encoding scheme (WinAnsiEncoding, MacRomaonEncoding, etc).
                For example, the code point for the space character is 040 (octal).
                For a type 0 font a code point represents a GID (Glyph index).
            </remarks>
            <param name="charIndex">A character code point.</param>
            <returns></returns>
        </member>
        <member name="P:Telerik.Apoc.Layout.IFontMetric.Ascender">
            <summary>
                Specifies the maximum distance characters in this font extend 
                above the base line. This is the typographic ascent for the font. 
            </summary>
        </member>
        <member name="P:Telerik.Apoc.Layout.IFontMetric.Descender">
            <summary>
                Specifies the maximum distance characters in this font extend 
                below the base line. This is the typographic descent for the font. 
            </summary>
        </member>
        <member name="P:Telerik.Apoc.Layout.IFontMetric.CapHeight">
            <summary>
                Gets the vertical coordinate of the top of flat captial letters.
            </summary>
        </member>
        <member name="P:Telerik.Apoc.Layout.IFontMetric.FirstChar">
            <summary>
                Gets the value of the first character used in the font
            </summary>
        </member>
        <member name="P:Telerik.Apoc.Layout.IFontMetric.LastChar">
            <summary>
                Gets the value of the last character used in the font
            </summary>
        </member>
        <member name="P:Telerik.Apoc.Layout.IFontMetric.Descriptor">
            <summary>
                Gets a reference to a font descriptor.  A descriptor is akin to 
                the PDF FontDescriptor object (see page 355 of PDF 1.4 spec).
            </summary>
        </member>
        <member name="P:Telerik.Apoc.Layout.IFontMetric.Widths">
            <summary>
                Gets the widths of all characters in 1/1000ths of a point size.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Apoc.Layout.LineArea.addText(System.Char[],System.Int32,System.Int32,Telerik.Apoc.Layout.LinkSet,Telerik.Apoc.Layout.TextState)">
             adds text to line area
            
             @return int character position
        </member>
        <member name="M:Telerik.Apoc.Layout.LineArea.AddLeader(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            adds a Leader; actually the method receives the leader properties
            and creates a leader area or an inline area which is appended to
            the children of the containing line area.
            leader pattern use-content is not implemented.
        </member>
        <member name="M:Telerik.Apoc.Layout.LineArea.addPending">
            adds pending inline areas to the line area
            normally done, when the line area is filled and
            added as child to the parent block area
        </member>
        <member name="M:Telerik.Apoc.Layout.LineArea.align(System.Int32)">
             aligns line area
            
        </member>
        <member name="M:Telerik.Apoc.Layout.LineArea.verticalAlign">
            Balance (vertically) the inline areas within this line.
        </member>
        <member name="M:Telerik.Apoc.Layout.LineArea.changeHyphenation(Telerik.Apoc.Layout.HyphenationProps)">
            sets hyphenation related traits: language, country, hyphenate, hyphenation-character
            and minimum number of character to remain one the previous line and to be on the
            next line.
        </member>
        <member name="M:Telerik.Apoc.Layout.LineArea.buildSimpleLeader(System.Char,System.Int32)">
            creates a leader as String out of the given char and the leader length
            and wraps it in an InlineArea which is returned
        </member>
        <member name="M:Telerik.Apoc.Layout.LineArea.getLeaderAlignIndent(System.Int32,System.Int32)">
             calculates the width of space which has to be inserted before the
             start of the leader, so that all leader characters are aligned.
             is used if property leader-align is set. At the moment only the value
             for leader-align="reference-area" is supported.
            
        </member>
        <member name="M:Telerik.Apoc.Layout.LineArea.getCurrentXPosition">
            calculates the used space in this line area
        </member>
        <member name="M:Telerik.Apoc.Layout.LineArea.getHyphenationWord(System.Char[],System.Int32)">
            extracts a complete word from the character data
        </member>
        <member name="M:Telerik.Apoc.Layout.LineArea.getWordWidth(System.String)">
            Calculates the wordWidth using the actual fontstate
        </member>
        <member name="M:Telerik.Apoc.Layout.LineArea.addCharacter(System.Char,Telerik.Apoc.Layout.LinkSet,System.Boolean)">
            adds a single character to the line area tree
        </member>
        <member name="M:Telerik.Apoc.Layout.LineArea.addMapWord(System.Char,System.Text.StringBuilder)">
            Same as addWord except that characters in wordBuf is mapped
            to the current fontstate's encoding
        </member>
        <member name="M:Telerik.Apoc.Layout.LineArea.addWord(System.Char,System.Text.StringBuilder)">
            adds a InlineArea containing the String startChar+wordBuf to the line area children.
        </member>
        <member name="M:Telerik.Apoc.Layout.LineArea.canBreakMidWord">
            Checks if it's legal to break a word in the middle
            based on the current language property.
            @return true if legal to break word in the middle
        </member>
        <member name="M:Telerik.Apoc.Layout.LineArea.getCharWidth(System.Char)">
            Helper method for getting the width of a unicode char
            from the current fontstate.
            This also performs some guessing on widths on various
            versions of space that might not exists in the font.
        </member>
        <member name="M:Telerik.Apoc.Layout.LineArea.isSpace(System.Char)">
            Helper method to determine if the character is a
            space with normal behaviour. Normal behaviour means that
            it's not non-breaking
        </member>
        <member name="M:Telerik.Apoc.Layout.LineArea.isNBSP(System.Char)">
            Method to determine if the character is a nonbreaking
            space.
        </member>
        <member name="M:Telerik.Apoc.Layout.LineArea.isAnySpace(System.Char)">
            @return true if the character represents any kind of space
        </member>
        <member name="M:Telerik.Apoc.Layout.LineArea.addSpacedWord(System.String,Telerik.Apoc.Layout.LinkSet,System.Int32,System.Int32,Telerik.Apoc.Layout.TextState,System.Boolean)">
            Add a word that might contain non-breaking spaces.
            Split the word into WordArea and InlineSpace and add it.
            If addToPending is true, add to pending areas.
        </member>
        <member name="T:Telerik.Apoc.Layout.LinkedRectangle">
            an object that stores a rectangle that is linked, and the LineArea
            that it is logically associated with
            @author Arved Sandstrom
            @author James Tauber
        </member>
        <member name="F:Telerik.Apoc.Layout.LinkedRectangle.link">
            the linked Rectangle
        </member>
        <member name="F:Telerik.Apoc.Layout.LinkedRectangle.lineArea">
            the associated LineArea
        </member>
        <member name="F:Telerik.Apoc.Layout.LinkedRectangle.inlineArea">
            the associated InlineArea
        </member>
        <member name="T:Telerik.Apoc.Layout.LinkSet">
            a set of rectangles on a page that are linked to a common
            destination
        </member>
        <member name="F:Telerik.Apoc.Layout.LinkSet.destination">
            the destination of the links
        </member>
        <member name="F:Telerik.Apoc.Layout.LinkSet.rects">
            the set of rectangles
        </member>
        <member name="T:Telerik.Apoc.Layout.MarginInlineProps">
            Store all hyphenation related properties on an FO.
            Public "structure" allows direct member access.
        </member>
        <member name="T:Telerik.Apoc.Layout.MarginProps">
            Store all hyphenation related properties on an FO.
            Public "structure" allows direct member access.
        </member>
        <member name="M:Telerik.Apoc.Layout.Page.addBody(Telerik.Apoc.Layout.BodyAreaContainer)">
            Ensure that page is set not only on B.A.C. but also on the
            three top-level reference areas.
            @param area The region-body area container (special)
        </member>
        <member name="T:Telerik.Apoc.Layout.RelativePositionProps">
            Store all hyphenation related properties on an FO.
            Public "structure" allows direct member access.
        </member>
        <member name="T:Telerik.Apoc.Layout.TextState">
             This class holds information about text-decoration
            
        </member>
        <member name="M:Telerik.Apoc.Layout.TextState.getUnderlined">
            @return true if text should be underlined
        </member>
        <member name="M:Telerik.Apoc.Layout.TextState.setUnderlined(System.Boolean)">
            set text as underlined
        </member>
        <member name="M:Telerik.Apoc.Layout.TextState.getOverlined">
            @return true if text should be overlined
        </member>
        <member name="T:Telerik.Pdf.Gdi.Font.ControlValueProgramTable">
            <summary>
                Class that represents the Control Value Program table ('prep').
            </summary>
        </member>
        <member name="T:Telerik.Pdf.Gdi.Font.FontTable">
            <summary>
                Class derived by all TrueType table classes.
            </summary>
        </member>
        <member name="F:Telerik.Pdf.Gdi.Font.FontTable.directoryEntry">
            <summary>
                The dictionary entry for this table.
            </summary>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.FontTable.#ctor(System.String,Telerik.Pdf.Gdi.Font.DirectoryEntry)">
            <summary>
                Class constructor
            </summary>
            <param name="tableName">The table name.</param>
            <param name="entry">Table directory entry.</param>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.FontTable.Read(Telerik.Pdf.Gdi.Font.FontFileReader)">
            <summary>
                Reads the contents of a table from the current position in 
                the supplied stream.
            </summary>
            <param name="reader"></param>
            <exception cref="T:System.ArgumentException">
                If the supplied stream does not contain enough data.
            </exception>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.FontTable.Write(Telerik.Pdf.Gdi.Font.FontFileWriter)">
            <summary>
                Writes the contents of a table to the supplied writer.
            </summary>
            <remarks>
                This method should not be concerned with aligning the 
                table output on the 4-byte boundary.
            </remarks>
            <param name="writer"></param>
        </member>
        <member name="P:Telerik.Pdf.Gdi.Font.FontTable.Entry">
            <summary>
                Gets or sets a directory entry for this table.
            </summary>
        </member>
        <member name="P:Telerik.Pdf.Gdi.Font.FontTable.Name">
            <summary>
                Gets the unique name of this table as a 4-character string.
            </summary>
            <remarks>
                Note that some TrueType tables are only 3 characters long 
                (e.g. 'cvt').  In this case the returned string will be padded 
                with a extra space at the end of the string.
            </remarks>
        </member>
        <member name="P:Telerik.Pdf.Gdi.Font.FontTable.Tag">
            <summary>
                Gets the table name encoded as a 32-bit unsigned integer.
            </summary>
        </member>
        <member name="F:Telerik.Pdf.Gdi.Font.ControlValueProgramTable.instructions">
            <summary>
                Set of instructions executed whenever point size or font 
                or transformation change.
            </summary>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.ControlValueProgramTable.#ctor(Telerik.Pdf.Gdi.Font.DirectoryEntry)">
            <summary>
                Creates an instance of the <see cref="T:Telerik.Pdf.Gdi.Font.ControlValueProgramTable"/> class.
            </summary>
            <param name="entry"></param>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.ControlValueProgramTable.Read(Telerik.Pdf.Gdi.Font.FontFileReader)">
            <summary>
                Reads the contents of the "prep" table from the current position 
                in the supplied stream.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.ControlValueProgramTable.Write(Telerik.Pdf.Gdi.Font.FontFileWriter)">
            <summary>
                Writes out the array of instructions to the supplied stream.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:Telerik.Pdf.Gdi.Font.ControlValueTable">
            <summary>
                Class that represents the Control Value table ('cvt').
            </summary>
        </member>
        <member name="F:Telerik.Pdf.Gdi.Font.ControlValueTable.values">
            <summary>
                List of N values referenceable by instructions. 
            </summary>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.ControlValueTable.#ctor(Telerik.Pdf.Gdi.Font.DirectoryEntry)">
            <summary>
                Creates an instance of the <see cref="T:Telerik.Pdf.Gdi.Font.ControlValueTable"/> class.
            </summary>
            <param name="entry"></param>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.ControlValueTable.Read(Telerik.Pdf.Gdi.Font.FontFileReader)">
            <summary>
                Reads the contents of the "cvt" table from the current position 
                in the supplied stream.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.ControlValueTable.Write(Telerik.Pdf.Gdi.Font.FontFileWriter)">
            <summary>
                Writes out the array of values to the supplied stream.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="P:Telerik.Pdf.Gdi.Font.ControlValueTable.Count">
            <summary>
                Gets the value representing the number of values that can 
                be referenced by instructions.
            </summary>
        </member>
        <member name="T:Telerik.Pdf.Gdi.Font.FontProgramTable">
            <summary>
                Class that represents the Font Program table ('fpgm').
            </summary>
        </member>
        <member name="F:Telerik.Pdf.Gdi.Font.FontProgramTable.instructions">
            <summary>
                List of N instructions. 
            </summary>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.FontProgramTable.#ctor(Telerik.Pdf.Gdi.Font.DirectoryEntry)">
            <summary>
                Creates an instance of the <see cref="T:Telerik.Pdf.Gdi.Font.FontProgramTable"/> class.
            </summary>
            <param name="entry"></param>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.FontProgramTable.Read(Telerik.Pdf.Gdi.Font.FontFileReader)">
            <summary>
                Reads the contents of the "fpgm" table from the current position 
                in the supplied stream.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.FontProgramTable.Write(Telerik.Pdf.Gdi.Font.FontFileWriter)">
            <summary>
                Writes out the array of instructions to the supplied stream.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="P:Telerik.Pdf.Gdi.Font.FontProgramTable.Count">
            <summary>
                Gets the value representing the number of instructions 
                in the font program.
            </summary>
        </member>
        <member name="T:Telerik.Pdf.Gdi.Font.FontTableFactory">
            <summary>
                Instantiates a font table from a table tag.
            </summary>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.FontTableFactory.#ctor">
            <summary>
                Prevent instantiation since this is a factory class.
            </summary>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.FontTableFactory.Make(System.String,Telerik.Pdf.Gdi.Font.FontFileReader)">
            <summary>
                Creates an instance of a class that implements the FontTable interface.
            </summary>
            <param name="tableName">
                One of the pre-defined TrueType tables from the <see cref="T:Telerik.Pdf.Gdi.Font.TableNames"/> class.
            </param>
            <returns>
                A subclass of <see cref="T:Telerik.Pdf.Gdi.Font.FontTable"/> that is capable of parsing 
                a TrueType table.
            </returns>
            <exception cref="T:System.ArgumentException">
                If a class capable of parsing <i>tableName</i> is not available.
            </exception>
        </member>
        <member name="T:Telerik.Pdf.Gdi.Font.GlyfDataTable">
            <summary>
                Class that represents the Glyf Data table ('glyf').
            </summary>
            <remarks>
                http://www.microsoft.com/typography/otspec/glyf.htm
            </remarks>
        </member>
        <member name="F:Telerik.Pdf.Gdi.Font.GlyfDataTable.glyphDescriptions">
            <summary>
                Maps a glyph index to a <see cref="T:Telerik.Pdf.Gdi.Font.Glyph"/> object.
            </summary>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.GlyfDataTable.#ctor(Telerik.Pdf.Gdi.Font.DirectoryEntry)">
            <summary>
                Creates an instance of the <see cref="T:Telerik.Pdf.Gdi.Font.GlyfDataTable"/> class.
            </summary>
            <param name="entry"></param>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.GlyfDataTable.Read(Telerik.Pdf.Gdi.Font.FontFileReader)">
            <summary>
                Reads the contents of the "glyf" table from the current position 
                in the supplied stream.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.GlyfDataTable.Write(Telerik.Pdf.Gdi.Font.FontFileWriter)">
            <summary>
                Writes the contents of the glyf table to the supplied stream.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="P:Telerik.Pdf.Gdi.Font.GlyfDataTable.Item(System.Int32)">
            <summary>
                Gets the <see cref="T:Telerik.Pdf.Gdi.Font.Glyph"/> instance located at <i>glyphIndex</i>
            </summary>
        </member>
        <member name="P:Telerik.Pdf.Gdi.Font.GlyfDataTable.Count">
            <summary>
                Gets the number of glyphs.
            </summary>
        </member>
        <member name="T:Telerik.Pdf.Gdi.Font.Glyph">
            <summary>
                Represents either a simple or composite glyph description from
                the 'glyf' table.
            </summary>
            <remarks>
                This class is nothing more than a wrapper around 
                a byte array.
            </remarks>
        </member>
        <member name="F:Telerik.Pdf.Gdi.Font.Glyph.glyphIndex">
            <summary>
                The index of this glyph as obtained from the 'loca' table.
            </summary>
        </member>
        <member name="F:Telerik.Pdf.Gdi.Font.Glyph.glyphData">
            <summary>
                Contains glyph description as raw data.
            </summary>
        </member>
        <member name="F:Telerik.Pdf.Gdi.Font.Glyph.children">
            <summary>
                List of composite glyph indices.
            </summary>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.Glyph.#ctor(System.Int32)">
            <summary>
                Class constructor.
            </summary>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.Glyph.SetGlyphData(System.Byte[])">
            <summary>
                Sets the glyph data (duh!).
            </summary>
            <param name="glyphData"></param>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.Glyph.AddChild(System.Int32)">
            <summary>
                Add the supplied glyph index to list of children.
            </summary>
            <param name="glyphIndex"></param>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.Glyph.Write(Telerik.Pdf.Gdi.Font.FontFileStream)">
            <summary>
                Writes a glyph description to the supplied stream.
            </summary>
            <param name="stream"></param>
        </member>
        <member name="P:Telerik.Pdf.Gdi.Font.Glyph.Index">
            <summary>
                Gets or sets the index of this glyph.
            </summary>
        </member>
        <member name="P:Telerik.Pdf.Gdi.Font.Glyph.Length">
            <summary>
                Gets the length of the glyph data buffer.
            </summary>
        </member>
        <member name="P:Telerik.Pdf.Gdi.Font.Glyph.Children">
            <summary>
                Gets a ilst of child glyph indices.
            </summary>
        </member>
        <member name="P:Telerik.Pdf.Gdi.Font.Glyph.IsComposite">
            <summary>
                Gets a value indicating whether or not this glyph represents 
                a composite glyph.
            </summary>
        </member>
        <member name="T:Telerik.Pdf.Gdi.Font.HeaderTable">
            <summary>
                Class that represents the Font Header table.
            </summary>
            <remarks>
                http://www.microsoft.com/typography/otspec/head.htm
            </remarks>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.HeaderTable.#ctor(Telerik.Pdf.Gdi.Font.DirectoryEntry)">
            <summary>
                Class constructor.
            </summary>
            <param name="entry"></param>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.HeaderTable.Read(Telerik.Pdf.Gdi.Font.FontFileReader)">
            <summary>
                Reads the contents of the "head" table from the current position 
                in the supplied stream.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.HeaderTable.GetDate(System.Int64)">
            <summary>
                Returns a DateTime instance which is the result of adding <i>seconds</i>
                to BaseDate.  If an exception occurs, BaseDate is returned.
            </summary>
            <param name="seconds"></param>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.HeaderTable.Write(Telerik.Pdf.Gdi.Font.FontFileWriter)">
            <summary>
                Writes the contents of the head table to the supplied stream.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="P:Telerik.Pdf.Gdi.Font.HeaderTable.IsShortFormat">
            <summary>
                Gets a value that indicates whether glyph offsets in the 
                loca table are stored as a int or ulong.
            </summary>
        </member>
        <member name="T:Telerik.Pdf.Gdi.Font.HorizontalHeaderTable">
            <summary>
                Class that represents the Horizontal Header table.
            </summary>
            <remarks>
                http://www.microsoft.com/typography/otspec/hhea.htm
            </remarks>
        </member>
        <member name="F:Telerik.Pdf.Gdi.Font.HorizontalHeaderTable.versionNo">
            <summary>
                Table version number 0x00010000 for version 1.0. 
            </summary>
        </member>
        <member name="F:Telerik.Pdf.Gdi.Font.HorizontalHeaderTable.ascender">
            <summary>
                Typographic ascent. (Distance from baseline of highest ascender).
            </summary>
        </member>
        <member name="F:Telerik.Pdf.Gdi.Font.HorizontalHeaderTable.decender">
            <summary>
                Typographic descent. (Distance from baseline of lowest descender).
            </summary>
        </member>
        <member name="F:Telerik.Pdf.Gdi.Font.HorizontalHeaderTable.lineGap">
            <summary>
                Typographic line gap.  Negative LineGap values are treated as zero 
                in Windows 3.1, System 6, and System 7. 
            </summary>
        </member>
        <member name="F:Telerik.Pdf.Gdi.Font.HorizontalHeaderTable.advanceWidthMax">
            <summary>
                Maximum advance width value in 'hmtx' table. 
            </summary>
        </member>
        <member name="F:Telerik.Pdf.Gdi.Font.HorizontalHeaderTable.minLeftSideBearing">
            <summary>
                Minimum left sidebearing value in 'hmtx' table.
            </summary>
        </member>
        <member name="F:Telerik.Pdf.Gdi.Font.HorizontalHeaderTable.minRightSideBearing">
            <summary>
                Minimum right sidebearing value.
            </summary>
        </member>
        <member name="F:Telerik.Pdf.Gdi.Font.HorizontalHeaderTable.xMaxExtent">
            <summary>
                Max(lsb + (xMax - xMin)).
            </summary>
        </member>
        <member name="F:Telerik.Pdf.Gdi.Font.HorizontalHeaderTable.caretSlopeRise">
            <summary>
                Used to calculate the slope of the cursor (rise/run); 1 for vertical.
            </summary>
        </member>
        <member name="F:Telerik.Pdf.Gdi.Font.HorizontalHeaderTable.caretSlopeRun">
            <summary>
                0 for vertical.
            </summary>
        </member>
        <member name="F:Telerik.Pdf.Gdi.Font.HorizontalHeaderTable.caretOffset">
            <summary>
                The amount by which a slanted highlight on a glyph needs to be 
                shifted to produce the best appearance. Set to 0 for non-slanted fonts.
            </summary>
        </member>
        <member name="F:Telerik.Pdf.Gdi.Font.HorizontalHeaderTable.metricDataFormat">
            <summary>
                0 for current format.
            </summary>
        </member>
        <member name="F:Telerik.Pdf.Gdi.Font.HorizontalHeaderTable.numberOfHMetrics">
            <summary>
                Number of hMetric entries in 'hmtx' table.
            </summary>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.HorizontalHeaderTable.#ctor(Telerik.Pdf.Gdi.Font.DirectoryEntry)">
            <summary>
                Class constructor.
            </summary>
            <param name="entry"></param>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.HorizontalHeaderTable.Read(Telerik.Pdf.Gdi.Font.FontFileReader)">
            <summary>
                Reads the contents of the "hhea" table from the current position 
                in the supplied stream.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="P:Telerik.Pdf.Gdi.Font.HorizontalHeaderTable.HMetricCount">
            <summary>
                Gets the number of horiztonal metrics.
            </summary>
        </member>
        <member name="T:Telerik.Pdf.Gdi.Font.HorizontalMetric">
            <summary>
                Summary description for HorizontalMetric.
            </summary>
        </member>
        <member name="T:Telerik.Pdf.Gdi.Font.HorizontalMetricsTable">
            <summary>
                Class that represents the Horizontal Metrics ('hmtx') table.
            </summary>
            <remarks>
                http://www.microsoft.com/typography/otspec/hmtx.htm
            </remarks>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.HorizontalMetricsTable.#ctor(Telerik.Pdf.Gdi.Font.DirectoryEntry)">
            <summary>
                Initialises a new instance of the 
                <see cref="T:Telerik.Pdf.Gdi.Font.HorizontalMetricsTable"/> class.
            </summary>
            <param name="entry"></param>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.HorizontalMetricsTable.#ctor(Telerik.Pdf.Gdi.Font.DirectoryEntry,System.Int32)">
            <summary>
                Initialises a new instance of the HorizontalMetricsTable class.
            </summary>
            <param name="entry"></param>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.HorizontalMetricsTable.Read(Telerik.Pdf.Gdi.Font.FontFileReader)">
            <summary>
                Reads the contents of the "hmtx" table from the supplied stream 
                at the current position.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="P:Telerik.Pdf.Gdi.Font.HorizontalMetricsTable.Count">
            <summary>
                Returns the number of horizontal metrics stored in the 
                hmtx table.
            </summary>
        </member>
        <member name="P:Telerik.Pdf.Gdi.Font.HorizontalMetricsTable.Item(System.Int32)">
            <summary>
                Gets the <see cref="T:Telerik.Pdf.Gdi.Font.HorizontalMetric"/> located at <i>index</i>.
            </summary>
        </member>
        <member name="T:Telerik.Pdf.Gdi.Font.IndexToLocationTable">
            <summary>
                Class that represents the Index To Location ('loca') table.
            </summary>
            <remarks>
                http://www.microsoft.com/typography/otspec/loca.htm
            </remarks>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.IndexToLocationTable.#ctor(Telerik.Pdf.Gdi.Font.DirectoryEntry)">
            <summary>
                Initialises a new instance of the 
                <see cref="T:Telerik.Pdf.Gdi.Font.IndexToLocationTable"/> class.
            </summary>
            <param name="entry"></param>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.IndexToLocationTable.#ctor(Telerik.Pdf.Gdi.Font.DirectoryEntry,System.Int32)">
            <summary>
                Initialises a new instance of the IndexToLocationTable class.
            </summary>
            <param name="entry"></param>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.IndexToLocationTable.Read(Telerik.Pdf.Gdi.Font.FontFileReader)">
            <summary>
                Reads the contents of the "loca" table from the supplied stream 
                at the current position.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.IndexToLocationTable.Clear">
            <summary>
                Removes all offsets.
            </summary>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.IndexToLocationTable.AddOffset(System.Int32)">
            <summary>
                Includes the supplied offset.
            </summary>
            <param name="offset"></param>
        </member>
        <member name="P:Telerik.Pdf.Gdi.Font.IndexToLocationTable.Count">
            <summary>
                Gets the number of glyph offsets.
            </summary>
        </member>
        <member name="P:Telerik.Pdf.Gdi.Font.IndexToLocationTable.Item(System.Int32)">
            <summary>
                Gets or sets the glyph offset at index <i>index</i>.
            </summary>
            <param name="index">A glyph index.</param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Pdf.Gdi.Font.KerningTable">
            <summary>
                Class that represents the Kerning table.
            </summary>
            <remarks>
                http://www.microsoft.com/typography/otspec/kern.htm
            </remarks>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.KerningTable.#ctor(Telerik.Pdf.Gdi.Font.DirectoryEntry)">
            <summary>
                Class constructor.
            </summary>
            <param name="entry"></param>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.KerningTable.Read(Telerik.Pdf.Gdi.Font.FontFileReader)">
            <summary>
                Reads the contents of the "kern" table from the current position 
                in the supplied stream.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.KerningTable.Write(Telerik.Pdf.Gdi.Font.FontFileWriter)">
            <summary>
                No supported.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="P:Telerik.Pdf.Gdi.Font.KerningTable.HasKerningInfo">
            <summary>
                Gets a boolean value that indicates this font contains format 0
                kerning information.
            </summary>
        </member>
        <member name="P:Telerik.Pdf.Gdi.Font.KerningTable.KerningPairs">
            <summary>
                Returns a collection of kerning pairs.
            </summary>
            <remarks>
                If <i>HasKerningInfo</i> returns <b>false</b>, this method will 
                always return null.
            </remarks>
        </member>
        <member name="T:Telerik.Pdf.Gdi.Font.MaximumProfileTable">
            <summary>
                Class that represents the Horizontal Metrics ('maxp') table.
            </summary>
            <remarks>
                http://www.microsoft.com/typography/otspec/maxp.htm
            </remarks>
        </member>
        <member name="F:Telerik.Pdf.Gdi.Font.MaximumProfileTable.versionNo">
            <summary>
                Table version number
            </summary>
        </member>
        <member name="F:Telerik.Pdf.Gdi.Font.MaximumProfileTable.numGlyphs">
            <summary>
                The number of glyphs in the font.
            </summary>
        </member>
        <member name="F:Telerik.Pdf.Gdi.Font.MaximumProfileTable.maxPoints">
            <summary>
                Maximum points in a non-composite glyph. 
            </summary>
        </member>
        <member name="F:Telerik.Pdf.Gdi.Font.MaximumProfileTable.maxContours">
            <summary>
                Maximum contours in a non-composite glyph.  Only set if 
                <i>versionNo</i> is 1.0.
            </summary>
        </member>
        <member name="F:Telerik.Pdf.Gdi.Font.MaximumProfileTable.maxCompositePoints">
            <summary>
                Maximum points in a composite glyph.  Only set if 
                <i>versionNo</i> is 1.0.
            </summary>
        </member>
        <member name="F:Telerik.Pdf.Gdi.Font.MaximumProfileTable.maxCompositeContours">
            <summary>
                Maximum contours in a composite glyph.  Only set if 
                <i>versionNo</i> is 1.0.
            </summary>
        </member>
        <member name="F:Telerik.Pdf.Gdi.Font.MaximumProfileTable.maxZones">
            <summary>
                1 if instructions do not use the twilight zone (Z0), or 
                2 if instructions do use Z0; should be set to 2 in most 
                cases.  Only set if <i>versionNo</i> is 1.0.
            </summary>
        </member>
        <member name="F:Telerik.Pdf.Gdi.Font.MaximumProfileTable.maxTwilightPoints">
            <summary>
                Maximum points used in Z0.   Only set if 
                <i>versionNo</i> is 1.0.
            </summary>
        </member>
        <member name="F:Telerik.Pdf.Gdi.Font.MaximumProfileTable.maxStorage">
            <summary>
                Number of Storage Area locations.  Only set if 
                <i>versionNo</i> is 1.0.
            </summary>
        </member>
        <member name="F:Telerik.Pdf.Gdi.Font.MaximumProfileTable.maxFunctionDefs">
            <summary>
                Number of FDEFs.   Only set if <i>versionNo</i> is 1.0.
            </summary>
        </member>
        <member name="F:Telerik.Pdf.Gdi.Font.MaximumProfileTable.maxInstructionDefs">
            <summary>
                Number of IDEFs.   Only set if <i>versionNo</i> is 1.0.
            </summary>
        </member>
        <member name="F:Telerik.Pdf.Gdi.Font.MaximumProfileTable.maxStackElements">
            <summary>
                Maximum stack depth2.  Only set if <i>versionNo</i> is 1.0.
            </summary>
        </member>
        <member name="F:Telerik.Pdf.Gdi.Font.MaximumProfileTable.maxSizeOfInstructions">
            <summary>
                Maximum byte count for glyph instructions.  Only set 
                if <i>versionNo</i> is 1.0.
            </summary>
        </member>
        <member name="F:Telerik.Pdf.Gdi.Font.MaximumProfileTable.maxComponentElements">
            <summary>
                Maximum number of components referenced at "top level" 
                for any composite glyph.   Only set if 
                <i>versionNo</i> is 1.0.
            </summary>
        </member>
        <member name="F:Telerik.Pdf.Gdi.Font.MaximumProfileTable.maxComponentDepth">
            <summary>
                Maximum levels of recursion; 1 for simple components. 
                Only set if <i>versionNo</i> is 1.0.
            </summary>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.MaximumProfileTable.#ctor(Telerik.Pdf.Gdi.Font.DirectoryEntry)">
            <summary>
                Initialises a new instance of the <see cref="T:Telerik.Pdf.Gdi.Font.MaximumProfileTable"/>
                class.
            </summary>
            <param name="entry"></param>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.MaximumProfileTable.Read(Telerik.Pdf.Gdi.Font.FontFileReader)">
            <summary>
                Reads the contents of the "maxp" table from the supplied stream 
                at the current position.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="P:Telerik.Pdf.Gdi.Font.MaximumProfileTable.GlyphCount">
            <summary>
                Gets the number of glyphs
            </summary>
        </member>
        <member name="T:Telerik.Pdf.Gdi.Font.NameTable">
            <summary>
                Class that represents the Naming ('name') table
            </summary>
            <remarks>
                http://www.microsoft.com/typography/otspec/name.htm
            </remarks>
        </member>
        <member name="F:Telerik.Pdf.Gdi.Font.NameTable.storageOffset">
            <summary>
                Offset to start of string storage (from start of table).
            </summary>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.NameTable.Read(Telerik.Pdf.Gdi.Font.FontFileReader)">
            <summary>
                Reads the contents of the "name" table from the supplied stream 
                at the current position.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.NameTable.ReadString(Telerik.Pdf.Gdi.Font.FontFileStream,System.Int32,System.Int32)">
            <summary>
                Reads a string from the storage area beginning at <i>offset</i>
                consisting of <i>length</i> bytes.  The returned string will be 
                converted using the Unicode encoding.
            </summary>
            <param name="stream">Big-endian font stream.</param>
            <param name="stringOffset">
                The offset in bytes from the beginning of the string storage area.
             </param>
            <param name="length">The length of the string in bytes.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.NameTable.Write(Telerik.Pdf.Gdi.Font.FontFileWriter)">
            <summary>
                Not supported.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="P:Telerik.Pdf.Gdi.Font.NameTable.FamilyName">
            <summary>
                Get the font family name.
            </summary>
        </member>
        <member name="P:Telerik.Pdf.Gdi.Font.NameTable.FullName">
            <summary>
                Gets the font full name composed of the family name and the 
                subfamily name.
            </summary>
        </member>
        <member name="T:Telerik.Pdf.Gdi.Font.OS2Table">
            <summary>
                Class that represents the OS/2 ('OS/2') table
            </summary>
            <remarks>
                <p>For detailed information on the OS/2 table, visit the following link:
                http://www.microsoft.com/typography/otspec/os2.htm</p>
                <p>For more details on the Panose classification metrics, visit the following URL:
                http://www.panose.com/hardware/pan2.asp</p>
            </remarks>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.OS2Table.Read(Telerik.Pdf.Gdi.Font.FontFileReader)">
            <summary>
                Reads the contents of the "os/2" table from the supplied stream 
                at the current position.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="P:Telerik.Pdf.Gdi.Font.OS2Table.IsItalic">
            <summary>
                Gets a boolean value that indicates whether this font contains 
                italic characters.
            </summary>
        </member>
        <member name="P:Telerik.Pdf.Gdi.Font.OS2Table.IsRegular">
            <summary>
                Gets a boolean value that indicates whether characters are 
                in the standard weight/style.
            </summary>
        </member>
        <member name="P:Telerik.Pdf.Gdi.Font.OS2Table.IsBold">
            <summary>
                Gets a boolean value that indicates whether characters possess
                a weight greater than or equal to 700.
            </summary>
        </member>
        <member name="P:Telerik.Pdf.Gdi.Font.OS2Table.IsMonospaced">
            <summary>
                Gets a boolean value that indicates whether this font contains 
                characters that all have the same width.
            </summary>
        </member>
        <member name="P:Telerik.Pdf.Gdi.Font.OS2Table.IsSymbolic">
            <summary>
                Gets a boolean value that indicates whether this font contains 
                special characters such as dingbats, icons, etc.
            </summary>
        </member>
        <member name="P:Telerik.Pdf.Gdi.Font.OS2Table.IsSerif">
            <summary>
                Gets a boolean value that indicates whether characters  
                do possess serifs
            </summary>
        </member>
        <member name="P:Telerik.Pdf.Gdi.Font.OS2Table.IsScript">
            <summary>
                Gets a boolean value that indicates whether characters 
                are designed to simulate hand writing.
            </summary>
        </member>
        <member name="P:Telerik.Pdf.Gdi.Font.OS2Table.IsSansSerif">
            <summary>
                Gets a boolean value that indicates whether characters  
                do not possess serifs
            </summary>
        </member>
        <member name="P:Telerik.Pdf.Gdi.Font.OS2Table.IsEmbeddable">
            <summary>
                Gets a boolean value that indicates whether this font may be 
                legally embedded.
            </summary>
        </member>
        <member name="P:Telerik.Pdf.Gdi.Font.OS2Table.IsSubsettable">
            <summary>
                Gets a boolean value that indicates whether this font may be 
                subsetted.
            </summary>
        </member>
        <member name="T:Telerik.Pdf.Gdi.Font.PostTable">
            <summary>
                Class that represents the PostScript ('post') table
            </summary>
            <remarks>
                http://www.microsoft.com/typography/otspec/post.htm
            </remarks>
        </member>
        <member name="F:Telerik.Pdf.Gdi.Font.PostTable.version">
            <summary>
                0x00010000 for version 1.0 
                0x00020000 for version 2.0 
                0x00025000 for version 2.5 (deprecated) 
                0x00030000 for version 3.0 
            </summary>
        </member>
        <member name="F:Telerik.Pdf.Gdi.Font.PostTable.italicAngle">
            <summary>
                Italic angle in counter-clockwise degrees from the vertical. 
                Zero for upright text, negative for text that leans to the 
                right (forward). 
            </summary>
        </member>
        <member name="F:Telerik.Pdf.Gdi.Font.PostTable.underlinePosition">
            <summary>
                This is the suggested distance of the top of the underline from 
                the baseline (negative values indicate below baseline). 
            </summary>
        </member>
        <member name="F:Telerik.Pdf.Gdi.Font.PostTable.underlineThickness">
            <summary>
                Suggested values for the underline thickness. 
            </summary>
        </member>
        <member name="F:Telerik.Pdf.Gdi.Font.PostTable.fixedPitch">
            <summary>
                Set to 0 if the font is proportionally spaced, non-zero if the 
                font is not proportionally spaced (i.e. monospaced). 
            </summary>
        </member>
        <member name="F:Telerik.Pdf.Gdi.Font.PostTable.minMemType42">
            <summary>
                Minimum memory usage when an OpenType font is downloaded. 
            </summary>
        </member>
        <member name="F:Telerik.Pdf.Gdi.Font.PostTable.maxMemType42">
            <summary>
                Maximum memory usage when an OpenType font is downloaded. 
            </summary>
        </member>
        <member name="F:Telerik.Pdf.Gdi.Font.PostTable.minMemType1">
            <summary>
                Minimum memory usage when an OpenType font is downloaded 
                as a Type 1 font. 
            </summary>
        </member>
        <member name="F:Telerik.Pdf.Gdi.Font.PostTable.maxMemType1">
            <summary>
                Maximum memory usage when an OpenType font is downloaded 
                as a Type 1 font. 
            </summary>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.PostTable.#ctor(Telerik.Pdf.Gdi.Font.DirectoryEntry)">
            <summary>
                Class constructor.
            </summary>
            <param name="entry"></param>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.PostTable.Read(Telerik.Pdf.Gdi.Font.FontFileReader)">
            <summary>
                Reads the contents of the "post" table from the supplied stream 
                at the current position.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="P:Telerik.Pdf.Gdi.Font.PostTable.IsFixedPitch">
            <summary>
                Gets a boolean value that indicates whether this font is 
                proportionally spaced (fixed pitch) or not.
            </summary>
        </member>
        <member name="T:Telerik.Pdf.Gdi.Font.TrueTypeHeader">
            <summary>
                Class that represents the Offset and Directory tables.
            </summary>
            <remarks>
                http://www.microsoft.com/typography/otspec/otff.htm
            </remarks>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.TrueTypeHeader.Contains(System.String)">
            <summary>
                Gets a value indicating whether or not this font contains the 
                supplied table.
            </summary>
            <param name="tableName">A table name.</param>
            <returns></returns>
        </member>
        <member name="P:Telerik.Pdf.Gdi.Font.TrueTypeHeader.Item(System.String)">
            <summary>
                Gets a DirectoryEntry object for the supplied table.
            </summary>
            <param name="tableName">A 4-character code identifying a table.</param>
            <returns>
                A DirectoryEntry object or null if the table cannot be located.
            </returns>
            <exception cref="T:System.ArgumentException">
                If <b>tableName</b> does not represent a table in this font.
            </exception>
        </member>
        <member name="P:Telerik.Pdf.Gdi.Font.TrueTypeHeader.Count">
            <summary>
                Gets the number tables.
            </summary>
        </member>
        <member name="T:Telerik.Pdf.Gdi.Font.DirectoryEntry">
            <summary>
                Represents an entry in the directory table
            </summary>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.DirectoryEntry.MakeTable(Telerik.Pdf.Gdi.Font.FontFileReader)">
            <summary>
                Gets an instance of an <see cref="T:Telerik.Pdf.Gdi.Font.FontTable"/> implementation that is 
                capable of parsing the table identified by <b>tab</b>.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Telerik.Pdf.Gdi.Font.DirectoryEntry.TableName">
            <summary>
                Returns the table tag as a string
            </summary>
            <returns></returns>
        </member>
        <member name="P:Telerik.Pdf.Gdi.Font.DirectoryEntry.Tag">
            <summary>
                Gets the table tag encoded as an unsigned 32-bite integer.
            </summary>
        </member>
        <member name="P:Telerik.Pdf.Gdi.Font.DirectoryEntry.Offset">
            <summary>
                Gets or sets a value that represents a <see cref="T:Telerik.Pdf.Gdi.Font.FontTable"/> 
                offset, i.e. the number of bytes from the beginning of the file.
            </summary>
        </member>
        <member name="P:Telerik.Pdf.Gdi.Font.DirectoryEntry.Length">
            <summary>
                Gets or sets a value representing the number number of bytes
                a <see cref="T:Telerik.Pdf.Gdi.Font.FontTable"/> object occupies in a stream.
            </summary>
        </member>
        <member name="P:Telerik.Pdf.Gdi.Font.DirectoryEntry.CheckSum">
            <summary>
                Gets or sets value that represents a checksum of a <see cref="T:Telerik.Pdf.Gdi.Font.FontTable"/>.
            </summary>
        </member>
        <member name="T:Telerik.Pdf.Gdi.Font.FontFileReader">
            <summary>
                Class designed to parse a TrueType font file.
            </summary>
        </member>
        <member name="F:Telerik.Pdf.Gdi.Font.FontFileReader.stream">
            <summary>
                A Big Endian stream.
            </summary>
        </member>
        <member name="F:Telerik.Pdf.Gdi.Font.FontFileReader.fontName">
            <summary>
                Used to identity a font within a TrueType collection.
            </summary>
        </member>
        <member name="F:Telerik.Pdf.Gdi.Font.FontFileReader.header">
            <summary>
                Maps a table name (4-character string) to a <see cref="T:Telerik.Pdf.Gdi.Font.DirectoryEntry"/>
            </summary>
        </member>
        <member name="F:Telerik.Pdf.Gdi.Font.FontFileReader.tableCache">
            <summary>
                A dictionary of cached <see cref="T:Telerik.Pdf.Gdi.Font.FontTable"/> instances.  
                The index is the table name.
            </summary>
        </member>
        <member name="F:Telerik.Pdf.Gdi.Font.FontFileReader.mappings">
            <summary>
                Maps a glyph index to a subset index.
            </summary>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.FontFileReader.#ctor(System.IO.MemoryStream)">
            <summary>
                Class constructor.
            </summary>
            <param name="stream">Font data stream.</param>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.FontFileReader.#ctor(System.IO.MemoryStream,System.String)">
            <summary>
                Class constructor.
            </summary>
            <param name="stream">Font data stream.</param>
            <param name="fontName">Name of a font in a TrueType collection.</param>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.FontFileReader.ContainsTable(System.String)">
            <summary>
                Gets a value indicating whether or not this font contains the 
                supplied table.
            </summary>
            <param name="tableName">A table name.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.FontFileReader.GetTable(System.String)">
            <summary>
                Gets a reference to the table structure identified by <i>tableName</i>
            </summary>
            <remarks>
                Only the following tables are supported: 
                <see cref="F:Telerik.Pdf.Gdi.Font.TableNames.Head"/> - Font header,
                <see cref="F:Telerik.Pdf.Gdi.Font.TableNames.Hhea"/> - Horizontal header,
                <see cref="F:Telerik.Pdf.Gdi.Font.TableNames.Hmtx"/> - Horizontal metrics,
                <see cref="F:Telerik.Pdf.Gdi.Font.TableNames.Maxp"/> - Maximum profile,
                <see cref="F:Telerik.Pdf.Gdi.Font.TableNames.Loca"/> - Index to location, 
                <see cref="F:Telerik.Pdf.Gdi.Font.TableNames.Glyf"/> - Glyf data,
                <see cref="F:Telerik.Pdf.Gdi.Font.TableNames.Cvt"/> - Control value,
                <see cref="F:Telerik.Pdf.Gdi.Font.TableNames.Prep"/> - Control value program,
                <see cref="F:Telerik.Pdf.Gdi.Font.TableNames.Fpgm"/> - Font program
            </remarks>
            <param name="tableName">A 4-character code identifying a table.</param>
            <exception cref="T:System.ArgumentException">
                If <b>tableName</b> does not represent a table in this font.
            </exception>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.FontFileReader.GetDictionaryEntry(System.String)">
            <summary>
                Gets a <see cref="T:Telerik.Pdf.Gdi.Font.DirectoryEntry"/> object for the supplied table.
            </summary>
            <param name="tableName">A 4-character code identifying a table.</param>
            <returns>
                A <see cref="T:Telerik.Pdf.Gdi.Font.DirectoryEntry"/> object or null if the table cannot 
                be located.
            </returns>
            <exception cref="T:System.ArgumentException">
                If <b>tag</b> does not represent a table in this font.
            </exception>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.FontFileReader.ReadTableHeaders">
            <summary>
                Reads the Offset and Directory tables.  If the FontFileStream represents 
                a TrueType collection, this method will look for the aforementioned 
                tables belonging to <i>fontName</i>.
            </summary>
            <remarks>
                This method can handle a TrueType collection.
            </remarks>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.FontFileReader.ReadRequiredTables">
            <summary>
                Caches the following tables: 'head', 'hhea', 'maxp', 'loca'
            </summary>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.FontFileReader.OffsetStream(Telerik.Pdf.Gdi.Font.DirectoryEntry)">
            <summary>
                Sets the stream position to the offset in the supplied directory
                entry. Also ensures that the FontFileStream has enough bytes 
                available to read a font table.  Throws an exception if this 
                condition is not met.
            </summary>
            <param name="entry"></param>
            <exception cref="T:System.ArgumentException">
                If the supplied stream does not contain enough data.
            </exception>
        </member>
        <member name="P:Telerik.Pdf.Gdi.Font.FontFileReader.IndexMappings">
            <summary>
                Gets or sets a dictionary containing glyph index to subset 
                index mappings.
            </summary>
        </member>
        <member name="P:Telerik.Pdf.Gdi.Font.FontFileReader.Stream">
            <summary>
                Gets the underlying <see cref="T:Telerik.Pdf.Gdi.Font.FontFileStream"/>.
            </summary>
        </member>
        <member name="P:Telerik.Pdf.Gdi.Font.FontFileReader.TableCount">
            <summary>
                Gets the number tables.
            </summary>
        </member>
        <member name="T:Telerik.Pdf.Gdi.Font.FontFileStream">
            <summary>
                Class designed to read and write primitive datatypes from/to a 
                TrueType font file.
            </summary>
            <remarks>
                <p>All OpenType fonts use Motorola-style byte ordering (Big Endian).</p>
                <p>The following table lists the primitives and their definition. 
                Note the difference between the .NET CLR definition of certain 
                types and the TrueType definition.</p>
                <p>
                BYTE         8-bit unsigned integer. 
                CHAR         8-bit signed integer. 
                USHORT       16-bit unsigned integer. 
                SHORT        16-bit signed integer. 
                ULONG        32-bit unsigned integer. 
                LONG         32-bit signed integer. 
                Fixed        32-bit signed fixed-point number (16.16) 
                FWORD        16-bit signed integer (SHORT) that describes a 
                             quantity in FUnits. 
                UFWORD       16-bit unsigned integer (USHORT) that describes a 
                             quantity in FUnits. 
                F2DOT14      16-bit signed fixed number with the low 14 bits of 
                             fraction (2.14). 
                LONGDATETIME Date represented in number of seconds since 12:00 
                             midnight, January 1, 1904. The value is represented 
                             as a signed 64-bit integer. 
                Tag          Array of four uint8s (length = 32 bits) used to identify 
                             a script, language system, feature, or baseline 
                GlyphID      Glyph index number, same as uint16(length = 16 bits) 
                Offset       Offset to a table, same as uint16 (length = 16 bits), 
                             NULL offset = 0x0000 
                </p>
            </remarks>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.FontFileStream.#ctor(System.Byte[])">
            <summary>
                Initialises a new instance of the <see cref="T:Telerik.Pdf.Gdi.Font.FontFileStream"/> 
                class using the supplied byte array as the underlying buffer.
            </summary>
            <param name="data">The font data encoded in a byte array.</param>
            <exception cref="T:System.ArgumentNullException">
                <i>data</i> is a null reference.
            </exception>
            <exception cref="T:System.ArgumentException">
                <i>data</i> is a zero-length array.
            </exception>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.FontFileStream.#ctor(System.IO.Stream)">
            <summary>
                Initialises a new instance of the <see cref="T:Telerik.Pdf.Gdi.Font.FontFileStream"/>
                class using the supplied stream as the underlying buffer.
            </summary>
            <param name="stream">Reference to an existing stream.</param>
            <exception cref="T:System.ArgumentNullException">
                <i>stream</i> is a null reference.
            </exception>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.FontFileStream.ReadByte">
            <summary>
                Reads an unsigned byte from the font file.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.FontFileStream.WriteByte(System.Byte)">
            <summary>
                Writes an unsigned byte from the font file.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.FontFileStream.ReadChar">
            <summary>
                Reads an signed byte from the font file.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.FontFileStream.WriteChar(System.SByte)">
            <summary>
                Writes a signed byte from the font file.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.FontFileStream.ReadShort">
            <summary>
                Reads a short (16-bit signed integer) from the font file.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.FontFileStream.WriteShort(System.Int32)">
            <summary>
                Writes a short (16-bit signed integer) to the font file.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.FontFileStream.ReadFWord">
            <summary>
                Reads a short (16-bit signed integer) from the font file.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.FontFileStream.WriteFWord(System.Int32)">
            <summary>
                Writes a short (16-bit signed integer) to the font file.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.FontFileStream.ReadUShort">
            <summary>
                Reads a int (16-bit unsigned integer) from the font file.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.FontFileStream.WriteUShort(System.Int32)">
            <summary>
                Writes a int (16-bit unsigned integer) to the font file.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.FontFileStream.ReadUFWord">
            <summary>
                Reads a int (16-bit unsigned integer) from the font file.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.FontFileStream.WriteUFWord(System.Int32)">
            <summary>
                Writes a int (16-bit unsigned integer) to the font file.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.FontFileStream.ReadLong">
            <summary>
                Reads an int (32-bit signed integer) from the font file.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.FontFileStream.WriteLong(System.Int32)">
            <summary>
                Writes an int (32-bit signed integer) to the font file.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.FontFileStream.ReadULong">
            <summary>
                Reads a int (32-bit unsigned integer) from the font file.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.FontFileStream.WriteULong(System.Int64)">
            <summary>
                Writes a int (32-bit unsigned integer) to the font file.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.FontFileStream.ReadFixed">
            <summary>
                Reads an int (32-bit signed integer) from the font file.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.FontFileStream.WriteFixed(System.Int32)">
            <summary>
                Writes an int (32-bit unsigned integer) to the font file.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.FontFileStream.ReadLongDateTime">
            <summary>
                Reads a long (64-bit signed integer) from the font file.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.FontFileStream.WriteDateTime(System.Int64)">
            <summary>
                Writes a long (64-bit signed integer) to the font file.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.FontFileStream.ReadTag">
            <summary>
                Reads a tag (array of four bytes) from the font stream.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.FontFileStream.WriteTag(System.Byte[])">
            <summary>
                Writes a tab (array of four bytes) to the font file.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.FontFileStream.Pad">
            <summary>
                Ensures the stream is padded on a 4-byte boundary.
            </summary>
            <remarks>
                This method will output between 0 and 3 bytes to the stream.
            </remarks>
            <returns>
                A value between 0 and 3 (inclusive).
            </returns>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.FontFileStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
                Writes a sequence of bytes to the underlying stream.
            </summary>
            <param name="buffer"></param>
            <param name="offset"></param>
            <param name="count"></param>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.FontFileStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
                Reads a block of bytes from the current stream and writes 
                the data to buffer.
            </summary>
            <param name="buffer">A byte buffer big enough to store <i>count</i> bytes.</param>
            <param name="offset">The byte offset in buffer to begin reading.</param>
            <param name="count">Number of bytes to read.</param>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.FontFileStream.Skip(System.Int64)">
            <summary>
                Offsets the stream position by the supplied number of bytes.
            </summary>
            <param name="offset"></param>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.FontFileStream.SetRestorePoint">
            <summary>
                Saves the current stream position onto a marker stack.
            </summary>
            <returns>
                Returns the current stream position.
            </returns>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.FontFileStream.Restore">
            <summary>
                Sets the stream <see cref="P:Telerik.Pdf.Gdi.Font.FontFileStream.Position"/> using the marker at the 
                head of the marker stack.
            </summary>
            <returns>
                Returns the stream position before it was reset.
            </returns>
            <exception cref="T:System.InvalidOperationException">
                If the markers stack is empty.
            </exception>
        </member>
        <member name="P:Telerik.Pdf.Gdi.Font.FontFileStream.Position">
            <summary>
                Gets or sets the current position of the font stream.
            </summary>
        </member>
        <member name="P:Telerik.Pdf.Gdi.Font.FontFileStream.Length">
            <summary>
                Gets the length of the font stream in bytes.
            </summary>
        </member>
        <member name="T:Telerik.Pdf.Gdi.Font.FontFileWriter">
            <summary>
                A specialised stream writer for creating OpenType fonts.
            </summary>
        </member>
        <member name="F:Telerik.Pdf.Gdi.Font.FontFileWriter.OffsetTableSize">
            <summary>
                Size of the offset table in bytes.
            </summary>
        </member>
        <member name="F:Telerik.Pdf.Gdi.Font.FontFileWriter.stream">
            <summary>
                The underlying stream.
            </summary>
        </member>
        <member name="F:Telerik.Pdf.Gdi.Font.FontFileWriter.tables">
            <summary>
                List of font tables to write.
            </summary>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.FontFileWriter.#ctor(System.IO.Stream)">
            <summary>
                Creates a new instance of the <see cref="T:Telerik.Pdf.Gdi.Font.FontFileWriter"/> class
                using <i>stream</i> as the underlying stream object.
            </summary>
            <param name="stream"></param>
            <exception cref="T:System.ArgumentException">
                If <i>stream</i> is not writable.
            </exception>
            <exception cref="T:System.ArgumentNullException">
                If <i>streamm</i> is a null reference.
            </exception>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.FontFileWriter.Write(Telerik.Pdf.Gdi.Font.FontTable)">
            <summary>
                Queues the supplied <see cref="T:Telerik.Pdf.Gdi.Font.FontTable"/> for writing 
                to the underlying stream.
            </summary>
            <remarks>
                The method will not immediately write the supplied font 
                table to the underlying stream.  Instead it queues the 
                font table since the offset table must be written out 
                before any tables.
            </remarks>
            <param name="table"></param>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.FontFileWriter.Close">
            <summary>
                Writes the header and font tables to the underlying stream.
            </summary>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.FontFileWriter.WriteChecksumAdjustment">
            <summary>
                Updates the checkSumAdjustment field in the head table.
            </summary>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.FontFileWriter.WriteTables">
            <summary>
                Writes out each table to the font stream.
            </summary>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.FontFileWriter.WriteOffsetTable">
            <summary>
                Writes the offset table that appears at the beginning of 
                every TrueType/OpenType font.
            </summary>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.FontFileWriter.SkipTableDirectory">
            <summary>
                Does not actually write the table directory - simply "allocates"
                space for it in the stream.
            </summary>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.FontFileWriter.MaxPow2(System.Int32)">
            <summary>
                Returns the maximum power of 2 &lt;= max
            </summary>
            <param name="max"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.FontFileWriter.CalculateCheckSumAdjustment">
            <summary>
                Calculates the checksum of the entire font.
            </summary>
            <remarks>
                The underlying <see cref="T:Telerik.Pdf.Gdi.Font.FontFileStream"/> must be aligned on
                a 4-byte boundary.
            </remarks>
            <returns></returns>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.FontFileWriter.CalculateCheckSum(System.Int64)">
            <summary>
                Calculates the checksum of a <see cref="T:Telerik.Pdf.Gdi.Font.FontTable"/>.
            </summary>
            <remarks>
                The supplied <i>stream</i> must be positioned at the beginning of 
                the table.
            </remarks>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="P:Telerik.Pdf.Gdi.Font.FontFileWriter.Stream">
            <summary>
                Gets the underlying <see cref="T:Telerik.Pdf.Gdi.Font.FontFileStream"/>.
            </summary>
        </member>
        <member name="T:Telerik.Pdf.Gdi.Font.FontSubset">
            <summary>
                Generates a subset from a TrueType font.
            </summary>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.FontSubset.#ctor(Telerik.Pdf.Gdi.Font.FontFileReader)">
            <summary>
                Creates a new instance of the FontSubset class.
            </summary>
            <param name="reader">TrueType font parser.</param>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.FontSubset.Generate(System.IO.MemoryStream)">
            <summary>
                Writes the font subset to the supplied output stream.
            </summary>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.GlyphReader.ReadGlyph(System.Int32)">
            <summary>
                Reads a glyph description from the specified offset.
            </summary>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.GlyphReader.ReadCompositeGlyph(Telerik.Pdf.Gdi.Font.FontFileStream,Telerik.Pdf.Gdi.Font.Glyph)">
            <summary>
                Populate the <i>composites</i>IList containing all child glyphs 
                that this glyph uses.
            </summary>
            <remarks>
                The <i>stream</i> parameter must be positioned 10 bytes from 
                the beginning of the glyph description, i.e. the flags field.
            </remarks>
            <param name="stream"></param>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.GlyphReader.GetGlyphLength(System.Int32)">
            <summary>
                Gets the length of the glyph description in bytes at 
                index <i>index</i>.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Pdf.Gdi.Font.BitMasks">
            <summary>
                Bit masks of the flags field in a composite glyph.
            </summary>
        </member>
        <member name="T:Telerik.Pdf.Gdi.Font.IndexMappings">
            <summary>
                Utility class that stores a list of glyph indices and their 
                asociated subset indices.
            </summary>
        </member>
        <member name="F:Telerik.Pdf.Gdi.Font.IndexMappings.glyphToSubset">
            <summary>
                Maps a glyph index to a subset index.
            </summary>
        </member>
        <member name="F:Telerik.Pdf.Gdi.Font.IndexMappings.subsetToGlyph">
            <summary>
                Maps a subset index to glyph index.
            </summary>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.IndexMappings.#ctor">
            <summary>
                Class constructor.
            </summary>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.IndexMappings.HasMapping(System.Int32)">
            <summary>
                Determines whether a mapping exists for the supplied glyph index.
            </summary>
            <param name="glyphIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.IndexMappings.Map(System.Int32)">
            <summary>
                Returns the subset index for <i>glyphIndex</i>.  If a subset 
                index does not exist for <i>glyphIndex</i> one is generated.
            </summary>
            <param name="glyphIndex"></param>
            <returns>A subset index.</returns>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.IndexMappings.Add(System.Int32[])">
            <summary>
                Adds the list of supplied glyph indices to the index mappings using 
                the next available subset index for each glyph index.
            </summary>
            <param name="glyphIndices"></param>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.IndexMappings.GetSubsetIndex(System.Int32)">
            <summary>
                Gets the subset index of <i>glyphIndex</i>.
            </summary>
            <param name="glyphIndex"></param>
            <returns>
                A glyph index or <b>-1</b> if a glyph to subset mapping does not exist.
            </returns>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.IndexMappings.GetGlyphIndex(System.Int32)">
            <summary>
                Gets the glyph index of <i>subsetIndex</i>.
            </summary>
            <param name="subsetIndex"></param>
            <returns>
                A subset index or <b>-1</b> if a subset to glyph mapping does not exist.
            </returns>
        </member>
        <member name="P:Telerik.Pdf.Gdi.Font.IndexMappings.Count">
            <summary>
                Gets the number of glyph to subset index mappings.
            </summary>
        </member>
        <member name="P:Telerik.Pdf.Gdi.Font.IndexMappings.GlyphIndices">
            <summary>
                Gets a list of glyph indices sorted in ascending order.
            </summary>
        </member>
        <member name="P:Telerik.Pdf.Gdi.Font.IndexMappings.SubsetIndices">
            <summary>
                Gets a list of subset indices sorted in ascending order.
            </summary>
        </member>
        <member name="F:Telerik.Pdf.Gdi.Font.KerningPairs.pairs">
            <summary>
                Key - Kerning pair identifier
                Value - Kerning amount
            </summary>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.KerningPairs.#ctor">
            <summary>
                Creates an instance of KerningPairs allocating space for 
                100 kerning pairs.
            </summary>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.KerningPairs.#ctor(System.Int32)">
            <summary>
                Creates an instance of KerningPairs allocating space for 
                <i>numPairs</i> kerning pairs.
            </summary>
            <param name="numPairs"></param>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.KerningPairs.HasKerning(System.Int32,System.Int32)">
            <summary>
                Returns true if a kerning value exists for the supplied 
                glyph index pair.
            </summary>
            <param name="left">Glyph index for left-hand glyph.</param>
            <param name="right">Glyph index for right-hand glyph.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.KerningPairs.Add(System.Int32,System.Int32,System.Int32)">
            <summary>
                Creates a new kerning pair.
            </summary>
            <remarks>
                This method will ignore duplicates.
            </remarks>
            <param name="left">The glyph index for the left-hand glyph in the kerning pair.</param>
            <param name="right">The glyph index for the right-hand glyph in the kerning pair. </param>
            <param name="value">The kerning value for the supplied pair.</param>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.KerningPairs.GetIndex(System.Int32,System.Int32)">
            <summary>
                Returns a kerning pair identifier.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="P:Telerik.Pdf.Gdi.Font.KerningPairs.Item(System.Int32,System.Int32)">
            <summary>
                Gets the kerning amount for the supplied glyph index pair.
            </summary>
        </member>
        <member name="P:Telerik.Pdf.Gdi.Font.KerningPairs.Length">
            <summary>
                Gets the number of kernings pairs.
            </summary>
        </member>
        <member name="T:Telerik.Pdf.Gdi.Font.PrimitiveSizes">
            <summary>
                A helper designed that provides the size of each TrueType primitives.
            </summary>
        </member>
        <member name="T:Telerik.Pdf.Gdi.Font.TableNames">
            <summary>
                List of all TrueType and OpenType tables
            </summary>
        </member>
        <member name="M:Telerik.Pdf.Gdi.Font.TableNames.ToUint(System.String)">
            <summary>
                Converts one of the predefined table names to an unsigned integer.
            </summary>
            <param name="tableName"></param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Pdf.Gdi.Abc">
            <summary>
                The ABC structure contains the width of a character in a TrueType font. 
            </summary>
        </member>
        <member name="T:Telerik.Pdf.Gdi.LogFont">
            <summary>
                TODO: Figure out why CreateFontIndirect fails when this class 
                is converted to a struct.
            </summary>
        </member>
        <member name="T:Telerik.Pdf.Gdi.OutlineTextMetric">
            <summary>
                The OUTLINETEXTMETRIC structure contains metrics describing 
                a TrueType font. 
            </summary>
        </member>
        <member name="T:Telerik.Pdf.Gdi.Panose">
            <summary>
                The PANOSE structure describes the PANOSE font-classification values 
                for a TrueType font. These characteristics are then used to associate 
                the font with other fonts of similar appearance but different names. 
            </summary>
        </member>
        <member name="T:Telerik.Pdf.Gdi.Point">
            <summary>
                The Point structure defines the x- and y- coordinates of a point. 
            </summary>
        </member>
        <member name="T:Telerik.Pdf.Gdi.Rect">
            <summary>
                The Rect structure defines the coordinates of the upper-left 
                and lower-right corners of a rectangle
            </summary>
        </member>
        <member name="T:Telerik.Pdf.Gdi.TextMetric">
            <summary>
                The TEXTMETRIC structure contains basic information about a physical 
                font.  All sizes are specified in logical units; that is, they depend 
                on the current mapping mode of the display context. 
            </summary>
        </member>
        <member name="T:Telerik.Pdf.Gdi.GdiDeviceContent">
            <summary>
                A very lightweight wrapper around a Win32 device context
            </summary>
        </member>
        <member name="F:Telerik.Pdf.Gdi.GdiDeviceContent.hDC">
            <summary>
                Pointer to device context created by ::CreateDC()
            </summary>
        </member>
        <member name="M:Telerik.Pdf.Gdi.GdiDeviceContent.#ctor">
            <summary>
                Creates a new device context that matches the desktop display surface
            </summary>
        </member>
        <member name="M:Telerik.Pdf.Gdi.GdiDeviceContent.Finalize">
            <summary>
                Invokes <see cref="M:Telerik.Pdf.Gdi.GdiDeviceContent.Dispose"/>.
            </summary>
        </member>
        <member name="M:Telerik.Pdf.Gdi.GdiDeviceContent.Dispose(System.Boolean)">
            <summary>
                Delete the device context freeing the associated memory.
            </summary>
        </member>
        <member name="M:Telerik.Pdf.Gdi.GdiDeviceContent.SelectFont(Telerik.Pdf.Gdi.GdiFont)">
            <summary>
                Selects a font into a device context (DC). The new object 
                replaces the previous object of the same type. 
            </summary>
            <param name="font">Handle to object.</param>
            <returns>A handle to the object being replaced.</returns>
        </member>
        <member name="M:Telerik.Pdf.Gdi.GdiDeviceContent.GetCurrentObject(Telerik.Pdf.Gdi.GdiDcObject)">
            <summary>
                Gets a handle to an object of the specified type that has been 
                selected into this device context. 
            </summary>
        </member>
        <member name="P:Telerik.Pdf.Gdi.GdiDeviceContent.Handle">
            <summary>
                Returns a handle to the underlying device context
            </summary>
        </member>
        <member name="T:Telerik.Pdf.Gdi.GdiFont">
            <summary>
                A thin wrapper around a handle to a font
            </summary>
        </member>
        <member name="M:Telerik.Pdf.Gdi.GdiFont.#ctor(System.IntPtr,System.String,System.Int32)">
            <summary>
                Class constructor
            </summary>
            <param name="hFont">A handle to an existing font.</param>
        </member>
        <member name="M:Telerik.Pdf.Gdi.GdiFont.Finalize">
            <summary>
                Class destructor
            </summary>
        </member>
        <member name="M:Telerik.Pdf.Gdi.GdiFont.CreateFont(System.String,System.Int32,System.Boolean,System.Boolean)">
            <summary>
                Creates a font based on the supplied typeface name and size.
            </summary>
            <param name="faceName">The typeface name of a font.</param>
            <param name="height">
                The height, in logical units, of the font's character 
                cell or character.
            </param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Pdf.Gdi.GdiFont.CreateDesignFont(System.String,System.Boolean,System.Boolean,Telerik.Pdf.Gdi.GdiDeviceContent)">
            <summary>
                Creates a font whose height is equal to the negative value 
                of the EM Square
            </summary>
            <param name="faceName">The typeface name of a font.</param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Pdf.Gdi.GdiFontCreator">
            <summary>
                Retrieves all pertinent TrueType tables by invoking GetFontData.
            </summary>
        </member>
        <member name="T:Telerik.Pdf.Gdi.GdiFontEnumerator">
            <summary>
                Summary description for GdiFontEnumerator.
            </summary>
        </member>
        <member name="M:Telerik.Pdf.Gdi.GdiFontEnumerator.#ctor(Telerik.Pdf.Gdi.GdiDeviceContent)">
            <summary>
                Class constructor.
            </summary>
            <param name="dc">A non-null reference to a wrapper around a GDI device context.</param>
        </member>
        <member name="M:Telerik.Pdf.Gdi.GdiFontEnumerator.GetStyles(System.String)">
            <summary>
                Returns a list of font styles associated with <i>familyName</i>.
            </summary>
            <param name="familyName"></param>
            <returns></returns>
        </member>
        <member name="P:Telerik.Pdf.Gdi.GdiFontEnumerator.FamilyNames">
            <summary>
                Returns a list of font family names sorted in ascending order.
            </summary>
        </member>
        <member name="T:Telerik.Pdf.Gdi.GdiFontMetrics">
            <summary>
                Class that obtains OutlineTextMetrics for a TrueType font
            </summary>
            <example>
            </example>
        </member>
        <member name="M:Telerik.Pdf.Gdi.GdiFontMetrics.GetFontData">
            <summary>
                Gets font metric data for a TrueType font or TrueType collection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Pdf.Gdi.GdiFontMetrics.GetWidths">
            <summary>
                Retrieves the widths, in PDF units, of consecutive glyphs.
            </summary>
            <returns>
                An array of integers whose size is equal to the number of glyphs 
                specified in the 'maxp' table.
                The width at location 0 is the width of glyph with index 0, 
                The width at location 1 is the width of glyph with index 1, 
                etc...
            </returns>
        </member>
        <member name="M:Telerik.Pdf.Gdi.GdiFontMetrics.GetAnsiWidths">
            <summary>
                Returns the width, in PDF units, of consecutive glyphs for the 
                WinAnsiEncoding only.
            </summary>
            <returns>An array consisting of 256 elements.</returns>
        </member>
        <member name="M:Telerik.Pdf.Gdi.GdiFontMetrics.MapCharacter(System.Char)">
            <summary>
                Translates the supplied character to a glyph index using the 
                currently selected font.
            </summary>
            <param name="c">A unicode character.</param>
            <returns></returns>
        </member>
        <member name="P:Telerik.Pdf.Gdi.GdiFontMetrics.FaceName">
            <summary>
                Retrieves the typeface name of the font that is selected into the 
                device context supplied to the GdiFontMetrics constructor. 
            </summary>
        </member>
        <member name="P:Telerik.Pdf.Gdi.GdiFontMetrics.EmSquare">
            <summary>
                Specifies the number of logical units defining the x- or y-dimension 
                of the em square for this font.  The common value for EmSquare is 2048.
            </summary>
            <remarks>
                The number of units in the x- and y-directions are always the same 
                for an em square.) 
            </remarks>
        </member>
        <member name="P:Telerik.Pdf.Gdi.GdiFontMetrics.ItalicAngle">
            <summary>
                Gets the main italic angle of the font expressed in tenths of 
                a degree counterclockwise from the vertical.
            </summary>
            <remarks>
                Regular (roman) fonts have a value of zero. Italic fonts typically 
                have a negative italic angle (that is, they lean to the right). 
            </remarks>
        </member>
        <member name="P:Telerik.Pdf.Gdi.GdiFontMetrics.Ascent">
            <summary>
                Specifies the maximum distance characters in this font extend 
                above the base line. This is the typographic ascent for the font. 
            </summary>
        </member>
        <member name="P:Telerik.Pdf.Gdi.GdiFontMetrics.Descent">
            <summary>
                Specifies the maximum distance characters in this font extend 
                below the base line. This is the typographic descent for the font. 
            </summary>
        </member>
        <member name="P:Telerik.Pdf.Gdi.GdiFontMetrics.CapHeight">
            <summary>
                Gets the distance between the baseline and the approximate 
                height of uppercase letters.
            </summary>
        </member>
        <member name="P:Telerik.Pdf.Gdi.GdiFontMetrics.XHeight">
            <summary>
                Gets the distance between the baseline and the approximate 
                height of non-ascending lowercase letters.
            </summary>
        </member>
        <member name="P:Telerik.Pdf.Gdi.GdiFontMetrics.StemV">
            <summary>
                TODO: The thickness, measured horizontally, of the dominant vertical 
                stems of the glyphs in the font.
            </summary>
        </member>
        <member name="P:Telerik.Pdf.Gdi.GdiFontMetrics.FirstChar">
            <summary>
                Gets the value of the first character defined in the font
            </summary>
        </member>
        <member name="P:Telerik.Pdf.Gdi.GdiFontMetrics.LastChar">
            <summary>
                Gets the value of the last character defined in the font
            </summary>
        </member>
        <member name="P:Telerik.Pdf.Gdi.GdiFontMetrics.AverageWidth">
            <summary>
                Gets the average width of glyphs in a font.
            </summary>
        </member>
        <member name="P:Telerik.Pdf.Gdi.GdiFontMetrics.MaxWidth">
            <summary>
                Gets the maximum width of glyphs in a font.
            </summary>
        </member>
        <member name="P:Telerik.Pdf.Gdi.GdiFontMetrics.IsEmbeddable">
            <summary>
                Gets a value indicating whether the font can be legally embedded 
                within a document.
            </summary>
        </member>
        <member name="P:Telerik.Pdf.Gdi.GdiFontMetrics.IsSubsettable">
            <summary>
                Gets a value indicating whether the font can be legally subsetted.
            </summary>
        </member>
        <member name="P:Telerik.Pdf.Gdi.GdiFontMetrics.BoundingBox">
            <summary>
                Gets the font's bounding box.
            </summary>
            <remarks>
                This is the smallest rectangle enclosing the shape that would 
                result if all the glyphs of the font were placed with their 
                origins cooincident and then filled.
            </remarks>
        </member>
        <member name="P:Telerik.Pdf.Gdi.GdiFontMetrics.Flags">
            <summary>
                Gets a collection of flags defining various characteristics of 
                a font (e.g. serif or sans-serif, symbolic, etc).
            </summary>
        </member>
        <member name="P:Telerik.Pdf.Gdi.GdiFontMetrics.KerningPairs">
            <summary>
                Gets a collection of kerning pairs.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Telerik.Pdf.Gdi.GdiFontMetrics.AnsiKerningPairs">
            <summary>
                Gets a collection of kerning pairs for characters defined in 
                the WinAnsiEncoding scheme only.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Pdf.Gdi.GdiKerningPairs.#ctor(Telerik.Pdf.Gdi.Font.KerningPairs,Telerik.Pdf.Gdi.PdfUnitConverter)">
            <summary>
                Class constructor.
            </summary>
            <param name="pairs">Kerning pairs read from the TrueType font file.</param>
            <param name="converter">Class to convert from TTF to PDF units.</param>
        </member>
        <member name="M:Telerik.Pdf.Gdi.GdiKerningPairs.HasPair(System.Int32,System.Int32)">
            <summary>
                Returns true if a kerning value exists for the supplied 
                character index pair.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="P:Telerik.Pdf.Gdi.GdiKerningPairs.Count">
            <summary>
                Gets the number of kerning pairs.
            </summary>
        </member>
        <member name="P:Telerik.Pdf.Gdi.GdiKerningPairs.Item(System.Int32,System.Int32)">
            <summary>
                Gets the kerning amount for the supplied index pair or 0 if 
                a kerning pair does not exist.
            </summary>
        </member>
        <member name="T:Telerik.Pdf.Gdi.GdiPrivateFontCollection">
            <summary>
                Installs a collection of private fonts on the system and uninstalls 
                them when disposed.
            </summary>
        </member>
        <member name="F:Telerik.Pdf.Gdi.GdiPrivateFontCollection.FR_PRIVATE">
            <summary>
                Specifies that only the process that called the AddFontResourceEx 
                function can use this font.
            </summary>
        </member>
        <member name="F:Telerik.Pdf.Gdi.GdiPrivateFontCollection.FR_NOT_ENUM">
            <summary>
                Specifies that no process, including the process that called the 
                AddFontResourceEx function, can enumerate this font.
            </summary>
        </member>
        <member name="F:Telerik.Pdf.Gdi.GdiPrivateFontCollection.fonts">
            <summary>
                Collection of absolute filenames.
            </summary>
        </member>
        <member name="M:Telerik.Pdf.Gdi.GdiPrivateFontCollection.AddFontFile(System.String)">
            <summary>
                Adds <i>filename</i> to this private font collection.
            </summary>
            <param name="filename">
                Absolute path to a TrueType font or collection.
            </param>
            <seealso cref="M:Telerik.Pdf.Gdi.GdiPrivateFontCollection.AddFontFile(System.IO.FileInfo)"/>
            <exception cref="T:System.ArgumentNullException">If <i>filename</i> is null.</exception>
            <exception cref="T:System.ArgumentException">If <i>filename</i> is the empty string.</exception>
        </member>
        <member name="M:Telerik.Pdf.Gdi.GdiPrivateFontCollection.AddFontFile(System.IO.FileInfo)">
            <summary>
                Adds <i>fontFile</i> to this private font collection.
            </summary>
            <param name="fontFile">
                Absolute path to a TrueType font or collection.
            </param>
            <exception cref="T:System.IO.FileNotFoundException">
                If <i>fontFile</i> does not exist.
            </exception>
            <exception cref="T:System.ArgumentException">
                If <i>fontFile</i> has already been added.
            </exception>
            <exception cref="T:System.ArgumentException">
                If <i>fontFile</i> cannot be added to the system font collection.
            </exception>
        </member>
        <member name="T:Telerik.Pdf.Gdi.GdiUnicodeRanges">
            <summary>
                Custom collection that maintains a list of Unicode ranges 
                a font supports and the glyph indices of each character.
                The list of ranges is obtained by invoking GetFontUnicodeRanges,
                however the associated glyph indices are lazily instantiated as 
                required to save memory.
            </summary>
        </member>
        <member name="F:Telerik.Pdf.Gdi.GdiUnicodeRanges.unicodeRanges">
            <summary>
                List of unicode ranges in ascending numerical order.  The order 
                is important since a binary search is used to locate and 
                uicode range from a charcater.
            </summary>
        </member>
        <member name="M:Telerik.Pdf.Gdi.GdiUnicodeRanges.#ctor(Telerik.Pdf.Gdi.GdiDeviceContent)">
            <summary>
                Class constuctor.
            </summary>
            <param name="dc"></param>
        </member>
        <member name="M:Telerik.Pdf.Gdi.GdiUnicodeRanges.LoadRanges(Telerik.Pdf.Gdi.GdiDeviceContent)">
            <summary>
                Loads all the unicode ranges.
            </summary>
        </member>
        <member name="M:Telerik.Pdf.Gdi.GdiUnicodeRanges.GetRange(System.Char)">
            <summary>
                Locates the <see cref="T:Telerik.Pdf.Gdi.UnicodeRange"/> for the supplied character.
            </summary>
            <param name="c"></param>
            <returns>
                The <see cref="T:Telerik.Pdf.Gdi.UnicodeRange"/> object housing <i>c</i> or null 
                if a range does not exist for <i>c</i>.
            </returns>
        </member>
        <member name="M:Telerik.Pdf.Gdi.GdiUnicodeRanges.MapCharacter(System.Char)">
            <summary>
                Translates the supplied character to a glyph index.
            </summary>
            <param name="c">Any unicode character.</param>
            <returns>
                A glyph index for <i>c</i> or 0 the supplied character does 
                not exist in the font selected into the device context.
            </returns>
        </member>
        <member name="P:Telerik.Pdf.Gdi.GdiUnicodeRanges.Count">
            <summary>
                Gets the number of unicode ranges.
            </summary>
        </member>
        <member name="T:Telerik.Pdf.Gdi.PdfUnitConverter">
            <summary>
                Converts from logical TTF units to PDF units.
            </summary>
        </member>
        <member name="M:Telerik.Pdf.Gdi.PdfUnitConverter.#ctor(System.Int32)">
            <summary>
                Class constructor.
            </summary>
            <param name="emSquare">
                Specifies the number of logical units defining the x- or 
                y-dimension of the em square of a font.
            </param>
        </member>
        <member name="M:Telerik.Pdf.Gdi.PdfUnitConverter.ToPdfUnits(System.Int32)">
            <summary>
                Convert the supplied integer from TrueType units to PDF units 
                based on the EmSquare
            </summary>
            <param name="value"></param>
            <returns>
                If the value of <i>emSquare</i> is zero, this method will 
                always return <i>value</i>.
            </returns>
        </member>
        <member name="T:Telerik.Pdf.Gdi.UnicodeRange">
            <summary>
                Class that represents a unicode character range as returned 
                by the GetFontUnicodeRanges function.
            </summary>
        </member>
        <member name="F:Telerik.Pdf.Gdi.UnicodeRange.indices">
            <summary>
                Array of glyph indices for each character represented by 
                this range begining at <see cref="P:Telerik.Pdf.Gdi.UnicodeRange.Start"/>.
            </summary>
        </member>
        <member name="M:Telerik.Pdf.Gdi.UnicodeRange.#ctor(Telerik.Pdf.Gdi.GdiDeviceContent,System.Int32,System.Int32)">
            <summary>
                Class constructor.
            </summary>
            <param name="start">Value representing start of unicode range.</param>
            <param name="end">Value representing end of unicode range.</param>
        </member>
        <member name="M:Telerik.Pdf.Gdi.UnicodeRange.MapCharacter(System.Char)">
            <summary>
                Returns the glyph index of <i>c</i>.
            </summary>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Pdf.Gdi.UnicodeRange.LoadGlyphIndices">
            <summary>
                Populates the <i>indices</i> array with the glyph index of each 
                character represented by this rnage starting at <see cref="P:Telerik.Pdf.Gdi.UnicodeRange.Start"/>.
            </summary>
        </member>
        <member name="P:Telerik.Pdf.Gdi.UnicodeRange.Start">
            <summary>
                Gets a value representing the start of the unicode range.
            </summary>
        </member>
        <member name="P:Telerik.Pdf.Gdi.UnicodeRange.End">
            <summary>
                Gets a value representing the end of the unicode range.
            </summary>
        </member>
        <member name="T:Telerik.Pdf.Gdi.UnicodeRangeComparer">
            <summary>
            Summary description for UnicodeRangeComparer.
            </summary>
        </member>
        <member name="T:Telerik.Pdf.Gdi.WinAnsiMapping">
            <summary>
                Maps a Unicode character to a WinAnsi codepoint value.
            </summary>
        </member>
        <member name="F:Telerik.Pdf.Gdi.WinAnsiMapping.winAnsiEncoding">
            <summary>
                First column is codepoint value.  Second column is unicode value.
            </summary>
        </member>
        <member name="T:Telerik.Pdf.Security.Arc4">
            <summary>
                ARC4 is a fast, simple stream encryption algorithm that is
                compatible with RSA Security's RC4 algorithm.
            </summary>
        </member>
        <member name="M:Telerik.Pdf.Security.Arc4.Initialise(System.Byte[])">
            <summary>
                Initialises internal state from the passed key.
            </summary>
            <remarks>
                Can be called again with a new key to reuse an Arc4 instance.
            </remarks>
            <param name="key">The encryption key.</param>
        </member>
        <member name="M:Telerik.Pdf.Security.Arc4.Encrypt(System.Byte[],System.Byte[])">
            <summary>
                Encrypts or decrypts the passed byte array.
            </summary>
            <param name="dataIn">
                The data to be encrypted or decrypted.
            </param>
            <param name="dataOut">
                The location that the encrypted or decrypted data is to be placed.
                The passed array should be at least the same size as dataIn.
                It is permissible for the same array to be passed for both dataIn
                and dataOut.
            </param>
        </member>
        <member name="M:Telerik.Pdf.Security.Arc4.Arc4Byte">
            <summary>
                Generates a pseudorandom byte used to encrypt or decrypt.
            </summary>
        </member>
        <member name="T:Telerik.Pdf.Security.SecurityManager">
            <summary>
                Implements Adobe's standard security handler.  A security handler is 
                a software module that implements various aspects of the encryption 
                process.
            </summary>
        </member>
        <member name="M:Telerik.Pdf.Security.SecurityManager.#ctor(Telerik.Pdf.Security.SecurityOptions,Telerik.Pdf.FileIdentifier)">
            <summary>
                Constructs a new standard security manager.
            </summary>
            <param name="options">
                The user supplied PDF options that provides access to the passwords and 
                the access permissions.
            </param>
            <param name="fileId">
                The PDF document's file identifier (see section 8.3 of PDF specification).
            </param>
        </member>
        <member name="M:Telerik.Pdf.Security.SecurityManager.CreateMasterKey(Telerik.Pdf.Security.SecurityOptions,Telerik.Pdf.FileIdentifier)">
            <summary>
                Computes the master key that is used to encrypt string and stream data 
                in the PDF document.
            </summary>
            <param name="options">
                The user supplied PDF options that provides access to the passwords and
                the access permissions.
            </param>
            <param name="fileId">
                The PDF document's file identifier (see section 8.3 of PDF specification).
            </param>
        </member>
        <member name="M:Telerik.Pdf.Security.SecurityManager.CreateOwnerEntry(Telerik.Pdf.Security.SecurityOptions)">
            <summary>
                Computes the O(owner) value in the encryption dictionary.
            </summary>
            <remarks>
                Corresponds to algorithm 3.3 on page 69 of the PDF specficiation.
            </remarks>
            <param name="options">
                The user supplied PDF options that provides access to the passwords.
            </param>
        </member>
        <member name="M:Telerik.Pdf.Security.SecurityManager.CreateUserEntry(Telerik.Pdf.Security.SecurityOptions)">
            <summary>
                Computes the U(user) value in the encryption dictionary.
            </summary>
            <remarks>
                Corresponds to algorithm 3.4 on page 70 of the PDF specficiation.
            </remarks>
            <param name="options">
                The user supplied PDF options that provides access to the passwords.
            </param>
        </member>
        <member name="M:Telerik.Pdf.Security.SecurityManager.Encrypt(System.Byte[],Telerik.Pdf.PdfObjectId)">
            <summary>
                Encrypts the passed byte array using the ARC4 cipher.
            </summary>
        </member>
        <member name="M:Telerik.Pdf.Security.SecurityManager.ComputeEncryptionKey31(System.Byte[],Telerik.Pdf.PdfObjectId)">
            <summary>
                Computes an encryption key that is used to encrypt string and stream data 
                in the PDF document.
            </summary>
            <remarks>
                Corresponds to algorithm 3.1 in section 3.5 of the PDF specficiation.
            </remarks>
        </member>
        <member name="M:Telerik.Pdf.Security.SecurityManager.ComputeEncryptionKey32(System.Byte[],System.Byte[],System.Int32,System.Byte[])">
            <summary>
                Computes an encryption key that is used to encrypt string and stream data 
                in the PDF document.
            </summary>
            <remarks>
                Corresponds to algorithm 3.2 in section 3.5 of the PDF specficiation.
            </remarks>
        </member>
        <member name="M:Telerik.Pdf.Security.SecurityManager.PadPassword(System.String)">
            <summary>
                Pads or truncates a password string to exactly 32-bytes.
            </summary>
            <remarks>
                Corresponds to step 1 of algorithm 3.2 on page 69 of the PDF 1.3 specficiation.
            </remarks>
            <param name="password">The password to pad or truncate.</param>
            <returns>
                A byte array of length 32 bytes containing the padded or truncated password.
            </returns>
        </member>
        <member name="M:Telerik.Pdf.Security.SecurityManager.CheckUserPassword(System.String,System.Byte[],System.Byte[],System.Int32,System.Byte[])">
            <summary>
                Determines if the passed password matches the user password
                used to initialise this security manager.
            </summary>
            <remarks>
                Used for testing purposes only.  Corresponds to algorithm 3.5 in the
                PDF 1.3 specification.
            </remarks>
            <returns>True if the password is correct.</returns>
        </member>
        <member name="M:Telerik.Pdf.Security.SecurityManager.CheckUserPassword(System.Byte[],System.Byte[],System.Byte[],System.Int32,System.Byte[])">
            <summary>
                Performs the actual checking of the user password.
            </summary>
        </member>
        <member name="M:Telerik.Pdf.Security.SecurityManager.CheckOwnerPassword(System.String,System.Byte[],System.Byte[],System.Int32,System.Byte[])">
            <summary>
                Checks the owner password.
            </summary>
        </member>
        <member name="M:Telerik.Pdf.Security.SecurityManager.CompareArray(System.Byte[],System.Byte[])">
            <summary>
                Compares two byte arrays and returns true if they are equal.
            </summary>
        </member>
        <member name="P:Telerik.Pdf.Security.SecurityManager.UserEntry">
            <summary>
                Access to the raw user entry byte array.
            </summary>
            <remarks>
                Required for testing purposes;
            </remarks>
        </member>
        <member name="P:Telerik.Pdf.Security.SecurityManager.OwnerEntry">
            <summary>
                Access to the raw owner entry byte array.
            </summary>
            <remarks>
                Required for testing purposes;
            </remarks>
        </member>
        <member name="F:Telerik.Pdf.Security.SecurityOptions.m_ownerPassword">
            <summary>
                Password that disables all security permissions
            </summary>
        </member>
        <member name="F:Telerik.Pdf.Security.SecurityOptions.m_userPassword">
            <summary>
                The user password 
            </summary>
        </member>
        <member name="F:Telerik.Pdf.Security.SecurityOptions.m_permissions">
            <summary>
                Collection of flags describing permissions granted to user who opens 
                a file with the user password.
            </summary>
            <remarks>
                The given initial value zero's out first two bits.
                The PDF specification dictates that these entries must be 0.
            </remarks>
        </member>
        <member name="M:Telerik.Pdf.Security.SecurityOptions.EnablePrinting(System.Boolean)">
            <summary>
                Enables or disables printing.
            </summary>
            <param name="enable">If true enables printing otherwise false</param>
        </member>
        <member name="M:Telerik.Pdf.Security.SecurityOptions.EnableChanging(System.Boolean)">
            <summary>
                Enable or disable changing the document other than by adding or 
                changing text notes and AcroForm fields.
            </summary>
            <param name="enable"></param>
        </member>
        <member name="M:Telerik.Pdf.Security.SecurityOptions.EnableCopying(System.Boolean)">
            <summary>
                Enable or disable copying of text and graphics from the document.
            </summary>
            <param name="enable"></param>
        </member>
        <member name="M:Telerik.Pdf.Security.SecurityOptions.EnableAdding(System.Boolean)">
            <summary>
                Enable or disable adding and changing text notes and AcroForm fields.
            </summary>
            <param name="enable"></param>
        </member>
        <member name="P:Telerik.Pdf.Security.SecurityOptions.OwnerPassword">
            <summary>
                Returns the owner password as a string.
            </summary>
            <value>
                The default value is null
            </value>
        </member>
        <member name="P:Telerik.Pdf.Security.SecurityOptions.UserPassword">
            <summary>
                Returns the user password as a string.
            </summary>
            <value>
                The default value is null
            </value>
        </member>
        <member name="P:Telerik.Pdf.Security.SecurityOptions.Permissions">
            <summary>
                The document access privileges encoded in a 32-bit unsigned integer
            </summary>
            <value>
                The default access priviliges are:
                <ul>
                <li>Printing disallowed</li>
                <li>Modifications disallowed</li>
                <li>Copy and Paste disallowed</li>
                <li>Addition or modification of annotation/form fields disallowed</li>
                </ul>
                To override any of these priviliges see the <see cref="M:Telerik.Pdf.Security.SecurityOptions.EnablePrinting(System.Boolean)"/>,
                <see cref="M:Telerik.Pdf.Security.SecurityOptions.EnableChanging(System.Boolean)"/>, <see cref="M:Telerik.Pdf.Security.SecurityOptions.EnableCopying(System.Boolean)"/>, 
                <see cref="M:Telerik.Pdf.Security.SecurityOptions.EnableAdding(System.Boolean)"/> methods
            </value>
        </member>
        <member name="T:Telerik.Pdf.BfEntryList">
            <summary>
                A collection of <see cref="T:Telerik.Pdf.BfEntry"/> instances.
            </summary>
        </member>
        <member name="M:Telerik.Pdf.BfEntryList.Add(Telerik.Pdf.BfEntry)">
            <summary>
                Adds the supplied <see cref="T:Telerik.Pdf.BfEntry"/> to the end of the collection.
            </summary>
            <param name="entry"></param>
        </member>
        <member name="M:Telerik.Pdf.BfEntryList.GetEnumerator">
            <summary>
                Returns an ArrayList enumerator that references a read-only version
                of the BfEntry list.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Telerik.Pdf.BfEntryList.Item(System.Int32)">
            <summary>
                Gets the <see cref="T:Telerik.Pdf.BfEntry"/> at <i>index</i>.
            </summary>
        </member>
        <member name="P:Telerik.Pdf.BfEntryList.Count">
            <summary>
                Gets the number of <see cref="T:Telerik.Pdf.BfEntry"/> objects contained by this 
                <see cref="T:Telerik.Pdf.BfEntryList"/>
            </summary>
        </member>
        <member name="P:Telerik.Pdf.BfEntryList.NumRanges">
            <summary>
                Returns the number of <see cref="T:Telerik.Pdf.BfEntry"/> instances that 
                represent bfrange's
            </summary>
            <returns></returns>
        </member>
        <member name="P:Telerik.Pdf.BfEntryList.Ranges">
            <summary>
                
            </summary>
        </member>
        <member name="P:Telerik.Pdf.BfEntryList.NumChars">
            <summary>
                Returns the number of <see cref="T:Telerik.Pdf.BfEntry"/> instances that 
                represent bfchar's
            </summary>
            <returns></returns>
        </member>
        <member name="P:Telerik.Pdf.BfEntryList.Chars">
            <summary>
                
            </summary>
        </member>
        <member name="T:Telerik.Pdf.BfEntry">
            <summary>
                A <see cref="T:Telerik.Pdf.BfEntry"/> class can represent either a bfrange 
                or bfchar.
            </summary>
        </member>
        <member name="M:Telerik.Pdf.BfEntry.#ctor(System.Int32,System.Int32)">
            <summary>
                Class cosntructor.
            </summary>
            <param name="startIndex"></param>
            <param name="unicodeValue"></param>
        </member>
        <member name="M:Telerik.Pdf.BfEntry.IncrementEndIndex">
            <summary>
                Increments the end index by one.
            </summary>
            <remarks>
                Incrementing the end index turns this BfEntry into a bfrange.
            </remarks>
        </member>
        <member name="P:Telerik.Pdf.BfEntry.IsRange">
            <summary>
                Returns <b>true</b> if this BfEntry represents a glyph range, i.e.
                the start index is not equal to the end index.
            </summary>
        </member>
        <member name="P:Telerik.Pdf.BfEntry.IsChar">
            <summary>
                Returns <b>true</b> if this BfEntry represents a bfchar entry, i.e.
                the start index is equal to the end index.
            </summary>
        </member>
        <member name="T:Telerik.Pdf.FileIdentifier">
            <summary>
                A File Identifier is described in section 8.3 of the PDF specification.
                The first string is a permanent identifier based on the contents of the file 
                at the time it was originally created, and does not change as the file is 
                incrementally updated.  The second string is a changing identifier based 
                on the file's contents the last time it was updated.
            </summary>
            <remarks>
                If this class were being use to update a PDF's file identifier, we'd need 
                to add a method to parse an existing file identifier.
            </remarks>
        </member>
        <member name="M:Telerik.Pdf.FileIdentifier.#ctor">
            <summary>
                Initialises the CreatedPart and ModifiedPart to a randomly generated GUID.
            </summary>
        </member>
        <member name="M:Telerik.Pdf.FileIdentifier.#ctor(System.Byte[])">
            <summary>
                Initialises the CreatedPart and ModifiedPart to the passed string.
            </summary>
        </member>
        <member name="P:Telerik.Pdf.FileIdentifier.CreatedPart">
            <summary>
                Returns the CreatedPart as a byte array.
            </summary>
        </member>
        <member name="P:Telerik.Pdf.FileIdentifier.ModifiedPart">
            <summary>
                Returns the ModifiedPart as a byte array.
            </summary>
        </member>
        <member name="T:Telerik.Apoc.Pdf.FontLicenseException">
            <summary>
                Thrown during creation of PDF font object if the font's license
                is violated, e.g. attempting to subset a font that does not permit 
                subsetting.
            </summary>
        </member>
        <member name="T:Telerik.Pdf.PdfCatalog">
            <summary>
                The root of a document's object hierarchy is the catalog dictionary.
            </summary>
            <remarks>
                The document catalog is described in section 3.6.1 of the PDF specification.
            </remarks>
        </member>
        <member name="T:Telerik.Pdf.PdfCIDFont">
            <summary>
                A dictionary that contains information about a CIDFont program.
            </summary>
            <remarks>
                A Type 0 CIDFont contains glyph descriptions based on Adobe's Type 
                1 font format, whereas those in a Type 2 CIDFont are based on the 
                TrueType font format.
            </remarks>
        </member>
        <member name="T:Telerik.Pdf.PdfCIDSystemInfo">
            <summary>
                A dictionary containing entries that define the character collection
                of the CIDFont.
            </summary>
        </member>
        <member name="T:Telerik.Pdf.PdfCMap">
            <summary>
                Class that defines a mapping between character codes (CIDs) 
                to a character selector (Identity-H encoding)
            </summary>
        </member>
        <member name="M:Telerik.Pdf.PdfContentStream.Write(System.String)">
            <summary>
                TODO: This method is temporary.  I'm assuming that all string should 
                be represented as a PdfString object?
            </summary>
            <param name="s"></param>
        </member>
        <member name="M:Telerik.Pdf.PdfCMap.AddBfRanges(System.Collections.IDictionary)">
            <summary>
                Adds the supplied glyph -> unicode pairs.
            </summary>
            <remarks>
                Both the key and value must be a int.
            </remarks>
            <param name="map"></param>
        </member>
        <member name="M:Telerik.Pdf.PdfCMap.AddBfRange(System.Int32,System.Int32)">
            <summary>
                Adds the supplied glyph index to unicode value mapping.
            </summary>
            <param name="glyphIndex"></param>
            <param name="unicodeValue"></param>
        </member>
        <member name="M:Telerik.Pdf.PdfCMap.Write(Telerik.Pdf.PdfWriter)">
            <summary>
                Overriden to create CMap content stream.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:Telerik.Pdf.PdfCMap.WriteBfChars(Telerik.Pdf.BfEntryList)">
            <summary>
                Writes the bfchar entries to the content stream in groups of 100.
            </summary>
            <param name="entries"></param>
        </member>
        <member name="M:Telerik.Pdf.PdfCMap.WriteBfRanges(Telerik.Pdf.BfEntryList)">
            <summary>
                Writes the bfrange entries to the content stream in groups of 100.
            </summary>
            <param name="entries"></param>
        </member>
        <member name="T:Telerik.Apoc.Pdf.PdfCreator">
            <remarks>
                Was originally called PdfDocument, but this name is now in
                use by the Telerik.Pdf library. Eventually all code in this 
                class should either be moved to either the Telerik.Pdf library, 
                or to the PdfRenderer.
            </remarks>
        </member>
        <member name="M:Telerik.Apoc.Pdf.PdfCreator.getOutlineRoot">
            Get the root Outlines object. This method does not write
            the outline to the Pdf document, it simply creates a
            reference for later.
        </member>
        <member name="M:Telerik.Apoc.Pdf.PdfCreator.makeOutline(Telerik.Pdf.PdfOutline,System.String,System.String)">
            Make an outline object and add it to the given outline
            @param parent parent PdfOutline object
            @param label the title for the new outline object
            @param action the PdfAction to reference
        </member>
        <member name="M:Telerik.Apoc.Pdf.PdfCreator.getResources">
             get the /Resources object for the document
            
             @return the /Resources object
        </member>
        <member name="T:Telerik.Pdf.PdfDate">
            <summary>
                PDF defines a standard date format. The PDF date format closely 
                follows the format defined by the international standard ASN.1.
            </summary>
            <remarks>
                The format of the PDF date is defined in section 3.8.2 of the 
                PDF specification.
            </remarks>
        </member>
        <member name="T:Telerik.Pdf.PdfDocument">
            <summary>
                A class that enables a well structured PDF document to be generated.
            </summary>
            <remarks>
                Responsible for allocating object identifiers.
            </remarks>
        </member>
        <member name="T:Telerik.Pdf.PdfFileTrailer">
            <summary>
                Class representing a file trailer.
            </summary>
            <remarks>
                File trailers are described in section 3.4.4 of the PDF specification.
            </remarks>
        </member>
        <member name="P:Telerik.Pdf.PdfFont.Name">
            <summary>
                Returns the internal name used for this font.
            </summary>
        </member>
        <member name="T:Telerik.Apoc.Pdf.PdfFontCreator">
            <summary>
                Creates all the necessary PDF objects required to represent 
                a font object in a PDF document.
            </summary>
        </member>
        <member name="F:Telerik.Apoc.Pdf.PdfFontCreator.creator">
            <summary>
                Generates object id's.
            </summary>
        </member>
        <member name="M:Telerik.Apoc.Pdf.PdfFontCreator.#ctor(Telerik.Apoc.Pdf.PdfCreator)">
            <summary>
                
            </summary>
            <param name="creator"></param>
        </member>
        <member name="M:Telerik.Apoc.Pdf.PdfFontCreator.MakeFont(System.String,Telerik.Apoc.Render.Pdf.Fonts.Font)">
            <summary>
                Returns a subclass of the PdfFont class that may be one of
                PdfType0Font, PdfType1Font or PdfTrueTypeFont.  The type of 
                subclass returned is determined by the type of the <i>font</i>
                parameter.
            </summary>
            <param name="pdfFontID">The PDF font identifier, e.g. F15</param>
            <param name="font">Underlying font object.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Apoc.Pdf.PdfFontCreator.CreateCIDFont(System.String,Telerik.Apoc.Render.Pdf.Fonts.Font,Telerik.Apoc.Render.Pdf.Fonts.CIDFont)">
            <summary>
                Creates a character indexed font from <i>cidFont</i>
            </summary>
            <remarks>
                The <i>font</i> and <i>cidFont</i> will be different object 
                references since the <i>font</i> parameter will most likely 
                be a <see cref="T:Telerik.Apoc.Render.Pdf.Fonts.ProxyFont"/>.
            </remarks>
            <param name="pdfFontID">The Pdf font identifier, e.g. F15</param>
            <param name="font">Required to access the font descriptor.</param>
            <param name="cidFont">The underlying CID font.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Apoc.Pdf.PdfFontCreator.NextObjectId">
            <summary>
                Returns the next available Pdf object identifier.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Apoc.Pdf.PdfFontCreator.CreateBase14Font(System.String,Telerik.Apoc.Render.Pdf.Fonts.Base14Font)">
            <summary>
                Creates an instance of the <see cref="T:Telerik.Pdf.PdfType1Font"/> class
            </summary>
            <param name="pdfFontID">The Pdf font identifier, e.g. F15</param>
            <param name="base14"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Apoc.Pdf.PdfFontCreator.CreateTrueTypeFont(System.String,Telerik.Apoc.Render.Pdf.Fonts.Font,Telerik.Apoc.Render.Pdf.Fonts.TrueTypeFont)">
            <summary>
                Creates an instance of the <see cref="T:Telerik.Pdf.PdfTrueTypeFont"/> class
                that defaults the font encoding to WinAnsiEncoding.
            </summary>
            <param name="pdfFontID"></param>
            <param name="font"></param>
            <param name="ttf"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Apoc.Pdf.PdfFontCreator.GetFontMetrics(Telerik.Apoc.Render.Pdf.Fonts.Font)">
            <remarks>
                A ProxyFont must first be resolved before getting the 
                IFontMetircs implementation of the underlying font.
            </remarks>
            <param name="font"></param>
        </member>
        <member name="T:Telerik.Pdf.PdfFontTypeEnum">
            <summary>
                An enumeration listing all the fonts types available in Pdf.
            </summary>
        </member>
        <member name="T:Telerik.Pdf.PdfFontSubTypeEnum">
            <summary>
                An enumeration listing all the font subtypes
            </summary>
        </member>
        <member name="T:Telerik.Pdf.PdfICCStream">
            <summary>
                An International Color Code stream
            </summary>
        </member>
        <member name="T:Telerik.Pdf.PdfIdentityHEncoding">
            <summary>
                Represents a Identity-H character encoding
            </summary>
            <remarks>
                Maps 2-byte character codes ranging from 0 to 65,535 to 
                the same 2-byte CID value, interpreted high-order byte first
            </remarks>
        </member>
        <member name="M:Telerik.Pdf.PdfIdentityHEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
                Do not call this method directly
            </summary>
        </member>
        <member name="M:Telerik.Pdf.PdfIdentityHEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
                Do not call this method directly
            </summary>
        </member>
        <member name="T:Telerik.Pdf.PdfInfo">
            <summary>
                Class representing a document information dictionary.
            </summary>
            <remarks>
                Document information dictionaries are described in section 9.2.1 of the
                PDF specification.
            </remarks>
        </member>
        <member name="T:Telerik.Pdf.PdfName.Names">
            <summary>
                Well-known PDF name objects.
            </summary>
        </member>
        <member name="T:Telerik.Pdf.PdfOutline">
            <summary>
                This represents a single Outline object in a PDF, including the root Outlines
                object. Outlines provide the bookmark bar, usually rendered to the right of
                a PDF document in user agents such as Acrobat Reader
            </summary>
        </member>
        <member name="F:Telerik.Pdf.PdfOutline.subentries">
            <summary>
                List of sub-entries (outline objects)
            </summary>
        </member>
        <member name="F:Telerik.Pdf.PdfOutline.parent">
            <summary>
                Parent outline object. Root Outlines parent is null
            </summary>
        </member>
        <member name="F:Telerik.Pdf.PdfOutline.title">
            <summary>
                Title to display for the bookmark entry
            </summary>
        </member>
        <member name="M:Telerik.Pdf.PdfOutline.#ctor(Telerik.Pdf.PdfObjectId,System.String,Telerik.Pdf.PdfObjectReference)">
            <summary>
                Class constructor.
            </summary>
            <param name="objectId">The object id number</param>
            <param name="title">The title of the outline entry (can only be null for root Outlines obj)</param>
            <param name="action">The page which this outline refers to.</param>
        </member>
        <member name="M:Telerik.Pdf.PdfOutline.AddOutline(Telerik.Pdf.PdfOutline)">
            <summary>
                Add a sub element to this outline
            </summary>
            <param name="outline"></param>
        </member>
        <member name="T:Telerik.Pdf.PdfPageTree">
            <summary>
                The pages of a document are accessed through a structure known
                as the page tree.
            </summary>
            <remarks>
                The page tree is described in section 3.6.2 of the PDF specification.
            </remarks>
        </member>
        <member name="M:Telerik.Pdf.PdfString.ToPdfLiteral(System.Byte[],System.Byte[])">
            <summary>
                Returns this PdfString expressed using the 'literal' convention.
            </summary>
            <remarks>
                A literal string is written as an arbitrary number of characters 
                enclosed in parentheses.  Any characters may appear in a string 
                except unbalanced parentheses and the backslash, which must be 
                treated specially. Balanced pairs of parentheses within a string 
                require no special treatment.
            </remarks>
        </member>
        <member name="F:Telerik.Pdf.PdfString.HexDigits">
            <summary>
                Used by ToPdfHexadecimal.
            </summary>
        </member>
        <member name="M:Telerik.Pdf.PdfString.ToPdfHexadecimal(System.Byte[],System.Byte[])">
            <summary>
                Returns the PdfString expressed using the 'hexadecimal' convention.
            </summary>
            <remarks>
                Strings may also be written in hexadecimal form; this is useful for 
                including arbitrary binary data in a PDF file. A hexadecimal string 
                is written as a sequence of hexadecimal digits (0–9 and either A–F 
                or a–f) enclosed within angle brackets (&lt; and &gt;).
            </remarks>
        </member>
        <member name="P:Telerik.Pdf.PdfString.Format">
            <summary>
                The convention used when outputing the string to the PDF document.
            </summary>
            <remarks>
               Defaults to <see cref="F:Telerik.Pdf.PdfStringFormat.Literal"/> format.
            </remarks>
        </member>
        <member name="P:Telerik.Pdf.PdfString.NeverEncrypt">
            <summary>
                Determines if the string should bypass encryption, even when 
                available.
            </summary>
            <remarks>
                Some PDF strings need to appear unencrypted in a secure PDF
                document.  Most noteably those in the encryption dictionary 
                itself.  This property allows those strings to be flagged.
            </remarks>
        </member>
        <member name="T:Telerik.Pdf.PdfStringFormat">
            <summary>
                The PDF specification describes two conventions that can be
                used to embed a string in a PDF document.  This enumeration,
                along with the <see cref="P:Telerik.Pdf.PdfString.Format"/> property 
                can be used to select how a string will be formatted in the
                PDF file.
            </summary>
        </member>
        <member name="M:Telerik.Pdf.PdfTrueTypeFont.#ctor(Telerik.Pdf.PdfObjectId,System.String,System.String)">
            <param name="objectId">
                A unique object number.
            </param>
            <param name="fontName">
                The name by which the font is reference in the Font subdictionary 
            </param>
            <param name="baseFont">
                The PostScript name of the font.
            </param>
        </member>
        <member name="P:Telerik.Pdf.PdfTrueTypeFont.Encoding">
            <summary>
                Sets a value representing the character encoding.
            </summary>
        </member>
        <member name="P:Telerik.Pdf.PdfTrueTypeFont.Descriptor">
            <summary>
                Sets the font descriptor.
            </summary>
        </member>
        <member name="P:Telerik.Pdf.PdfTrueTypeFont.FirstChar">
            <summary>
                Sets the first character code defined in the font's widths array
            </summary>
            <value>
                The default value is 0.
            </value>
        </member>
        <member name="P:Telerik.Pdf.PdfTrueTypeFont.LastChar">
            <summary>
                Sets the last character code defined in the font's widths array
            </summary>
            <value>
                The default value is 255.
            </value>
        </member>
        <member name="P:Telerik.Pdf.PdfTrueTypeFont.Widths">
            <summary>
                Sets the array of character widths.
            </summary>
        </member>
        <member name="T:Telerik.Pdf.PdfType0Font">
            <summary>
                A Type 0 font is a composite font whose glyphs are obtained from a
                font like object called a CIDFont (a descendant font).
            </summary>
            <remarks>
                All versions of the PDF specification up to and including version 1.4
                only support a single descendant font.
            </remarks>
        </member>
        <member name="P:Telerik.Pdf.PdfType0Font.ToUnicode">
            <summary>
                Sets the stream containing a CMap that maps character codes to 
                unicode values.
            </summary>
        </member>
        <member name="P:Telerik.Pdf.PdfType0Font.Descendant">
            <summary>
                Sets the descendant font.
            </summary>
        </member>
        <member name="P:Telerik.Pdf.PdfType0Font.Encoding">
            <summary>
                Sets a value representing the character encoding.
            </summary>
        </member>
        <member name="P:Telerik.Pdf.PdfType1Font.Encoding">
            <summary>
                Sets a value representing the character encoding.
            </summary>
        </member>
        <member name="T:Telerik.Pdf.PdfWArray">
            <summary>
                Array class used to represent the /W entry in the CIDFont dictionary.
            </summary>
        </member>
        <member name="T:Telerik.Pdf.XRefSection">
            <summary>
                A single section in a PDF file's cross-reference table.
            </summary>
            <remarks>
                The cross-reference table is described in section 3.4.3 of
                the PDF specification.
            </remarks>
        </member>
        <member name="F:Telerik.Pdf.XRefSection.subsection">
            <summary>
                Right now we only support a single subsection.
            </summary>
        </member>
        <member name="M:Telerik.Pdf.XRefSection.Add(Telerik.Pdf.PdfObjectId,System.Int64)">
            <summary>
                Adds an entry to the section.
            </summary>
        </member>
        <member name="M:Telerik.Pdf.XRefSection.Write(Telerik.Pdf.PdfWriter)">
            <summary>
                Writes the cross reference section to the passed PDF writer.
            </summary>
        </member>
        <member name="T:Telerik.Pdf.XRefSubSection">
            <summary>
                A sub-section in a PDF file's cross-reference table.
            </summary>
            <remarks>
                The cross-reference table is described in section 3.4.3 of
                the PDF specification.
            </remarks>
        </member>
        <member name="F:Telerik.Pdf.XRefSubSection.entries">
            <summary>
                This entries contained in this subsection.
            </summary>
        </member>
        <member name="M:Telerik.Pdf.XRefSubSection.#ctor">
            <summary>
                Creates a new blank sub-section, that initially contains no entries.
            </summary>
        </member>
        <member name="M:Telerik.Pdf.XRefSubSection.Add(Telerik.Pdf.PdfObjectId,System.Int64)">
            <summary>
                Adds an entry to the sub-section.
            </summary>
        </member>
        <member name="M:Telerik.Pdf.XRefSubSection.Write(Telerik.Pdf.PdfWriter)">
            <summary>
                Writes the cross reference sub-section to the passed PDF writer.
            </summary>
        </member>
        <member name="T:Telerik.Pdf.XRefSubSection.Entry">
            <summary>
                Structure representing a single cross-reference entry.
            </summary>
        </member>
        <member name="F:Telerik.Pdf.XRefSubSection.Entry.objectId">
            <summary>
                The object number and generation number.
            </summary>
        </member>
        <member name="F:Telerik.Pdf.XRefSubSection.Entry.offset">
            <summary>
                The number of bytes from the beginning of the file to
                the beginning of the object.
            </summary>
        </member>
        <member name="M:Telerik.Pdf.XRefSubSection.Entry.CompareTo(System.Object)">
            <summary>
                Implementation of IComparable.
            </summary>
        </member>
        <member name="T:Telerik.Pdf.XRefTable">
            <summary>
                A PDF file's cross-reference table.
            </summary>
            <remarks>
                The cross-reference table is described in section 3.4.3 of
                the PDF specification.
            </remarks>
        </member>
        <member name="F:Telerik.Pdf.XRefTable.section">
            <summary>
                Right now we only support a single section.
            </summary>
        </member>
        <member name="M:Telerik.Pdf.XRefTable.Add(Telerik.Pdf.PdfObjectId,System.Int64)">
            <summary>
                Adds an entry to the table.
            </summary>
        </member>
        <member name="M:Telerik.Pdf.XRefTable.Write(Telerik.Pdf.PdfWriter)">
            <summary>
                Writes the cross reference table to the passed PDF writer.
            </summary>
        </member>
        <member name="T:Telerik.Apoc.Render.Pdf.Fonts.Base14Font">
            <summary>
                Base class for the standard 14 fonts as defined in the PDF spec.
            </summary>
        </member>
        <member name="T:Telerik.Apoc.Render.Pdf.Fonts.Font">
            <summary>
                Base class for PDF font classes
            </summary>
        </member>
        <member name="M:Telerik.Apoc.Render.Pdf.Fonts.Font.MapCharacter(System.Char)">
            <summary>
                Maps a Unicode character to a character index.
            </summary>
            <param name="c">A Unicode character.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Apoc.Render.Pdf.Fonts.Font.GetWidth(System.Int32)">
            <summary>
                See <see cref="M:Telerik.Apoc.Layout.IFontMetric.GetWidth(System.Int32)"/>
            </summary>
        </member>
        <member name="P:Telerik.Apoc.Render.Pdf.Fonts.Font.Encoding">
            <summary>
                Get the encoding of the font.
            </summary>
            <remarks>
                A font encoding defines a mapping between a character code 
                and a code point.  
            </remarks>
        </member>
        <member name="P:Telerik.Apoc.Render.Pdf.Fonts.Font.FontName">
            <summary>
                Gets the base font name.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Telerik.Apoc.Render.Pdf.Fonts.Font.Type">
            <summary>
                Gets the type of font, e.g. Type 0, Type 1, etc.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Telerik.Apoc.Render.Pdf.Fonts.Font.SubType">
            <summary>
                Gets the font subtype.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Telerik.Apoc.Render.Pdf.Fonts.Font.Descriptor">
            <summary>
                Gets a reference to a FontDescriptor
            </summary>
        </member>
        <member name="P:Telerik.Apoc.Render.Pdf.Fonts.Font.MultiByteFont">
            <summary>
                Gets a boolean value indicating whether this font supports 
                multi-byte characters
            </summary>
        </member>
        <member name="P:Telerik.Apoc.Render.Pdf.Fonts.Font.Ascender">
            <summary>
                See <see cref="P:Telerik.Apoc.Layout.IFontMetric.Ascender"/>
            </summary>
        </member>
        <member name="P:Telerik.Apoc.Render.Pdf.Fonts.Font.Descender">
            <summary>
                See <see cref="P:Telerik.Apoc.Layout.IFontMetric.Descender"/>
            </summary>
        </member>
        <member name="P:Telerik.Apoc.Render.Pdf.Fonts.Font.CapHeight">
            <summary>
                See <see cref="P:Telerik.Apoc.Layout.IFontMetric.CapHeight"/>
            </summary>
        </member>
        <member name="P:Telerik.Apoc.Render.Pdf.Fonts.Font.FirstChar">
            <summary>
                See <see cref="P:Telerik.Apoc.Layout.IFontMetric.FirstChar"/>
            </summary>
        </member>
        <member name="P:Telerik.Apoc.Render.Pdf.Fonts.Font.LastChar">
            <summary>
                See <see cref="P:Telerik.Apoc.Layout.IFontMetric.LastChar"/>
            </summary>
        </member>
        <member name="P:Telerik.Apoc.Render.Pdf.Fonts.Font.Widths">
            <summary>
                See <see cref="P:Telerik.Apoc.Layout.IFontMetric.Widths"/>
            </summary>
        </member>
        <member name="M:Telerik.Apoc.Render.Pdf.Fonts.Base14Font.#ctor(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32[],Telerik.Apoc.Render.Pdf.CodePointMapping)">
            <summary>
                Class constructor.
            </summary>
        </member>
        <member name="P:Telerik.Apoc.Render.Pdf.Fonts.Base14Font.Descriptor">
            <summary>
                Will always return null since the standard 14 fonts do not 
                have a FontDescriptor.
            </summary>
            <remarks>
                It is possible to override the default metrics, but the 
                current version of Apoc does not support this feature.
            </remarks>
        </member>
        <member name="T:Telerik.Apoc.Render.Pdf.Fonts.CIDFont">
            <summary>
                Base class for a CID (Character Indexed) font.
            </summary>
            <remarks>
                There are two types of CIDFont: Type 0 and Type 2.  A Type 0 CIDFont
                contains glyph description based on Adobe Type 1 font format; a 
                Type 2 CIDFont contains glyph descriptions based on the TrueType 
                font format.
                See page 338 of the Adode PDF 1.4 specification for futher details.
            </remarks>
        </member>
        <member name="P:Telerik.Apoc.Render.Pdf.Fonts.CIDFont.CidBaseFont">
            <summary>
                Gets the PostScript name of the font.
            </summary>
        </member>
        <member name="P:Telerik.Apoc.Render.Pdf.Fonts.CIDFont.CMapEntries">
            <summary>
                Gets a dictionary mapping character codes to unicode values
            </summary>
        </member>
        <member name="P:Telerik.Apoc.Render.Pdf.Fonts.CIDFont.Type">
            <summary>
                Returns <see cref="F:Telerik.Pdf.PdfFontTypeEnum.CIDFont"/>.
            </summary>
        </member>
        <member name="P:Telerik.Apoc.Render.Pdf.Fonts.CIDFont.Registry">
            <summary>
                Gets a string identifying the issuer of the character collections.
            </summary>
            <remarks>
                The default implementation returns <see cref="F:Telerik.Pdf.PdfCIDSystemInfo.DefaultRegistry"/>.
            </remarks>
        </member>
        <member name="P:Telerik.Apoc.Render.Pdf.Fonts.CIDFont.Ordering">
            <summary>
                Gets a string that uniquely names the character collection.
            </summary>
            <remarks>
                The default implementation returns <see cref="F:Telerik.Pdf.PdfCIDSystemInfo.DefaultOrdering"/>.
            </remarks>
        </member>
        <member name="P:Telerik.Apoc.Render.Pdf.Fonts.CIDFont.Supplement">
            <summary>
                Gets the supplement number of the character collection.
            </summary>
            <remarks>
                The default implementation returns <see cref="F:Telerik.Pdf.PdfCIDSystemInfo.DefaultSupplement"/>.
            </remarks>
        </member>
        <member name="P:Telerik.Apoc.Render.Pdf.Fonts.CIDFont.DefaultWidth">
            <summary>
                Gets the default width for all glyphs.
            </summary>
            <remarks>
                The default implementation returns <see cref="F:Telerik.Apoc.Render.Pdf.Fonts.CIDFont.DefaultWidthConst"/>
            </remarks>
        </member>
        <member name="T:Telerik.Apoc.Render.Pdf.Fonts.FontDescriptorFlags">
            <summary>
                Represents a collection of font descriptor flags specifying 
                various characterisitics of a font.
            </summary>
            <remarks>
                The following lists the bit positions and associated flags:
                1  - FixedPitch
                2  - Serif
                3  - Symbolic
                4  - Script
                6  - Nonsymbolic
                7  - Italic
                17 - AllCap
                18 - SmallCap
                19 - ForceBold
            </remarks>
        </member>
        <member name="M:Telerik.Apoc.Render.Pdf.Fonts.FontDescriptorFlags.#ctor">
            <summary>
                Default class constructor.
            </summary>
        </member>
        <member name="M:Telerik.Apoc.Render.Pdf.Fonts.FontDescriptorFlags.#ctor(System.Int32)">
            <summary>
                Class constructor.  Initialises the flags BitVector with the 
                supplied integer.
            </summary>
        </member>
        <member name="P:Telerik.Apoc.Render.Pdf.Fonts.FontDescriptorFlags.Flags">
            <summary>
                Gets the font descriptor flags as a 32-bit signed integer.
            </summary>
        </member>
        <member name="T:Telerik.Apoc.Render.Pdf.Fonts.FontDescriptorFlags.FontDescriptorFlagsEnum">
            <summary>
                Handy enumeration used to reference individual bit positions
                in the BitVector32.
            </summary>
        </member>
        <member name="T:Telerik.Apoc.Render.Pdf.Fonts.FontProperties">
            <summary>
                Collection of font properties such as face name and whether the 
                a font is bold and/or italic.
            </summary>
        </member>
        <member name="M:Telerik.Apoc.Render.Pdf.Fonts.FontProperties.#ctor(System.String,System.Boolean,System.Boolean)">
            <summary>
                Class constructor.
            </summary>
            <remarks>
                Regular    : bold=false, italic=false
                Bold       : bold=true,  italic=false
                Italic     : bold=false, italic=true
                BoldItalic : bold=true,  italic=true
            </remarks>
            <param name="faceName">Font face name, e.g. Arial.</param>
            <param name="bold">Bold flag.</param>
            <param name="italic">Italic flag.</param>
        </member>
        <member name="T:Telerik.Apoc.Render.Pdf.Fonts.ProxyFont">
            <summary>
                A proxy object that delegates all operations to a concrete 
                subclass of the Font class.
            </summary>
        </member>
        <member name="F:Telerik.Apoc.Render.Pdf.Fonts.ProxyFont.fontLoaded">
            <summary>
                Flag that indicates whether the underlying font has been loaded.
            </summary>
        </member>
        <member name="F:Telerik.Apoc.Render.Pdf.Fonts.ProxyFont.properties">
            <summary>
                Font details such as face name, bold and italic flags
            </summary>
        </member>
        <member name="F:Telerik.Apoc.Render.Pdf.Fonts.ProxyFont.realFont">
            <summary>
                The font that does all the work.
            </summary>
        </member>
        <member name="F:Telerik.Apoc.Render.Pdf.Fonts.ProxyFont.fontType">
            <summary>
                Determines what type of "real" font to instantiate.
            </summary>
        </member>
        <member name="M:Telerik.Apoc.Render.Pdf.Fonts.ProxyFont.#ctor(Telerik.Apoc.Render.Pdf.Fonts.FontProperties,Telerik.Apoc.Render.Pdf.FontType)">
            <summary>
                Class constructor.
            </summary>
            <param name="properties"></param>
            <param name="fontType"></param>
        </member>
        <member name="M:Telerik.Apoc.Render.Pdf.Fonts.ProxyFont.LoadIfNecessary">
            <summary>
                Loads the underlying font.
            </summary>
        </member>
        <member name="P:Telerik.Apoc.Render.Pdf.Fonts.ProxyFont.RealFont">
            <summary>
                Gets the underlying font.
            </summary>
        </member>
        <member name="T:Telerik.Apoc.Render.Pdf.Fonts.TrueTypeFont">
            <summary>
                Represents a TrueType font program.
            </summary>
        </member>
        <member name="F:Telerik.Apoc.Render.Pdf.Fonts.TrueTypeFont.dc">
            <summary>
                Wrapper around a Win32 HDC.
            </summary>
        </member>
        <member name="F:Telerik.Apoc.Render.Pdf.Fonts.TrueTypeFont.metrics">
            <summary>
                Provides font metrics using the Win32 Api.
            </summary>
        </member>
        <member name="F:Telerik.Apoc.Render.Pdf.Fonts.TrueTypeFont.kerning">
            <summary>
                List of kerning pairs.
            </summary>
        </member>
        <member name="F:Telerik.Apoc.Render.Pdf.Fonts.TrueTypeFont.widths">
            <summary>
                Maps a glyph index to a PDF width
            </summary>
        </member>
        <member name="F:Telerik.Apoc.Render.Pdf.Fonts.TrueTypeFont.properties">
            <summary>
                
            </summary>
        </member>
        <member name="M:Telerik.Apoc.Render.Pdf.Fonts.TrueTypeFont.#ctor(Telerik.Apoc.Render.Pdf.Fonts.FontProperties)">
            <summary>
                Class constructor
            </summary>
            <param name="properties"></param>
        </member>
        <member name="M:Telerik.Apoc.Render.Pdf.Fonts.TrueTypeFont.ObtainFontMetrics">
            <summary>
                Creates a <see cref="T:Telerik.Pdf.Gdi.GdiFontMetrics"/> object from <b>baseFontName</b>
            </summary>
        </member>
        <member name="M:Telerik.Apoc.Render.Pdf.Fonts.TrueTypeFont.GetWidth(System.Int32)">
            <summary>
                See <see cref="M:Telerik.Apoc.Render.Pdf.Fonts.Font.GetWidth(System.Int32)"/>
            </summary>
            <param name="charIndex">A WinAnsi codepoint.</param>
            <returns></returns>
        </member>
        <member name="P:Telerik.Apoc.Render.Pdf.Fonts.TrueTypeFont.SubType">
            <summary>
                Returns <see cref="F:Telerik.Pdf.PdfFontSubTypeEnum.TrueType"/>.
            </summary>
        </member>
        <member name="T:Telerik.Apoc.Render.Pdf.Fonts.Type2CIDFont">
            <summary>
                A Type 2 CIDFont is a font whose glyph descriptions are based on the 
                TrueType font format.
            </summary>
            <remarks>
                TODO: Support font subsetting
            </remarks>
        </member>
        <member name="F:Telerik.Apoc.Render.Pdf.Fonts.Type2CIDFont.dc">
            <summary>
                Wrapper around a Win32 HDC.
            </summary>
        </member>
        <member name="F:Telerik.Apoc.Render.Pdf.Fonts.Type2CIDFont.metrics">
            <summary>
                Provides font metrics using the Win32 Api.
            </summary>
        </member>
        <member name="F:Telerik.Apoc.Render.Pdf.Fonts.Type2CIDFont.kerning">
            <summary>
                List of kerning pairs.
            </summary>
        </member>
        <member name="F:Telerik.Apoc.Render.Pdf.Fonts.Type2CIDFont.widths">
            <summary>
                Maps a glyph index to a PDF width
            </summary>
        </member>
        <member name="F:Telerik.Apoc.Render.Pdf.Fonts.Type2CIDFont.baseFontName">
            <summary>
                Windows font name, e.g. 'Arial Bold'
            </summary>
        </member>
        <member name="F:Telerik.Apoc.Render.Pdf.Fonts.Type2CIDFont.properties">
            <summary>
                
            </summary>
        </member>
        <member name="F:Telerik.Apoc.Render.Pdf.Fonts.Type2CIDFont.usedGlyphs">
            <summary>
                Maps a glyph index to a character code.
            </summary>
        </member>
        <member name="F:Telerik.Apoc.Render.Pdf.Fonts.Type2CIDFont.unicodeRanges">
            <summary>
                Maps character code to glyph index.  The array is based on the 
                value of <see cref="P:Telerik.Apoc.Render.Pdf.Fonts.Type2CIDFont.FirstChar"/>.
            </summary>
        </member>
        <member name="M:Telerik.Apoc.Render.Pdf.Fonts.Type2CIDFont.#ctor(Telerik.Apoc.Render.Pdf.Fonts.FontProperties)">
            <summary>
                Class constructor.
            </summary>
            <param name="properties"></param>
        </member>
        <member name="M:Telerik.Apoc.Render.Pdf.Fonts.Type2CIDFont.ObtainFontMetrics">
            <summary>
                Creates a <see cref="T:Telerik.Pdf.Gdi.GdiFontMetrics"/> object from <b>baseFontName</b>
            </summary>
        </member>
        <member name="M:Telerik.Apoc.Render.Pdf.Fonts.Type2CIDFont.Finalize">
            <summary>
                Class destructor.
            </summary>
        </member>
        <member name="P:Telerik.Apoc.Render.Pdf.Fonts.Type2CIDFont.SubType">
            <summary>
                Returns <see cref="F:Telerik.Pdf.PdfFontSubTypeEnum.CIDFontType2"/>.
            </summary>
        </member>
        <member name="T:Telerik.Apoc.Render.Pdf.Fonts.Type2CIDSubsetFont">
            <summary>
                A subclass of Type2CIDFont that generates a subset of a 
                TrueType font.
            </summary>
        </member>
        <member name="F:Telerik.Apoc.Render.Pdf.Fonts.Type2CIDSubsetFont.indexMappings">
            <summary>
                Maps a glyph index to a subset index.
            </summary>
        </member>
        <member name="F:Telerik.Apoc.Render.Pdf.Fonts.Type2CIDSubsetFont.namePrefix">
            <summary>
                Quasi-unique six character name prefix.
            </summary>
        </member>
        <member name="M:Telerik.Apoc.Render.Pdf.Fonts.Type2CIDSubsetFont.#ctor(Telerik.Apoc.Render.Pdf.Fonts.FontProperties)">
            <summary>
                Class constructor.
            </summary>
            <param name="properties"></param>
        </member>
        <member name="M:Telerik.Apoc.Render.Pdf.Fonts.Type2CIDSubsetFont.InsertNotdefGlyphs">
            <summary>
                Creates the index mappings list and adds the .notedef glyphs
            </summary>
        </member>
        <member name="T:Telerik.Apoc.Pdf.FontSetup">
            <summary>
                Sets up the PDF fonts.
            </summary>
            <remarks>
                Assigns the font (with metrics) to internal names like "F1" and
                assigns family-style-weight triplets to the fonts.
            </remarks>
        </member>
        <member name="F:Telerik.Apoc.Pdf.FontSetup.startIndex">
            <summary>
                First 16 indices are used by base 14 and generic fonts
            </summary>
        </member>
        <member name="F:Telerik.Apoc.Pdf.FontSetup.fontInfo">
            <summary>
                Handles mapping font triplets to a IFontMetric implementor
            </summary>
        </member>
        <member name="M:Telerik.Apoc.Pdf.FontSetup.AddSystemFonts(Telerik.Apoc.Render.Pdf.FontType)">
            <summary>
                Adds all the system fonts to the FontInfo object.
            </summary>
            <remarks>
                Adds metrics for basic fonts and useful family-style-weight
                triplets for lookup.
            </remarks>
            <param name="fontType">Determines what type of font to instantiate.</param>
        </member>
        <member name="M:Telerik.Apoc.Pdf.FontSetup.IsBase14FontName(System.String)">
            <summary>
                Returns <b>true</b> is <i>familyName</i> represents one of the 
                base 14 fonts; otherwise <b>false</b>.
            </summary>
            <param name="familyName"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Apoc.Pdf.FontSetup.GetNextAvailableName">
            <summary>
                Gets the next available font name.  A font name is defined as an 
                integer prefixed by the letter 'F'.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Apoc.Pdf.FontSetup.AddToResources(Telerik.Apoc.Pdf.PdfFontCreator,Telerik.Pdf.PdfResources)">
            <summary>
                Add the fonts in the font info to the PDF document.
            </summary>
            <param name="fontCreator">Object that creates PdfFont objects.</param>
            <param name="resources">Resources object to add fonts too.</param>
        </member>
        <member name="T:Telerik.Apoc.Render.Pdf.FontType">
            <summary>
                Enumeration that dictates how Apoc should treat fonts when 
                producing a PDF document.
            </summary>
            <remarks>
                <p>Each of the three alernatives has particular advantages and 
                disadvantages, which will be explained here.</p>
                <p>The <see cref="F:Telerik.Apoc.Render.Pdf.FontType.Link"/> member specifies that all fonts 
                should be linked.  This option will produce the smallest PDF 
                document because the font program required to render individual 
                glyphs is not embedded in the PDF document.  However, this 
                option does possess two distinct disadvantages:
                <ol>
                  <li>Only characters in the WinAnsi character encoding are 
                  supported (i.e. Latin)</li>
                  <li>The PDF document will not render correctly if the linked 
                  font is not installed.</li>
                </ol>///     </p>
                <p>The <see cref="F:Telerik.Apoc.Render.Pdf.FontType.Embed"/> option will copy the contents of 
                the entire font program into the PDF document.  This will guarantee 
                correct rendering of the document on any system, however certain 
                fonts - especially CJK fonts - are extremely large.  The MS Gothic 
                TrueType collection, for example, is 8MB.  Embedding this font file 
                would produce a ridicuously large PDF.</p>
                <p>Finally, the <see cref="F:Telerik.Apoc.Render.Pdf.FontType.Subset"/> option will only copy the required 
                glyphs required to render a PDF document.  This option will ensure that 
                a PDF document is rendered correctly on any system, but does incur a 
                slight processing overhead to subset the font.</p>
            </remarks>
        </member>
        <member name="F:Telerik.Apoc.Render.Pdf.FontType.Link">
            <summary>
                Fonts are linked.
            </summary>
        </member>
        <member name="F:Telerik.Apoc.Render.Pdf.FontType.Embed">
            <summary>
                The entire font program is embedded.
            </summary>
        </member>
        <member name="F:Telerik.Apoc.Render.Pdf.FontType.Subset">
            <summary>
                The font program is subsetted and embedded.
            </summary>
        </member>
        <member name="F:Telerik.Apoc.Render.Pdf.PdfRenderer.currentYPosition">
            <summary>
                The current vertical position in millipoints from bottom.
            </summary>
        </member>
        <member name="F:Telerik.Apoc.Render.Pdf.PdfRenderer.currentXPosition">
            <summary>
                The current horizontal position in millipoints from left.
            </summary>
        </member>
        <member name="F:Telerik.Apoc.Render.Pdf.PdfRenderer.currentAreaContainerXPosition">
            <summary>
                The horizontal position of the current area container.
            </summary>
        </member>
        <member name="F:Telerik.Apoc.Render.Pdf.PdfRenderer.pdfDoc">
            <summary>
                The PDF Document being created.
            </summary>
        </member>
        <member name="F:Telerik.Apoc.Render.Pdf.PdfRenderer.pdfResources">
            <summary>
                The /Resources object of the PDF document being created.
            </summary>
        </member>
        <member name="F:Telerik.Apoc.Render.Pdf.PdfRenderer.currentStream">
            <summary>
                The current stream to add PDF commands to.
            </summary>
        </member>
        <member name="F:Telerik.Apoc.Render.Pdf.PdfRenderer.currentAnnotList">
            <summary>
                The current annotation list to add annotations to.
            </summary>
        </member>
        <member name="F:Telerik.Apoc.Render.Pdf.PdfRenderer.currentPage">
            <summary>
                The current page to add annotations to.
            </summary>
        </member>
        <member name="F:Telerik.Apoc.Render.Pdf.PdfRenderer.textOpen">
            <summary>
                True if a TJ command is left to be written.
            </summary>
        </member>
        <member name="F:Telerik.Apoc.Render.Pdf.PdfRenderer.prevWordY">
            <summary>
                The previous Y coordinate of the last word written.
            </summary>
            <remarks>
                Used to decide if we can draw the next word on the same line.
            </remarks>
        </member>
        <member name="F:Telerik.Apoc.Render.Pdf.PdfRenderer.prevWordX">
            <summary>
                The previous X coordinate of the last word written.
            </summary>
            <remarks>
                Used to calculate how much space between two words.
            </remarks>
        </member>
        <member name="F:Telerik.Apoc.Render.Pdf.PdfRenderer.prevWordWidth">
            <summary>
            The  width of the previous word.
            </summary>
            <remarks>
                Used to calculate space between.
            </remarks>
        </member>
        <member name="F:Telerik.Apoc.Render.Pdf.PdfRenderer._wordAreaPDF">
            <summary>
                Reusable word area string buffer to reduce memory usage.
            </summary>
            <remarks>
                TODO: remove use of this.
            </remarks>
        </member>
        <member name="F:Telerik.Apoc.Render.Pdf.PdfRenderer.options">
            <summary>
                User specified rendering options.
            </summary>
        </member>
        <member name="F:Telerik.Apoc.Render.Pdf.PdfRenderer.currentFontName">
            <summary>
                The current (internal) font name.
            </summary>
        </member>
        <member name="F:Telerik.Apoc.Render.Pdf.PdfRenderer.currentFontSize">
            <summary>
                The current font size in millipoints.
            </summary>
        </member>
        <member name="F:Telerik.Apoc.Render.Pdf.PdfRenderer.currentFill">
            <summary>
                The current color/gradient to fill shapes with.
            </summary>
        </member>
        <member name="F:Telerik.Apoc.Render.Pdf.PdfRenderer.prevUnderlineXEndPos">
            <summary>
                Previous values used for text-decoration drawing.
            </summary>
        </member>
        <member name="F:Telerik.Apoc.Render.Pdf.PdfRenderer.prevUnderlineYEndPos">
            <summary>
                Previous values used for text-decoration drawing.
            </summary>
        </member>
        <member name="F:Telerik.Apoc.Render.Pdf.PdfRenderer.prevUnderlineSize">
            <summary>
                Previous values used for text-decoration drawing.
            </summary>
        </member>
        <member name="F:Telerik.Apoc.Render.Pdf.PdfRenderer.prevUnderlineColor">
            <summary>
                Previous values used for text-decoration drawing.
            </summary>
        </member>
        <member name="F:Telerik.Apoc.Render.Pdf.PdfRenderer.prevOverlineXEndPos">
            <summary>
                Previous values used for text-decoration drawing.
            </summary>
        </member>
        <member name="F:Telerik.Apoc.Render.Pdf.PdfRenderer.prevOverlineYEndPos">
            <summary>
                Previous values used for text-decoration drawing.
            </summary>
        </member>
        <member name="F:Telerik.Apoc.Render.Pdf.PdfRenderer.prevOverlineSize">
            <summary>
                Previous values used for text-decoration drawing.
            </summary>
        </member>
        <member name="F:Telerik.Apoc.Render.Pdf.PdfRenderer.prevOverlineColor">
            <summary>
                Previous values used for text-decoration drawing.
            </summary>
        </member>
        <member name="F:Telerik.Apoc.Render.Pdf.PdfRenderer.prevLineThroughXEndPos">
            <summary>
                Previous values used for text-decoration drawing.
            </summary>
        </member>
        <member name="F:Telerik.Apoc.Render.Pdf.PdfRenderer.prevLineThroughYEndPos">
            <summary>
                Previous values used for text-decoration drawing.
            </summary>
        </member>
        <member name="F:Telerik.Apoc.Render.Pdf.PdfRenderer.prevLineThroughSize">
            <summary>
                Previous values used for text-decoration drawing.
            </summary>
        </member>
        <member name="F:Telerik.Apoc.Render.Pdf.PdfRenderer.prevLineThroughColor">
            <summary>
                Previous values used for text-decoration drawing.
            </summary>
        </member>
        <member name="F:Telerik.Apoc.Render.Pdf.PdfRenderer.fontInfo">
            <summary>
                Provides triplet to font resolution.
            </summary>
        </member>
        <member name="F:Telerik.Apoc.Render.Pdf.PdfRenderer.fontSetup">
            <summary>
                Handles adding base 14 and all system fonts.
            </summary>
        </member>
        <member name="F:Telerik.Apoc.Render.Pdf.PdfRenderer.idReferences">
            <summary>
                The IDReferences for this document.
            </summary>
        </member>
        <member name="M:Telerik.Apoc.Render.Pdf.PdfRenderer.#ctor(System.IO.Stream)">
            <summary>
                Create the PDF renderer.
            </summary>
        </member>
        <member name="M:Telerik.Apoc.Render.Pdf.PdfRenderer.SetupFontInfo(Telerik.Apoc.Layout.FontInfo)">
            <summary>
            </summary>
            <param name="fontInfo"></param>
        </member>
        <member name="M:Telerik.Apoc.Render.Pdf.PdfRenderer.AddLine(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Telerik.Apoc.Render.Pdf.PdfColor)">
             add a line to the current stream
            
             @param x1 the start x location in millipoints
             @param y1 the start y location in millipoints
             @param x2 the end x location in millipoints
             @param y2 the end y location in millipoints
             @param th the thickness in millipoints
             @param r the red component
             @param g the green component
             @param b the blue component
        </member>
        <member name="M:Telerik.Apoc.Render.Pdf.PdfRenderer.AddLine(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Telerik.Apoc.Render.Pdf.PdfColor)">
             add a line to the current stream
            
             @param x1 the start x location in millipoints
             @param y1 the start y location in millipoints
             @param x2 the end x location in millipoints
             @param y2 the end y location in millipoints
             @param th the thickness in millipoints
             @param rs the rule style
             @param r the red component
             @param g the green component
             @param b the blue component
        </member>
        <member name="M:Telerik.Apoc.Render.Pdf.PdfRenderer.AddRect(System.Int32,System.Int32,System.Int32,System.Int32,Telerik.Apoc.Render.Pdf.PdfColor)">
             add a rectangle to the current stream
            
             @param x the x position of left edge in millipoints
             @param y the y position of top edge in millipoints
             @param w the width in millipoints
             @param h the height in millipoints
             @param stroke the stroke color/gradient
        </member>
        <member name="M:Telerik.Apoc.Render.Pdf.PdfRenderer.AddRect(System.Int32,System.Int32,System.Int32,System.Int32,Telerik.Apoc.Render.Pdf.PdfColor,Telerik.Apoc.Render.Pdf.PdfColor)">
             add a filled rectangle to the current stream
            
             @param x the x position of left edge in millipoints
             @param y the y position of top edge in millipoints
             @param w the width in millipoints
             @param h the height in millipoints
             @param fill the fill color/gradient
             @param stroke the stroke color/gradient
        </member>
        <member name="M:Telerik.Apoc.Render.Pdf.PdfRenderer.AddFilledRect(System.Int32,System.Int32,System.Int32,System.Int32,Telerik.Apoc.Render.Pdf.PdfColor)">
             add a filled rectangle to the current stream
            
             @param x the x position of left edge in millipoints
             @param y the y position of top edge in millipoints
             @param w the width in millipoints
             @param h the height in millipoints
             @param fill the fill color/gradient
        </member>
        <member name="M:Telerik.Apoc.Render.Pdf.PdfRenderer.RenderImageArea(Telerik.Apoc.Image.ImageArea)">
             render image area to PDF
            
             @param area the image area to render
        </member>
        <member name="M:Telerik.Apoc.Render.Pdf.PdfRenderer.RenderForeignObjectArea(Telerik.Apoc.Layout.Inline.ForeignObjectArea)">
            render a foreign object area
        </member>
        <member name="M:Telerik.Apoc.Render.Pdf.PdfRenderer.RenderWordArea(Telerik.Apoc.Layout.Inline.WordArea)">
             render inline area to PDF
            
             @param area inline area to render
        </member>
        <member name="M:Telerik.Apoc.Render.Pdf.PdfRenderer.GetUnicodeString(System.Int32)">
            Convert a char to a multibyte hex representation
        </member>
        <member name="M:Telerik.Apoc.Render.Pdf.PdfRenderer.CloseText">
            Checks to see if we have some text rendering commands open
            still and writes out the TJ command to the stream if we do
        </member>
        <member name="M:Telerik.Apoc.Render.Pdf.PdfRenderer.RenderPage(Telerik.Apoc.Layout.Page)">
             render page into PDF
            
             @param page page to render
        </member>
        <member name="M:Telerik.Apoc.Render.Pdf.PdfRenderer.SetRuleStylePattern(System.Int32)">
            defines a string containing dashArray and dashPhase for the rule style
        </member>
        <member name="M:Telerik.Apoc.Render.Pdf.PdfRenderer.DoBackground(Telerik.Apoc.Layout.Area,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
                Renders an area's background.
            </summary>
            <param name="area">The area whose background is to be rendered.</param>
            <param name="x">The x position of the left edge in millipoints.</param>
            <param name="y">The y position of top edge in millipoints.</param>
            <param name="w">The width in millipoints.</param>
            <param name="h">The height in millipoints.</param>
        </member>
        <member name="M:Telerik.Apoc.Render.Pdf.PdfRenderer.DrawImage(System.Int32,System.Int32,Telerik.Apoc.Image.ApocImage)">
            <summary>
                Renders an image, rendered at the image's intrinsic size.
                This by default calls drawImageScaled() with the image's
                intrinsic width and height, but implementations may
                override this method if it can provide a more efficient solution.
            </summary>
            <param name="x">The x position of left edge in millipoints.</param>
            <param name="y">The y position of top edge in millipoints.</param>
            <param name="image">The image to be rendered.</param>
        </member>
        <member name="M:Telerik.Apoc.Render.Pdf.PdfRenderer.DrawImageScaled(System.Int32,System.Int32,System.Int32,System.Int32,Telerik.Apoc.Image.ApocImage)">
            <summary>
                Renders an image, scaling it to the given width and height.
                If the scaled width and height is the same intrinsic size 
                of the image, the image is not scaled
            </summary>
            <param name="x">The x position of left edge in millipoints.</param>
            <param name="y">The y position of top edge in millipoints.</param>
            <param name="w">The width in millipoints.</param>
            <param name="h">The height in millipoints.</param>
            <param name="image">The image to be rendered.</param>
        </member>
        <member name="M:Telerik.Apoc.Render.Pdf.PdfRenderer.DrawImageClipped(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Telerik.Apoc.Image.ApocImage)">
            <summary>
                Renders an image, clipping it as specified.
            </summary>
            <param name="x">The x position of left edge in millipoints.</param>
            <param name="y">The y position of top edge in millipoints.</param>
            <param name="clipX">The left edge of the clip in millipoints.</param>
            <param name="clipY">The top edge of the clip in millipoints.</param>
            <param name="clipW">The clip width in millipoints.</param>
            <param name="clipH">The clip height in millipoints.</param>
            <param name="image">The image to be rendered.</param>
        </member>
        <member name="M:Telerik.Apoc.Render.Pdf.PdfRenderer.RenderDisplaySpace(Telerik.Apoc.Layout.DisplaySpace)">
             render display space
            
             @param space the display space to render
        </member>
        <member name="M:Telerik.Apoc.Render.Pdf.PdfRenderer.RenderInlineSpace(Telerik.Apoc.Layout.Inline.InlineSpace)">
             render inline space
            
             @param space space to render
        </member>
        <member name="M:Telerik.Apoc.Render.Pdf.PdfRenderer.RenderLeaderArea(Telerik.Apoc.Layout.Inline.LeaderArea)">
             render leader area
            
             @param area area to render
        </member>
        <member name="P:Telerik.Apoc.Render.Pdf.PdfRenderer.Options">
            <summary>
                Assigns renderer options to this PdfRenderer
            </summary>
            <remarks>
                This property will only accept an instance of the PdfRendererOptions class
            </remarks>
            <exception cref="T:System.ArgumentException">
                If <i>value</i> is not an instance of PdfRendererOptions
            </exception>
        </member>
        <member name="T:Telerik.Apoc.Render.Pdf.PdfRendererOptions">
            <summary>
                This class can be used to control various properties of PDF files
                created by Apoc XSL-FO.
            </summary>
            <remarks>
                Can be used to control certain values in the generated PDF's information
                dictionary.  These values are typically displayed in a document summary 
                dialog of PDF viewer applications.
                This class also allows security settings to be specified that will 
                cause generated PDF files to be encrypted and optionally password protected.
            </remarks>
        </member>
        <member name="T:Telerik.Apoc.Render.IRendererOptions">
            <summary>
                A marker interface to indicate an object can be passed to
                the <see cref="P:Telerik.Apoc.ApocDriver.Options"/> property.
            </summary>
            <remarks>
                <seealso cref="T:Telerik.Apoc.Render.Pdf.PdfRendererOptions"/>
            </remarks>
        </member>
        <member name="F:Telerik.Apoc.Render.Pdf.PdfRendererOptions.permissions">
            <remarks>
                The given initial value zero's out first two bits.
                The PDF specification dictates that these entries must be 0.
            </remarks>
        </member>
        <member name="M:Telerik.Apoc.Render.Pdf.PdfRendererOptions.AddKeyword(System.String)">
            <summary>
                Adds a keyword to the PDF document.
            </summary>
            <remarks>
                Keywords are embedded in the PDF information dictionary.
            </remarks>
            <param name="keyword">The keyword to be added.</param>
        </member>
        <member name="M:Telerik.Apoc.Render.Pdf.PdfRendererOptions.AddPrivateFont(System.IO.FileInfo)">
            <summary>
                Adds <i>fileInfo</i> to the private font collection.
            </summary>
            <param name="fileInfo">
                Absolute path to a TrueType font or collection.
            </param>
            <exception cref="T:System.ArgumentNullException">
                If <i>fileInfo</i> is null.
            </exception>
            <exception cref="T:System.IO.FileNotFoundException">
                If <i>fileInfo</i> does not exist.
            </exception>
            <exception cref="T:System.ArgumentException">
                If <i>fileInfo</i> has already been added.
            </exception>
            <exception cref="T:System.ArgumentException">
                If <i>fileInfo</i> cannot be added to the system font collection.
            </exception>
        </member>
        <member name="P:Telerik.Apoc.Render.Pdf.PdfRendererOptions.Title">
            <summary>
                Specifies the Title of the PDF document.
            </summary>
            <value>
                The default value is null.
            </value>
            <remarks>
                This value will be embedded in the PDF information dictionary.
            </remarks>
        </member>
        <member name="P:Telerik.Apoc.Render.Pdf.PdfRendererOptions.Subject">
            <summary>
                Specifies the Subject of the PDF document.
            </summary>
            <value>
                The default value is null.
            </value>
            <remarks>
                This value will be embedded in the PDF information dictionary.
            </remarks>
        </member>
        <member name="P:Telerik.Apoc.Render.Pdf.PdfRendererOptions.Author">
            <summary>
                Specifies the Author of the PDF document.
            </summary>
            <value>
                The default value is null.
            </value>
            <remarks>
                This value will be embedded in the PDF information dictionary.
            </remarks>
        </member>
        <member name="P:Telerik.Apoc.Render.Pdf.PdfRendererOptions.Creator">
            <summary>
                Returns the Creator of the PDF document.
            </summary>
            <value>
                This method will always return "XSL-FO http://www.w3.org/1999/XSL/Format".
            </value>
        </member>
        <member name="P:Telerik.Apoc.Render.Pdf.PdfRendererOptions.Producer">
            <summary>
                Returns the Producer of the PDF document.
            </summary>
            <value>
                This method will return the assembly name and version of Apoc.
            </value>
        </member>
        <member name="P:Telerik.Apoc.Render.Pdf.PdfRendererOptions.Keywords">
            <summary>
                Returns a list of keywords as a comma-separated string
            </summary>
            <value>
                If no keywords exist the empty string <see cref="F:System.String.Empty"/> is returned
            </value>
        </member>
        <member name="P:Telerik.Apoc.Render.Pdf.PdfRendererOptions.OwnerPassword">
            <summary>
                Specifies the owner password that will protect full access to any generated PDF documents.
            </summary>
            <remarks>
                If either the owner or the user password is specified, 
                then the document will be encrypted.
            </remarks>
            <value>
                The default value is null.
            </value>
        </member>
        <member name="P:Telerik.Apoc.Render.Pdf.PdfRendererOptions.UserPassword">
            <summary>
                Specifies the user password that will protect access to any generated PDF documents.
            </summary>
            <remarks>
                If either the owner or the user password is specified, 
                then the document will be encrypted.
            </remarks>
            <value>
                The default value is null.
            </value>
        </member>
        <member name="P:Telerik.Apoc.Render.Pdf.PdfRendererOptions.HasPermissions">
            <summary>
                Returns true if any permissions have been set.
            </summary>
        </member>
        <member name="P:Telerik.Apoc.Render.Pdf.PdfRendererOptions.Permissions">
            <summary>
                Returns the PDF permissions encoded as an 32-bit integer.
            </summary>
        </member>
        <member name="P:Telerik.Apoc.Render.Pdf.PdfRendererOptions.EnablePrinting">
            <summary>
                Enables or disables printing.
            </summary>
            <value>
                The default value is true.
            </value>
        </member>
        <member name="P:Telerik.Apoc.Render.Pdf.PdfRendererOptions.EnableModify">
            <summary>
                Enables or disables modifying document contents (other than text annotations and 
                interactive form fields).
            </summary>
            <value>
                The default value is true.
            </value>
        </member>
        <member name="P:Telerik.Apoc.Render.Pdf.PdfRendererOptions.EnableCopy">
            <summary>
                Enables or disables copying of text and graphics.
            </summary>
            <value>
                The default value is true.
            </value>
        </member>
        <member name="P:Telerik.Apoc.Render.Pdf.PdfRendererOptions.EnableAdd">
            <summary>
                Enables or disables adding or modifying text annotations and interactive
                form fields.
            </summary>
            <value>
                The default value is true.
            </value>
        </member>
        <member name="P:Telerik.Apoc.Render.Pdf.PdfRendererOptions.FontType">
            <summary>
                Specifies how Apoc should treat fonts.
            </summary>
            <value>
                The default value is FontType.Link
            </value>
        </member>
        <member name="P:Telerik.Apoc.Render.Pdf.PdfRendererOptions.Kerning">
            <summary>
                Gets or sets a value that indicates whether to enable kerning.
            </summary>
            <value>
                The default value is <b>false</b>
            </value>
        </member>
        <member name="T:Telerik.Apoc.Render.Xml.XmlRendererOptions">
            <summary>
                This class can be used to control various properties of PDF files
                created by the XML tree renderer.
            </summary>
        </member>
        <member name="F:Telerik.Apoc.Render.Xml.XmlRendererOptions.Default">
            <summary>
                Default XML renderer properties
            </summary>
        </member>
        <member name="P:Telerik.Apoc.Render.Xml.XmlRendererOptions.FineDetail">
            <summary>
                Determines if the XMLRenderer should use verbose output
            </summary>
        </member>
        <member name="T:Telerik.Apoc.Render.RendererEngine">
            <summary>
                Specifies the output format that Apoc XSL-FO should render to.
            </summary>
            <remarks>
                Currently the only useful format supported is PDF.  The
                XML format is intended for informational/debugging purposes
                only.
                <seealso cref="P:Telerik.Apoc.ApocDriver.Renderer"/>
            </remarks>
        </member>
        <member name="F:Telerik.Apoc.Render.RendererEngine.XML">
            <summary>
                Instructs Apoc to output an XML representation.
            </summary>
            <remarks>
                This format is useful only for informational/debugging purposes.
            </remarks>
        </member>
        <member name="F:Telerik.Apoc.Render.RendererEngine.PDF">
            <summary>
                Instructs Apoc to output PDF.
            </summary>
        </member>
        <member name="F:Telerik.Apoc.Util.StringTokenizer.maxDelimChar">
            <summary>
                maxDelimChar stores the value of the delimiter character with 
                the highest value. It is used to optimize the detection of 
                delimiter characters.
            </summary>
        </member>
        <member name="M:Telerik.Apoc.Util.StringTokenizer.SetMaxDelimChar">
            <summary>
                Set maxDelimChar to the highest char in the delimiter set.
            </summary>
        </member>
        <member name="M:Telerik.Apoc.Util.StringTokenizer.#ctor(System.String,System.String,System.Boolean)">
            <summary>
                Constructs a string tokenizer for the specified string. All 
                characters in the <i>delim</i> argument are the delimiters 
                for separating tokens.<br/>
                If the <i>returnDelims</i> flag is <i>true</i>, then 
                the delimiter characters are also returned as tokens. Each delimiter 
                is returned as a string of length one. If the flag is 
                <i>false</i>, the delimiter characters are skipped and only 
                serve as separators between tokens. 
            </summary>
            <param name="str"></param>
            <param name="delim"></param>
            <param name="returnDelims"></param>
        </member>
        <member name="M:Telerik.Apoc.Util.StringTokenizer.#ctor(System.String,System.String)">
            <summary>
                Constructs a string tokenizer for the specified string. The 
                characters in the <code>delim</code> argument are the delimiters 
                for separating tokens. Delimiter characters themselves will not 
                be treated as tokens.
            </summary>
            <param name="str">a string to be parsed.</param>
            <param name="delim">the delimiters.</param>
        </member>
        <member name="M:Telerik.Apoc.Util.StringTokenizer.#ctor(System.String)">
            <summary>
                Constructs a string tokenizer for the specified string. The 
                tokenizer uses the default delimiter set, which is the space 
                character, the tab character, the newline character, the 
                carriage-return character, and the form-feed character. 
                Delimiter characters themselves will not be treated as tokens.
            </summary>
            <param name="str">a string to be parsed</param>
        </member>
        <member name="M:Telerik.Apoc.Util.StringTokenizer.SkipDelimiters(System.Int32)">
            <summary>
                Skips delimiters starting from the specified position. If 
                retDelims is false, returns the index of the first non-delimiter 
                character at or after startPos. If retDelims is true, startPos 
                is returned.
            </summary>
            <param name="startPos"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Apoc.Util.StringTokenizer.ScanToken(System.Int32)">
            <summary>
                Skips ahead from startPos and returns the index of the next 
                delimiter character encountered, or maxPosition if no such 
                delimiter is found.
            </summary>
            <param name="startPos"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Apoc.Util.StringTokenizer.NextToken">
            <summary>
                Returns the next token from this string tokenizer.
            </summary>
            <returns>the next token from this string tokenizer.</returns>
        </member>
        <member name="M:Telerik.Apoc.Util.StringTokenizer.MoveNext">
            <summary>
                Returns the same value as the <code>hasMoreTokens</code> method. 
                It exists so that this class can implement the 
                <i>Enumeration</i> interface. 
            </summary>
            <returns>
            <i>true</i> if there are more tokens; <i>false</i> 
            otherwise.</returns>
        </member>
        <member name="M:Telerik.Apoc.Util.StringTokenizer.HasMoreTokens">
            <summary>
            Tests if there are more tokens available from this tokenizer's 
            string.  If this method returns <tt>true</tt>, then a subsequent 
            call to <tt>nextToken</tt> with no argument will successfully 
            return a token.
            </summary>
            <returns>
            <code>true</code> if and only if there is at least one token in 
            the string after the current position; <code>false</code> otherwise.
            </returns>
        </member>
        <member name="M:Telerik.Apoc.Util.StringTokenizer.CountTokens">
            <summary>
            Calculates the number of times that this tokenizer's 
            <code>nextToken</code> method can be called before it generates an 
            exception. The current position is not advanced.
            </summary>
            <returns>
            the number of tokens remaining in the string using the current 
            delimiter set.</returns>
        </member>
        <member name="P:Telerik.Apoc.Util.StringTokenizer.Current">
            <summary>
            Returns the same value as the <code>nextToken</code> method, except 
            that its declared return value is <code>Object</code> rather than 
            <code>String</code>. It exists so that this class can implement the
            <code>Enumeration</code> interface. 
            </summary>
        </member>
        <member name="T:Telerik.Apoc.ApocDriver">
            <summary>
                ApocDriver provides the client with a single interface to invoking Apoc XSL-FO.
            </summary>
            <remarks>
                The examples belows demonstrate several ways of invoking Apoc XSL-FO.  The 
                methodology is the same regardless of how Apoc is embedded in your 
                system (ASP.NET, WinForm, Web Service, etc).
            </remarks>
            <example>
            <code lang="csharp">
            // This example demonstrates rendering an XSL-FO file to a PDF file.
            ApocDriver driver = ApocDriver.Make();
            driver.Render(
                new FileStream("readme.fo", FileMode.Open), 
                new FileStream("readme.pdf", FileMode.Create));
            </code>
            <code lang="vb">
            // This example demonstrates rendering an XSL-FO file to a PDF file.
            Dim driver As ApocDriver = ApocDriver.Make
            driver.Render( _
                New FileStream("readme.fo", FileMode.Open), _
                New FileStream("readme.pdf", FileMode.Create))
            </code>
            <code lang="csharp">
            // This example demonstrates rendering the result of an XSLT transformation 
            // into a PDF file.
            ApocDriver driver = ApocDriver.Make();
            driver.Render(
                XslTransformer.Transform("readme.xml", "readme.xsl"),
                new FileStream("readme.pdf", FileMode.Create));
            </code>
            <code lang="vb">
            // This example demonstrates rendering the result of an XSLT transformation 
            // into a PDF file.
            Dim driver As ApocDriver = ApocDriver.Make
            driver.Render( _
                XslTransformer.Transform("readme.xml", "readme.xsl"), _
                New FileStream("readme.pdf", FileMode.Create))
            </code>
            <code lang="csharp">
            // This example demonstrates using an XmlDocument as the source of the 
            // XSL-FO tree.  The XmlDocument could easily be dynamically generated.
            XmlDocument doc = new XmlDocument()
            doc.Load("reader.fo");
                
            ApocDriver driver = ApocDriver.Make();
            driver.Render(doc, new FileStream("readme.pdf", FileMode.Create));
            </code>
            <code lang="vb">
            // This example demonstrates using an XmlDocument as the source of the 
            // XSL-FO tree.  The XmlDocument could easily be dynamically generated.
            Dim doc As XmlDocument = New XmlDocument()
            doc.Load("reader.fo")
                
            Dim driver As ApocDriver = ApocDriver.Make
            driver.Render(doc, New FileStream("readme.pdf", FileMode.Create))
            </code>
            </example>
        </member>
        <member name="T:Telerik.Apoc.IDriver">
            <summary>
                This interface is implemented by the ApocDriver class to permit usage 
                from COM applications.  This is the recommended method of supporting 
                invocation from COM application as it permits interface versioning.
            </summary>
        </member>
        <member name="F:Telerik.Apoc.ApocDriver.renderEngine">
            <summary>
                Controls the output format of the renderer.
            </summary>
            <remarks>
                Defaults to PDF.
            </remarks>
        </member>
        <member name="F:Telerik.Apoc.ApocDriver.closeOnExit">
            <summary>
                Determines if the output stream passed to <see cref="M:Telerik.Apoc.ApocDriver.Render(System.Xml.XmlDocument,System.IO.Stream)"/> 
                should be closed upon completion or if a fatal exception occurs.
            </summary>
        </member>
        <member name="F:Telerik.Apoc.ApocDriver.renderOptions">
            <summary>
                Options to supply to the renderer.
            </summary>
        </member>
        <member name="F:Telerik.Apoc.ApocDriver.credentials">
            <summary>
                Maps a set of credentials to an internet resource
            </summary>
        </member>
        <member name="F:Telerik.Apoc.ApocDriver.rm">
            <summary>
                The ResourceManager embedded in the core dll.
            </summary>
        </member>
        <member name="F:Telerik.Apoc.ApocDriver.activeDriver">
            <summary>
                The active driver.
            </summary>
        </member>
        <member name="F:Telerik.Apoc.ApocDriver.productKey">
            <summary>
                Permits the product key to be specified using code, rather than
                the flakey licenses.licx method.
            </summary>
        </member>
        <member name="M:Telerik.Apoc.ApocDriver.Make">
            <summary>
                Constructs a new ApocDriver and registers the newly created 
                driver as the active driver.
            </summary>
            <returns>An instance of ApocDriver</returns>
        </member>
        <member name="M:Telerik.Apoc.ApocDriver.#ctor">
            <summary>
                Sets the the 'baseDir' property in the Configuration class using 
                the value returned by Directory.GetCurrentDirectory().
            </summary>
        </member>
        <member name="F:Telerik.Apoc.ApocDriver.imageHandler">
            <summary>
                An optional image handler that can be registered to load image
                data for external graphic formatting objects.
            </summary>
        </member>
        <member name="M:Telerik.Apoc.ApocDriver.Render(System.Xml.XmlDocument,System.IO.Stream)">
            <summary>
                Executes the conversion reading the source tree from the supplied 
                XmlDocument, converting it to a format dictated by the renderer 
                and writing it to the supplied output stream.
            </summary>
            <param name="doc">
                An in-memory representation of an XML document (DOM).
            </param>
            <param name="outputStream">
                Any subclass of the Stream class.
            </param>
            <remarks>
                Any exceptions that occur during the render process are arranged 
                into three categories: information, warning and error.  You may 
                intercept any or all of theses exceptional states by registering 
                an event listener.  See <see cref="E:Telerik.Apoc.ApocDriver.OnError"/> for an 
                example of registering an event listener.  If there are no 
                registered listeners, the exceptions are dumped to standard out - 
                except for the error event which is wrapped in a 
                <see cref="T:System.SystemException"/>.
            </remarks>
        </member>
        <member name="M:Telerik.Apoc.ApocDriver.Render(System.IO.TextReader,System.IO.Stream)">
            <summary>
                Executes the conversion reading the source tree from the input 
                reader, converting it to a format dictated by the renderer and 
                writing it to the supplied output stream.
            </summary>
            <param name="inputReader">A character orientated stream</param>
            <param name="outputStream">Any subclass of the Stream class</param>
        </member>
        <member name="M:Telerik.Apoc.ApocDriver.Render(System.String,System.String)">
            <summary>
                Executes the conversion reading the source tree from the file 
                <i>inputFile</i>, converting it to a format dictated by the 
                renderer and writing it to the file identified by <i>outputFile</i>.
            </summary>
            <remarks>
                If the file <i>outputFile</i> does not exist, it will created 
                otherwise it will be overwritten.  Creating a file may 
                generate a variety of exceptions.  See <see cref="T:System.IO.FileStream"/>
                for a complete list.<br/>
            </remarks>
            <param name="inputFile">Path to an XSL-FO file</param>
            <param name="outputFile">Path to a file</param>
        </member>
        <member name="M:Telerik.Apoc.ApocDriver.Render(System.String,System.IO.Stream)">
            <summary>
                Executes the conversion reading the source tree from the file 
                <i>inputFile</i>, converting it to a format dictated by the 
                renderer and writing it to the supplied output stream.
            </summary>
            <param name="inputFile">Path to an XSL-FO file</param>
            <param name="outputStream">
                Any subclass of the Stream class, e.g. FileStream
            </param>
        </member>
        <member name="M:Telerik.Apoc.ApocDriver.Render(System.IO.Stream,System.IO.Stream)">
            <summary>
                Executes the conversion reading the source tree from the input 
                stream, converting it to a format dictated by the render and 
                writing it to the supplied output stream.
            </summary>
            <param name="inputStream">Any subclass of the Stream class, e.g. FileStream</param>
            <param name="outputStream">Any subclass of the Stream class, e.g. FileStream</param>
        </member>
        <member name="M:Telerik.Apoc.ApocDriver.Render(System.Xml.XmlReader,System.IO.Stream)">
            <summary>
                Executes the conversion reading the source tree from the input 
                reader, converting it to a format dictated by the render and 
                writing it to the supplied output stream.
            </summary>
            <remarks>
                The evaluation copy of this class will output an evaluation
                banner to standard out
            </remarks>
            <param name="inputReader">
                Reader that provides fast, non-cached, forward-only access 
                to XML data
            </param>
            <param name="outputStream">
                Any subclass of the Stream class, e.g. FileStream
            </param>
        </member>
        <member name="M:Telerik.Apoc.ApocDriver.GetString(System.String)">
            <summary>
                Retrieves the string resource with the specific key using the 
                default culture
            </summary>
            <param name="key">A resource key</param>
            <returns>
                The resource string identified by <code>key</code> from the 
                current culture's setting
            </returns>
            <exception cref="T:System.ArgumentNullException">
                The <i>key</i> parameter is a null reference</exception>
            <exception cref="T:System.InvalidOperationException">
                The value of the specified resource is not a string</exception>
            <exception cref="T:System.Resources.MissingManifestResourceException">
                No usable set of resources has been found, and there are no 
                neutral culture resources
            </exception>
        </member>
        <member name="M:Telerik.Apoc.ApocDriver.FireApocError(System.String)">
            <summary>
                Sends an 'error' event to all registered listeners.
            </summary>
            <remarks>
                If there are no listeners, a <see cref="T:System.SystemException"/> is 
                thrown immediately halting execution
            </remarks>
            <param name="message">Any error message, which may be null</param>
            <exception cref="T:System.SystemException">
                If no listener is registered for this event, a SystemException
                will be thrown
            </exception>
        </member>
        <member name="M:Telerik.Apoc.ApocDriver.FireApocWarning(System.String)">
            <summary>
                Sends a 'warning' event to all registered listeners
            </summary>
            <remarks>
                If there are no listeners, <i>message</i> is written out 
                to the console instead
            </remarks>
            <param name="message">Any warning message, which may be null</param>
        </member>
        <member name="M:Telerik.Apoc.ApocDriver.FireApocInfo(System.String)">
            <summary>
                Sends an 'info' event to all registered lisetners
            </summary>
            <remarks>
                If there are no listeners, <i>message</i> is written out 
                to the console instead
            </remarks>
            <param name="message">An info message, which may be null</param>
        </member>
        <member name="M:Telerik.Apoc.ApocDriver.CreateXmlTextReader(System.String)">
            <summary>
                Utility method that creates an <see cref="T:System.Xml.XmlTextReader"/>
                for the supplied file
            </summary>
            <remarks>
                The returned <see cref="T:System.Xml.XmlReader"/> interprets all whitespace
            </remarks>
        </member>
        <member name="M:Telerik.Apoc.ApocDriver.CreateXmlTextReader(System.IO.Stream)">
            <summary>
                Utility method that creates an <see cref="T:System.Xml.XmlTextReader"/>
                for the supplied file
            </summary>
            <remarks>
                The returned <see cref="T:System.Xml.XmlReader"/> interprets all whitespace
            </remarks>
        </member>
        <member name="M:Telerik.Apoc.ApocDriver.CreateXmlTextReader(System.IO.TextReader)">
            <summary>
                Utility method that creates an <see cref="T:System.Xml.XmlTextReader"/>
                for the supplied file
            </summary>
            <remarks>
                The returned <see cref="T:System.Xml.XmlReader"/> interprets all whitespace
            </remarks>
        </member>
        <member name="E:Telerik.Apoc.ApocDriver.OnError">
            <summary>
                A multicast delegate.  The error event Apoc publishes.
            </summary>
            <remarks>
                The method signature for this event handler should match 
                the following:
                <pre class="code"><span class="lang">
                void ApocError(object driver, ApocEventArgs e);
                </span></pre>
                The first parameter <i>driver</i> will be a reference to the 
                active ApocDriver instance.
            </remarks>
            <example>Subscribing to the 'error' event
                <pre class="code"><span class="lang">[C#]</span><br/>
                {
                ApocDriver driver = ApocDriver.Make();
                driver.OnError += new ApocDriver.ApocEventHandler(ApocError);
                ...
                }
                </pre>
            </example>
        </member>
        <member name="E:Telerik.Apoc.ApocDriver.OnWarning">
            <summary>
                A multicast delegate.  The warning event Apoc publishes.
            </summary>
            <remarks>
                The method signature for this event handler should match 
                the following:
                <pre class="code"><span class="lang">
                void ApocWarning(object driver, ApocEventArgs e);
                </span></pre>
                The first parameter <i>driver</i> will be a reference to the 
                active ApocDriver instance.
            </remarks>
        </member>
        <member name="E:Telerik.Apoc.ApocDriver.OnInfo">
            <summary>
                A multicast delegate.  The info event Apoc publishes.
            </summary>
            <remarks>
                The method signature for this event handler should match 
                the following:
                <pre class="code"><span class="lang">
                void ApocInfo(object driver, ApocEventArgs e);
                </span></pre>
                The first parameter <i>driver</i> will be a reference to the 
                active ApocDriver instance.
            </remarks>
        </member>
        <member name="P:Telerik.Apoc.ApocDriver.CloseOnExit">
            <summary>
                Determines if the output stream should be automatically closed 
                upon completion of the render process.
            </summary>
        </member>
        <member name="P:Telerik.Apoc.ApocDriver.ActiveDriver">
            <summary>
                Gets or sets the active <see cref="T:Telerik.Apoc.ApocDriver"/>.
            </summary>
            <value>
                An instance of <see cref="T:Telerik.Apoc.ApocDriver"/> created via the factory method 
                <see cref="M:Telerik.Apoc.ApocDriver.Make"/>.
            </value>
        </member>
        <member name="P:Telerik.Apoc.ApocDriver.Renderer">
            <summary>
                Determines which rendering engine to use.
            </summary>
            <value>
                A value from the <see cref="T:Telerik.Apoc.Render.RendererEngine"/> enumeration.
            </value>
            <remarks>
                The default value is 
                <see cref="F:Telerik.Apoc.Render.RendererEngine.PDF"/>.
            </remarks>
        </member>
        <member name="P:Telerik.Apoc.ApocDriver.BaseDirectory">
            <summary>
                Gets or sets the base directory used to locate external 
                resourcs such as images.
            </summary>
            <value>
                Defaults to the current working directory.
            </value>
        </member>
        <member name="P:Telerik.Apoc.ApocDriver.ImageHandler">
            <summary>
                Gets or sets the handler that is responsible for loading the image
                data for external graphics.
            </summary>
            <remarks>
                If null is returned from the image handler, then Apoc will perform 
                normal processing.
            </remarks>
        </member>
        <member name="P:Telerik.Apoc.ApocDriver.Timeout">
            <summary>
                Gets or sets the time in milliseconds until an HTTP image request 
                times out.
            </summary>
            <remarks>
                The default value is 100000 milliseconds.
            </remarks>
            <value>
                The timeout value in milliseconds
            </value>
        </member>
        <member name="P:Telerik.Apoc.ApocDriver.Credentials">
            <summary>
                Gets a reference to a <see cref="T:System.Net.CredentialCache"/> object 
                that manages credentials for multiple Internet resources.
                <seealso cref="T:System.Net.CredentialCache"/>
            </summary>
            <remarks>
                The purpose of this property is to associate a set of credentials against 
                an Internet resource.  These credentials are then used by Apoc when 
                fetching images from one of the listed resources.
            </remarks>
            <example>
                ApocDriver driver = ApocDriver.Make();
                
                NetworkCredential nc1 = new NetworkCredential("foo", "password");
                driver.Credentials.Add(new Uri("http://www.chive.com"), "Basic", nc1);
                
                NetworkCredential nc2 = new NetworkCredential("john", "password", "UK");
                driver.Credentials.Add(new Uri("http://www.xyz.com"), "Digest", nc2);
            </example>
        </member>
        <member name="P:Telerik.Apoc.ApocDriver.ProductKey">
            <summary>
                Write only property that can be used to bypass licenses.licx
                and set a product key directly.
            </summary>
        </member>
        <member name="P:Telerik.Apoc.ApocDriver.InternalProductKey">
            <summary>
                Returns the product key.
            </summary>
        </member>
        <member name="P:Telerik.Apoc.ApocDriver.Options">
            <summary>
                Options that are passed to the rendering engine.
            </summary>
            <value>
                An object that implements the <see cref="T:Telerik.Apoc.Render.IRendererOptions"/> marker interface.
                The default value is null, in which case all default options will be used.
            </value>
            <remarks>
                An instance of <see cref="T:Telerik.Apoc.Render.Pdf.PdfRendererOptions"/>
                is typically passed to this property.
            </remarks>
        </member>
        <member name="P:Telerik.Apoc.ApocDriver.IsEvaluation">
            <summary>
                True if the current license is an evaluation license.
            </summary>
        </member>
        <member name="T:Telerik.Apoc.ApocDriver.ApocEventHandler">
            <summary>
                The delegate subscribers must implement to receive Apoc events.
            </summary>
            <remarks>
                The <paramref name="driver"/> parameter will be a reference to 
                the  active ApocDriver.  The <paramref name="e"/> parameter will 
                contain a human-readable error message.
            </remarks>
            <param name="driver">A reference to the active ApocDriver</param>
            <param name="e">Encapsulates a human readable error message</param>
        </member>
        <member name="T:Telerik.Apoc.ApocDriver.ApocImageHandler">
            <summary>
                The delegat subscribers must implement to handle the loading 
                of image data in response to external-graphic formatting objects.
            </summary>
        </member>
        <member name="T:Telerik.Apoc.ApocEventArgs">
            <summary>
                A class containing event data for the Error, Warning and Info 
                events defined in <see cref="T:Telerik.Apoc.ApocDriver"/>.
            </summary>
        </member>
        <member name="M:Telerik.Apoc.ApocEventArgs.#ctor(System.String)">
            <summary>
                Initialises a new instance of the <i>ApocEventArgs</i> class.
            </summary>
            <param name="message">The text of the event message.</param>
        </member>
        <member name="M:Telerik.Apoc.ApocEventArgs.GetMessage">
            <summary>
                Retrieves the event message.
            </summary>
            <returns>A string which may be null.</returns>
        </member>
        <member name="M:Telerik.Apoc.ApocEventArgs.ToString">
            <summary>
                Converts this <i>ApocEventArgs</i> to a string.
            </summary>
            <returns>
                A string representation of this class which is identical 
                to <see cref="M:Telerik.Apoc.ApocEventArgs.GetMessage"/>.
            </returns>
        </member>
        <member name="T:Telerik.Apoc.ApocException">
            <summary>
                This exception is thrown by Apoc when an error occurs.
            </summary>
        </member>
        <member name="M:Telerik.Apoc.ApocException.#ctor(System.Exception)">
            <summary>
                Initialises a new instance of the ApocException class.
            </summary>
            <remarks>
                The <see cref="P:System.Exception.Message"/> property will be initialised 
                to <i>innerException.Message</i>
            </remarks>
            <param name="innerException">
                The exception that is the cause of the current exception
            </param>
        </member>
        <member name="M:Telerik.Apoc.ApocException.#ctor(System.String)">
            <summary>
                Initialises a new instance of the ApocException class.
            </summary>
            <param name="message">
                The error message that explains the reason for this exception
            </param>
        </member>
        <member name="M:Telerik.Apoc.ApocException.#ctor(System.String,System.Exception)">
            <summary>
                Initialises a new instance of the ApocException class.
            </summary>
            <param name="message">
                The error message that explains the reason for this exception
            </param>
            <param name="innerException">
                The exception that is the cause of the current exception
            </param>
        </member>
        <member name="T:Telerik.Apoc.StreamRenderer">
            <summary>
                This class acts as a bridge between the XML:FO parser and the 
                formatting/rendering classes. It will queue PageSequences up until 
                all the IDs required by them are satisfied, at which time it will 
                render the pages.
                StreamRenderer is created by Driver and called from FOTreeBuilder 
                when a PageSequence is created, and AreaTree when a Page is formatted.
            </summary>
        </member>
        <member name="F:Telerik.Apoc.StreamRenderer.pageCount">
            <summary>
                Keep track of the number of pages rendered.
            </summary>
        </member>
        <member name="F:Telerik.Apoc.StreamRenderer.renderer">
            <summary>
                The renderer being used.
            </summary>
        </member>
        <member name="F:Telerik.Apoc.StreamRenderer.results">
            <summary>
                The formatting results to be handed back to the caller.
            </summary>
        </member>
        <member name="F:Telerik.Apoc.StreamRenderer.fontInfo">
            <summary>
                The FontInfo for this renderer.
            </summary>
        </member>
        <member name="F:Telerik.Apoc.StreamRenderer.renderQueue">
            <summary>
                The list of pages waiting to be renderered.
            </summary>
        </member>
        <member name="F:Telerik.Apoc.StreamRenderer.idReferences">
            <summary>
                The current set of IDReferences, passed to the areatrees 
                and pages. This is used by the AreaTree as a single map of 
                all IDs.
            </summary>
        </member>
        <member name="F:Telerik.Apoc.StreamRenderer.extensions">
            <summary>
                The list of extensions.
            </summary>
        </member>
        <member name="F:Telerik.Apoc.StreamRenderer.documentMarkers">
            <summary>
                The list of markers.
            </summary>
        </member>
        <member name="M:Telerik.Apoc.StreamRenderer.Render(Telerik.Apoc.Fo.Pagination.PageSequence)">
            <summary>
                Format the PageSequence. The PageSequence formats Pages and adds 
                them to the AreaTree, which subsequently calls the StreamRenderer
                instance (this) again to render the page.  At this time the page 
                might be printed or it might be queued. A page might not be 
                renderable immediately if the IDReferences are not all valid. In 
                this case we defer the rendering until they are all valid.
            </summary>
            <param name="pageSequence"></param>
        </member>
        <member name="M:Telerik.Apoc.StreamRenderer.ProcessQueue(System.Boolean)">
            <summary>
                Try to process the queue from the first entry forward.  If an 
                entry can't be processed, then the queue can't move forward, 
                so return.
            </summary>
            <param name="force"></param>
        </member>
        <member name="M:Telerik.Apoc.StreamRenderer.GetDocumentMarkers">
            <summary>
                Auxillary function for retrieving markers.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Apoc.StreamRenderer.GetCurrentPageSequence">
            <summary>
                Auxillary function for retrieving markers.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Apoc.StreamRenderer.GetCurrentPageSequenceMarkers">
            <summary>
                Auxillary function for retrieving markers.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Telerik.Apoc.StreamRenderer.RenderQueueEntry">
            <summary>
                A RenderQueueEntry consists of the Page to be queued, plus a list 
                of outstanding ID references that need to be resolved before the 
                Page can be renderered.
            </summary>
        </member>
        <member name="F:Telerik.Apoc.StreamRenderer.RenderQueueEntry.page">
            <summary>
                The Page that has outstanding ID references.
            </summary>
        </member>
        <member name="F:Telerik.Apoc.StreamRenderer.RenderQueueEntry.outer">
            <summary>
                MG - to replace the outer this Java nonsense */
            </summary>
        </member>
        <member name="F:Telerik.Apoc.StreamRenderer.RenderQueueEntry.unresolvedIdReferences">
            <summary>
                A list of ID references (names).
            </summary>
        </member>
        <member name="M:Telerik.Apoc.StreamRenderer.RenderQueueEntry.isResolved">
            <summary>
                See if the outstanding references are resolved in the current 
                copy of IDReferences.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Telerik.Apoc.TempFileStream">
            <summary>
                A subclass of FileStream that automatically deletes the file supplied 
                to the class constructor when Close() is invoked
            </summary>
        </member>
        <member name="M:Telerik.Apoc.TempFileStream.#ctor(System.String)">
            <summary>
                Default class constuctor that opens the supplied file <i>filename</i>
                using the FileMode.Open parameter.<br/>
                <see cref="T:System.IO.FileMode"/>
            </summary>
        </member>
        <member name="M:Telerik.Apoc.TempFileStream.Close">
            <summary>
                Overriden.  Attempts to delete the filename supplied to the 
                class constructor using <see cref="M:System.IO.File.Delete(System.String)"/>.  If an 
                exception is thrown, it is caught and ignored
            </summary>
        </member>
        <member name="T:Telerik.Apoc.XslTransformer">
            <summary>
                Provides a static method that applies an 
                XSL stylesheet to an XML document
            </summary>
        </member>
        <member name="M:Telerik.Apoc.XslTransformer.#ctor">
            <summary>
                Private constructor to prevent instantiation
            </summary>
        </member>
        <member name="M:Telerik.Apoc.XslTransformer.Transform(System.String,System.String)">
            <summary>
                Applies the style sheet <i>xslFile</i> to the XML document 
                identified by <i>xmlFile</i>.    
            </summary>
            <param name="xmlFile">Path to an XML document</param>
            <param name="xslFile">Path to an XSL stylesheet</param>
            <returns>A Stream representing a sequence of XSL:FO elements</returns>
            <exception cref="T:Telerik.Apoc.ApocException">
                The files <i>xmlFile</i> and <i>xslFile</i> do not exist or are 
                inaccessible.  The XSL file cannot be compiled
            </exception>
            <remarks>
                This method will create a temporary filename in the system's 
                temporary directory, which is automatically deleted when the 
                returned stream is closed.
                <seealso cref="T:System.Xml.Xsl.XslTransform"/>
            </remarks>
        </member>
    </members>
</doc>
